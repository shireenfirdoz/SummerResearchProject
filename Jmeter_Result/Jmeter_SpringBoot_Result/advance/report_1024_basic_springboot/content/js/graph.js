/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 21183.0, "series": [{"data": [[0.0, 4.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 8.0], [12.6, 8.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 9.0], [14.3, 9.0], [14.4, 9.0], [14.5, 9.0], [14.6, 9.0], [14.7, 9.0], [14.8, 9.0], [14.9, 9.0], [15.0, 9.0], [15.1, 9.0], [15.2, 9.0], [15.3, 9.0], [15.4, 9.0], [15.5, 9.0], [15.6, 9.0], [15.7, 9.0], [15.8, 9.0], [15.9, 9.0], [16.0, 9.0], [16.1, 9.0], [16.2, 9.0], [16.3, 9.0], [16.4, 9.0], [16.5, 9.0], [16.6, 9.0], [16.7, 9.0], [16.8, 9.0], [16.9, 9.0], [17.0, 9.0], [17.1, 9.0], [17.2, 9.0], [17.3, 9.0], [17.4, 9.0], [17.5, 9.0], [17.6, 9.0], [17.7, 9.0], [17.8, 9.0], [17.9, 9.0], [18.0, 9.0], [18.1, 10.0], [18.2, 10.0], [18.3, 10.0], [18.4, 10.0], [18.5, 10.0], [18.6, 10.0], [18.7, 10.0], [18.8, 10.0], [18.9, 10.0], [19.0, 10.0], [19.1, 10.0], [19.2, 10.0], [19.3, 10.0], [19.4, 10.0], [19.5, 10.0], [19.6, 10.0], [19.7, 10.0], [19.8, 10.0], [19.9, 10.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 10.0], [20.6, 10.0], [20.7, 10.0], [20.8, 10.0], [20.9, 11.0], [21.0, 11.0], [21.1, 11.0], [21.2, 11.0], [21.3, 11.0], [21.4, 11.0], [21.5, 11.0], [21.6, 11.0], [21.7, 11.0], [21.8, 11.0], [21.9, 11.0], [22.0, 11.0], [22.1, 11.0], [22.2, 11.0], [22.3, 11.0], [22.4, 11.0], [22.5, 11.0], [22.6, 11.0], [22.7, 11.0], [22.8, 11.0], [22.9, 11.0], [23.0, 11.0], [23.1, 11.0], [23.2, 12.0], [23.3, 12.0], [23.4, 12.0], [23.5, 12.0], [23.6, 12.0], [23.7, 12.0], [23.8, 12.0], [23.9, 12.0], [24.0, 12.0], [24.1, 12.0], [24.2, 12.0], [24.3, 12.0], [24.4, 12.0], [24.5, 12.0], [24.6, 12.0], [24.7, 12.0], [24.8, 12.0], [24.9, 12.0], [25.0, 12.0], [25.1, 12.0], [25.2, 12.0], [25.3, 12.0], [25.4, 13.0], [25.5, 13.0], [25.6, 13.0], [25.7, 13.0], [25.8, 13.0], [25.9, 13.0], [26.0, 13.0], [26.1, 13.0], [26.2, 13.0], [26.3, 13.0], [26.4, 13.0], [26.5, 13.0], [26.6, 14.0], [26.7, 14.0], [26.8, 14.0], [26.9, 14.0], [27.0, 14.0], [27.1, 14.0], [27.2, 14.0], [27.3, 14.0], [27.4, 14.0], [27.5, 14.0], [27.6, 15.0], [27.7, 15.0], [27.8, 15.0], [27.9, 15.0], [28.0, 15.0], [28.1, 15.0], [28.2, 15.0], [28.3, 15.0], [28.4, 15.0], [28.5, 16.0], [28.6, 16.0], [28.7, 16.0], [28.8, 16.0], [28.9, 16.0], [29.0, 16.0], [29.1, 16.0], [29.2, 16.0], [29.3, 16.0], [29.4, 16.0], [29.5, 17.0], [29.6, 17.0], [29.7, 17.0], [29.8, 17.0], [29.9, 17.0], [30.0, 18.0], [30.1, 18.0], [30.2, 18.0], [30.3, 18.0], [30.4, 18.0], [30.5, 19.0], [30.6, 19.0], [30.7, 19.0], [30.8, 19.0], [30.9, 19.0], [31.0, 20.0], [31.1, 20.0], [31.2, 20.0], [31.3, 20.0], [31.4, 20.0], [31.5, 20.0], [31.6, 21.0], [31.7, 21.0], [31.8, 21.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 23.0], [32.3, 23.0], [32.4, 23.0], [32.5, 23.0], [32.6, 24.0], [32.7, 24.0], [32.8, 24.0], [32.9, 24.0], [33.0, 24.0], [33.1, 25.0], [33.2, 25.0], [33.3, 25.0], [33.4, 26.0], [33.5, 26.0], [33.6, 26.0], [33.7, 27.0], [33.8, 27.0], [33.9, 28.0], [34.0, 28.0], [34.1, 28.0], [34.2, 28.0], [34.3, 29.0], [34.4, 29.0], [34.5, 29.0], [34.6, 30.0], [34.7, 30.0], [34.8, 31.0], [34.9, 31.0], [35.0, 32.0], [35.1, 32.0], [35.2, 32.0], [35.3, 32.0], [35.4, 33.0], [35.5, 33.0], [35.6, 34.0], [35.7, 34.0], [35.8, 35.0], [35.9, 35.0], [36.0, 36.0], [36.1, 36.0], [36.2, 36.0], [36.3, 36.0], [36.4, 37.0], [36.5, 37.0], [36.6, 38.0], [36.7, 38.0], [36.8, 39.0], [36.9, 40.0], [37.0, 40.0], [37.1, 40.0], [37.2, 40.0], [37.3, 41.0], [37.4, 42.0], [37.5, 42.0], [37.6, 43.0], [37.7, 43.0], [37.8, 44.0], [37.9, 44.0], [38.0, 44.0], [38.1, 45.0], [38.2, 45.0], [38.3, 46.0], [38.4, 46.0], [38.5, 47.0], [38.6, 47.0], [38.7, 48.0], [38.8, 48.0], [38.9, 48.0], [39.0, 49.0], [39.1, 49.0], [39.2, 50.0], [39.3, 50.0], [39.4, 51.0], [39.5, 52.0], [39.6, 52.0], [39.7, 52.0], [39.8, 53.0], [39.9, 53.0], [40.0, 54.0], [40.1, 54.0], [40.2, 55.0], [40.3, 55.0], [40.4, 56.0], [40.5, 56.0], [40.6, 57.0], [40.7, 57.0], [40.8, 58.0], [40.9, 59.0], [41.0, 59.0], [41.1, 60.0], [41.2, 60.0], [41.3, 61.0], [41.4, 61.0], [41.5, 62.0], [41.6, 62.0], [41.7, 63.0], [41.8, 64.0], [41.9, 64.0], [42.0, 64.0], [42.1, 65.0], [42.2, 66.0], [42.3, 66.0], [42.4, 67.0], [42.5, 68.0], [42.6, 68.0], [42.7, 68.0], [42.8, 69.0], [42.9, 69.0], [43.0, 70.0], [43.1, 70.0], [43.2, 71.0], [43.3, 72.0], [43.4, 72.0], [43.5, 72.0], [43.6, 73.0], [43.7, 74.0], [43.8, 74.0], [43.9, 75.0], [44.0, 75.0], [44.1, 76.0], [44.2, 76.0], [44.3, 77.0], [44.4, 77.0], [44.5, 78.0], [44.6, 79.0], [44.7, 79.0], [44.8, 80.0], [44.9, 80.0], [45.0, 80.0], [45.1, 81.0], [45.2, 81.0], [45.3, 82.0], [45.4, 82.0], [45.5, 83.0], [45.6, 83.0], [45.7, 84.0], [45.8, 84.0], [45.9, 84.0], [46.0, 85.0], [46.1, 85.0], [46.2, 86.0], [46.3, 87.0], [46.4, 87.0], [46.5, 88.0], [46.6, 88.0], [46.7, 89.0], [46.8, 89.0], [46.9, 90.0], [47.0, 90.0], [47.1, 91.0], [47.2, 91.0], [47.3, 92.0], [47.4, 92.0], [47.5, 92.0], [47.6, 93.0], [47.7, 93.0], [47.8, 94.0], [47.9, 94.0], [48.0, 94.0], [48.1, 95.0], [48.2, 95.0], [48.3, 96.0], [48.4, 96.0], [48.5, 97.0], [48.6, 97.0], [48.7, 98.0], [48.8, 98.0], [48.9, 99.0], [49.0, 99.0], [49.1, 100.0], [49.2, 100.0], [49.3, 101.0], [49.4, 101.0], [49.5, 102.0], [49.6, 103.0], [49.7, 104.0], [49.8, 104.0], [49.9, 105.0], [50.0, 106.0], [50.1, 107.0], [50.2, 108.0], [50.3, 108.0], [50.4, 109.0], [50.5, 110.0], [50.6, 112.0], [50.7, 112.0], [50.8, 114.0], [50.9, 115.0], [51.0, 116.0], [51.1, 117.0], [51.2, 118.0], [51.3, 120.0], [51.4, 120.0], [51.5, 122.0], [51.6, 123.0], [51.7, 124.0], [51.8, 125.0], [51.9, 127.0], [52.0, 128.0], [52.1, 130.0], [52.2, 132.0], [52.3, 133.0], [52.4, 135.0], [52.5, 137.0], [52.6, 139.0], [52.7, 141.0], [52.8, 143.0], [52.9, 144.0], [53.0, 146.0], [53.1, 147.0], [53.2, 149.0], [53.3, 151.0], [53.4, 154.0], [53.5, 156.0], [53.6, 157.0], [53.7, 159.0], [53.8, 160.0], [53.9, 162.0], [54.0, 164.0], [54.1, 167.0], [54.2, 169.0], [54.3, 171.0], [54.4, 173.0], [54.5, 175.0], [54.6, 176.0], [54.7, 178.0], [54.8, 179.0], [54.9, 181.0], [55.0, 183.0], [55.1, 184.0], [55.2, 185.0], [55.3, 187.0], [55.4, 188.0], [55.5, 190.0], [55.6, 191.0], [55.7, 193.0], [55.8, 194.0], [55.9, 196.0], [56.0, 197.0], [56.1, 199.0], [56.2, 200.0], [56.3, 201.0], [56.4, 203.0], [56.5, 204.0], [56.6, 205.0], [56.7, 207.0], [56.8, 208.0], [56.9, 209.0], [57.0, 211.0], [57.1, 212.0], [57.2, 213.0], [57.3, 215.0], [57.4, 216.0], [57.5, 218.0], [57.6, 220.0], [57.7, 221.0], [57.8, 223.0], [57.9, 224.0], [58.0, 226.0], [58.1, 229.0], [58.2, 231.0], [58.3, 233.0], [58.4, 236.0], [58.5, 239.0], [58.6, 241.0], [58.7, 245.0], [58.8, 247.0], [58.9, 250.0], [59.0, 252.0], [59.1, 255.0], [59.2, 257.0], [59.3, 260.0], [59.4, 262.0], [59.5, 264.0], [59.6, 266.0], [59.7, 268.0], [59.8, 270.0], [59.9, 272.0], [60.0, 274.0], [60.1, 276.0], [60.2, 278.0], [60.3, 279.0], [60.4, 281.0], [60.5, 282.0], [60.6, 284.0], [60.7, 286.0], [60.8, 287.0], [60.9, 289.0], [61.0, 290.0], [61.1, 292.0], [61.2, 293.0], [61.3, 295.0], [61.4, 296.0], [61.5, 297.0], [61.6, 299.0], [61.7, 300.0], [61.8, 301.0], [61.9, 301.0], [62.0, 303.0], [62.1, 303.0], [62.2, 305.0], [62.3, 306.0], [62.4, 307.0], [62.5, 308.0], [62.6, 310.0], [62.7, 312.0], [62.8, 313.0], [62.9, 315.0], [63.0, 317.0], [63.1, 319.0], [63.2, 321.0], [63.3, 323.0], [63.4, 325.0], [63.5, 328.0], [63.6, 330.0], [63.7, 332.0], [63.8, 335.0], [63.9, 337.0], [64.0, 340.0], [64.1, 344.0], [64.2, 346.0], [64.3, 349.0], [64.4, 352.0], [64.5, 355.0], [64.6, 357.0], [64.7, 360.0], [64.8, 363.0], [64.9, 365.0], [65.0, 367.0], [65.1, 370.0], [65.2, 372.0], [65.3, 374.0], [65.4, 376.0], [65.5, 378.0], [65.6, 380.0], [65.7, 381.0], [65.8, 383.0], [65.9, 384.0], [66.0, 386.0], [66.1, 387.0], [66.2, 388.0], [66.3, 390.0], [66.4, 391.0], [66.5, 393.0], [66.6, 394.0], [66.7, 395.0], [66.8, 396.0], [66.9, 398.0], [67.0, 399.0], [67.1, 400.0], [67.2, 401.0], [67.3, 403.0], [67.4, 404.0], [67.5, 405.0], [67.6, 407.0], [67.7, 408.0], [67.8, 410.0], [67.9, 411.0], [68.0, 413.0], [68.1, 415.0], [68.2, 417.0], [68.3, 419.0], [68.4, 421.0], [68.5, 423.0], [68.6, 426.0], [68.7, 429.0], [68.8, 432.0], [68.9, 435.0], [69.0, 438.0], [69.1, 441.0], [69.2, 445.0], [69.3, 449.0], [69.4, 452.0], [69.5, 455.0], [69.6, 458.0], [69.7, 461.0], [69.8, 464.0], [69.9, 466.0], [70.0, 468.0], [70.1, 471.0], [70.2, 473.0], [70.3, 475.0], [70.4, 477.0], [70.5, 479.0], [70.6, 480.0], [70.7, 482.0], [70.8, 484.0], [70.9, 486.0], [71.0, 488.0], [71.1, 490.0], [71.2, 491.0], [71.3, 493.0], [71.4, 495.0], [71.5, 496.0], [71.6, 498.0], [71.7, 499.0], [71.8, 501.0], [71.9, 502.0], [72.0, 504.0], [72.1, 505.0], [72.2, 507.0], [72.3, 509.0], [72.4, 510.0], [72.5, 512.0], [72.6, 514.0], [72.7, 516.0], [72.8, 518.0], [72.9, 520.0], [73.0, 522.0], [73.1, 525.0], [73.2, 528.0], [73.3, 531.0], [73.4, 535.0], [73.5, 539.0], [73.6, 543.0], [73.7, 547.0], [73.8, 552.0], [73.9, 557.0], [74.0, 561.0], [74.1, 565.0], [74.2, 569.0], [74.3, 572.0], [74.4, 576.0], [74.5, 579.0], [74.6, 582.0], [74.7, 585.0], [74.8, 588.0], [74.9, 590.0], [75.0, 592.0], [75.1, 594.0], [75.2, 596.0], [75.3, 598.0], [75.4, 600.0], [75.5, 602.0], [75.6, 603.0], [75.7, 606.0], [75.8, 608.0], [75.9, 610.0], [76.0, 613.0], [76.1, 616.0], [76.2, 619.0], [76.3, 623.0], [76.4, 627.0], [76.5, 632.0], [76.6, 636.0], [76.7, 644.0], [76.8, 651.0], [76.9, 658.0], [77.0, 666.0], [77.1, 673.0], [77.2, 678.0], [77.3, 681.0], [77.4, 684.0], [77.5, 687.0], [77.6, 691.0], [77.7, 693.0], [77.8, 696.0], [77.9, 699.0], [78.0, 701.0], [78.1, 704.0], [78.2, 707.0], [78.3, 710.0], [78.4, 713.0], [78.5, 717.0], [78.6, 721.0], [78.7, 727.0], [78.8, 733.0], [78.9, 741.0], [79.0, 748.0], [79.1, 758.0], [79.2, 768.0], [79.3, 775.0], [79.4, 780.0], [79.5, 783.0], [79.6, 787.0], [79.7, 791.0], [79.8, 795.0], [79.9, 799.0], [80.0, 802.0], [80.1, 805.0], [80.2, 810.0], [80.3, 815.0], [80.4, 820.0], [80.5, 826.0], [80.6, 836.0], [80.7, 846.0], [80.8, 859.0], [80.9, 868.0], [81.0, 877.0], [81.1, 884.0], [81.2, 889.0], [81.3, 894.0], [81.4, 899.0], [81.5, 903.0], [81.6, 909.0], [81.7, 914.0], [81.8, 921.0], [81.9, 930.0], [82.0, 941.0], [82.1, 958.0], [82.2, 970.0], [82.3, 980.0], [82.4, 988.0], [82.5, 995.0], [82.6, 1000.0], [82.7, 1006.0], [82.8, 1012.0], [82.9, 1018.0], [83.0, 1026.0], [83.1, 1035.0], [83.2, 1047.0], [83.3, 1061.0], [83.4, 1075.0], [83.5, 1085.0], [83.6, 1094.0], [83.7, 1100.0], [83.8, 1105.0], [83.9, 1111.0], [84.0, 1121.0], [84.1, 1130.0], [84.2, 1141.0], [84.3, 1156.0], [84.4, 1175.0], [84.5, 1188.0], [84.6, 1196.0], [84.7, 1201.0], [84.8, 1206.0], [84.9, 1213.0], [85.0, 1222.0], [85.1, 1237.0], [85.2, 1253.0], [85.3, 1271.0], [85.4, 1283.0], [85.5, 1292.0], [85.6, 1301.0], [85.7, 1308.0], [85.8, 1315.0], [85.9, 1325.0], [86.0, 1341.0], [86.1, 1360.0], [86.2, 1378.0], [86.3, 1392.0], [86.4, 1400.0], [86.5, 1412.0], [86.6, 1428.0], [86.7, 1458.0], [86.8, 1483.0], [86.9, 1498.0], [87.0, 1511.0], [87.1, 1534.0], [87.2, 1557.0], [87.3, 1584.0], [87.4, 1601.0], [87.5, 1617.0], [87.6, 1639.0], [87.7, 1667.0], [87.8, 1690.0], [87.9, 1702.0], [88.0, 1722.0], [88.1, 1758.0], [88.2, 1785.0], [88.3, 1808.0], [88.4, 1831.0], [88.5, 1868.0], [88.6, 1897.0], [88.7, 1917.0], [88.8, 1959.0], [88.9, 1987.0], [89.0, 2009.0], [89.1, 2037.0], [89.2, 2067.0], [89.3, 2101.0], [89.4, 2121.0], [89.5, 2153.0], [89.6, 2190.0], [89.7, 2214.0], [89.8, 2249.0], [89.9, 2288.0], [90.0, 2317.0], [90.1, 2356.0], [90.2, 2391.0], [90.3, 2423.0], [90.4, 2457.0], [90.5, 2493.0], [90.6, 2513.0], [90.7, 2546.0], [90.8, 2584.0], [90.9, 2612.0], [91.0, 2660.0], [91.1, 2700.0], [91.2, 2742.0], [91.3, 2788.0], [91.4, 2820.0], [91.5, 2874.0], [91.6, 2905.0], [91.7, 2938.0], [91.8, 2982.0], [91.9, 3005.0], [92.0, 3050.0], [92.1, 3096.0], [92.2, 3129.0], [92.3, 3176.0], [92.4, 3203.0], [92.5, 3263.0], [92.6, 3300.0], [92.7, 3341.0], [92.8, 3388.0], [92.9, 3434.0], [93.0, 3485.0], [93.1, 3507.0], [93.2, 3558.0], [93.3, 3594.0], [93.4, 3616.0], [93.5, 3677.0], [93.6, 3703.0], [93.7, 3752.0], [93.8, 3785.0], [93.9, 3811.0], [94.0, 3849.0], [94.1, 3891.0], [94.2, 3914.0], [94.3, 3973.0], [94.4, 3999.0], [94.5, 4063.0], [94.6, 4099.0], [94.7, 4167.0], [94.8, 4198.0], [94.9, 4227.0], [95.0, 4286.0], [95.1, 4316.0], [95.2, 4388.0], [95.3, 4415.0], [95.4, 4486.0], [95.5, 4504.0], [95.6, 4574.0], [95.7, 4600.0], [95.8, 4632.0], [95.9, 4686.0], [96.0, 4703.0], [96.1, 4720.0], [96.2, 4783.0], [96.3, 4805.0], [96.4, 4853.0], [96.5, 4900.0], [96.6, 4977.0], [96.7, 5010.0], [96.8, 5083.0], [96.9, 5149.0], [97.0, 5208.0], [97.1, 5296.0], [97.2, 5401.0], [97.3, 5562.0], [97.4, 5746.0], [97.5, 5854.0], [97.6, 5978.0], [97.7, 6080.0], [97.8, 6343.0], [97.9, 6638.0], [98.0, 6985.0], [98.1, 7416.0], [98.2, 7788.0], [98.3, 7959.0], [98.4, 8045.0], [98.5, 8123.0], [98.6, 8197.0], [98.7, 8365.0], [98.8, 8557.0], [98.9, 8805.0], [99.0, 9037.0], [99.1, 9248.0], [99.2, 9434.0], [99.3, 9577.0], [99.4, 9697.0], [99.5, 9803.0], [99.6, 9997.0], [99.7, 10094.0], [99.8, 10173.0], [99.9, 10413.0]], "isOverall": false, "label": "post", "isController": false}, {"data": [[0.0, 6.0], [0.1, 7.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 9.0], [1.1, 11.0], [1.2, 12.0], [1.3, 12.0], [1.4, 12.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 14.0], [2.0, 14.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 15.0], [2.5, 15.0], [2.6, 15.0], [2.7, 15.0], [2.8, 15.0], [2.9, 15.0], [3.0, 15.0], [3.1, 15.0], [3.2, 16.0], [3.3, 16.0], [3.4, 16.0], [3.5, 16.0], [3.6, 16.0], [3.7, 16.0], [3.8, 16.0], [3.9, 16.0], [4.0, 16.0], [4.1, 17.0], [4.2, 17.0], [4.3, 17.0], [4.4, 17.0], [4.5, 17.0], [4.6, 17.0], [4.7, 17.0], [4.8, 17.0], [4.9, 18.0], [5.0, 18.0], [5.1, 18.0], [5.2, 18.0], [5.3, 18.0], [5.4, 18.0], [5.5, 18.0], [5.6, 19.0], [5.7, 19.0], [5.8, 19.0], [5.9, 19.0], [6.0, 19.0], [6.1, 19.0], [6.2, 19.0], [6.3, 20.0], [6.4, 20.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 21.0], [7.1, 21.0], [7.2, 21.0], [7.3, 21.0], [7.4, 21.0], [7.5, 21.0], [7.6, 22.0], [7.7, 22.0], [7.8, 22.0], [7.9, 22.0], [8.0, 23.0], [8.1, 23.0], [8.2, 23.0], [8.3, 23.0], [8.4, 23.0], [8.5, 24.0], [8.6, 24.0], [8.7, 24.0], [8.8, 24.0], [8.9, 24.0], [9.0, 24.0], [9.1, 25.0], [9.2, 25.0], [9.3, 25.0], [9.4, 25.0], [9.5, 25.0], [9.6, 26.0], [9.7, 26.0], [9.8, 26.0], [9.9, 27.0], [10.0, 27.0], [10.1, 27.0], [10.2, 27.0], [10.3, 28.0], [10.4, 28.0], [10.5, 28.0], [10.6, 28.0], [10.7, 28.0], [10.8, 29.0], [10.9, 29.0], [11.0, 29.0], [11.1, 29.0], [11.2, 30.0], [11.3, 30.0], [11.4, 30.0], [11.5, 31.0], [11.6, 31.0], [11.7, 31.0], [11.8, 31.0], [11.9, 32.0], [12.0, 32.0], [12.1, 32.0], [12.2, 32.0], [12.3, 33.0], [12.4, 33.0], [12.5, 33.0], [12.6, 34.0], [12.7, 34.0], [12.8, 34.0], [12.9, 35.0], [13.0, 35.0], [13.1, 35.0], [13.2, 36.0], [13.3, 36.0], [13.4, 36.0], [13.5, 36.0], [13.6, 37.0], [13.7, 37.0], [13.8, 37.0], [13.9, 38.0], [14.0, 38.0], [14.1, 38.0], [14.2, 39.0], [14.3, 39.0], [14.4, 39.0], [14.5, 40.0], [14.6, 40.0], [14.7, 40.0], [14.8, 40.0], [14.9, 41.0], [15.0, 41.0], [15.1, 41.0], [15.2, 42.0], [15.3, 42.0], [15.4, 42.0], [15.5, 43.0], [15.6, 43.0], [15.7, 44.0], [15.8, 44.0], [15.9, 44.0], [16.0, 44.0], [16.1, 45.0], [16.2, 45.0], [16.3, 46.0], [16.4, 46.0], [16.5, 46.0], [16.6, 47.0], [16.7, 47.0], [16.8, 47.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 49.0], [17.3, 49.0], [17.4, 49.0], [17.5, 50.0], [17.6, 50.0], [17.7, 51.0], [17.8, 51.0], [17.9, 51.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 53.0], [18.5, 53.0], [18.6, 54.0], [18.7, 54.0], [18.8, 55.0], [18.9, 55.0], [19.0, 55.0], [19.1, 56.0], [19.2, 56.0], [19.3, 56.0], [19.4, 57.0], [19.5, 57.0], [19.6, 58.0], [19.7, 58.0], [19.8, 59.0], [19.9, 59.0], [20.0, 59.0], [20.1, 60.0], [20.2, 60.0], [20.3, 60.0], [20.4, 61.0], [20.5, 61.0], [20.6, 61.0], [20.7, 62.0], [20.8, 62.0], [20.9, 63.0], [21.0, 63.0], [21.1, 64.0], [21.2, 64.0], [21.3, 64.0], [21.4, 65.0], [21.5, 65.0], [21.6, 66.0], [21.7, 66.0], [21.8, 66.0], [21.9, 67.0], [22.0, 67.0], [22.1, 68.0], [22.2, 68.0], [22.3, 68.0], [22.4, 69.0], [22.5, 69.0], [22.6, 70.0], [22.7, 70.0], [22.8, 71.0], [22.9, 71.0], [23.0, 72.0], [23.1, 72.0], [23.2, 72.0], [23.3, 73.0], [23.4, 73.0], [23.5, 74.0], [23.6, 74.0], [23.7, 75.0], [23.8, 75.0], [23.9, 76.0], [24.0, 76.0], [24.1, 76.0], [24.2, 77.0], [24.3, 77.0], [24.4, 78.0], [24.5, 78.0], [24.6, 79.0], [24.7, 79.0], [24.8, 80.0], [24.9, 80.0], [25.0, 80.0], [25.1, 81.0], [25.2, 81.0], [25.3, 82.0], [25.4, 82.0], [25.5, 83.0], [25.6, 83.0], [25.7, 84.0], [25.8, 84.0], [25.9, 85.0], [26.0, 85.0], [26.1, 85.0], [26.2, 86.0], [26.3, 87.0], [26.4, 87.0], [26.5, 88.0], [26.6, 88.0], [26.7, 88.0], [26.8, 89.0], [26.9, 89.0], [27.0, 90.0], [27.1, 90.0], [27.2, 90.0], [27.3, 91.0], [27.4, 91.0], [27.5, 92.0], [27.6, 92.0], [27.7, 93.0], [27.8, 93.0], [27.9, 93.0], [28.0, 94.0], [28.1, 94.0], [28.2, 95.0], [28.3, 95.0], [28.4, 96.0], [28.5, 96.0], [28.6, 96.0], [28.7, 97.0], [28.8, 97.0], [28.9, 98.0], [29.0, 98.0], [29.1, 98.0], [29.2, 99.0], [29.3, 99.0], [29.4, 100.0], [29.5, 100.0], [29.6, 100.0], [29.7, 101.0], [29.8, 101.0], [29.9, 102.0], [30.0, 102.0], [30.1, 103.0], [30.2, 103.0], [30.3, 104.0], [30.4, 104.0], [30.5, 105.0], [30.6, 106.0], [30.7, 106.0], [30.8, 107.0], [30.9, 108.0], [31.0, 108.0], [31.1, 109.0], [31.2, 110.0], [31.3, 111.0], [31.4, 111.0], [31.5, 112.0], [31.6, 113.0], [31.7, 114.0], [31.8, 115.0], [31.9, 116.0], [32.0, 117.0], [32.1, 118.0], [32.2, 119.0], [32.3, 120.0], [32.4, 121.0], [32.5, 122.0], [32.6, 124.0], [32.7, 125.0], [32.8, 126.0], [32.9, 127.0], [33.0, 128.0], [33.1, 129.0], [33.2, 131.0], [33.3, 132.0], [33.4, 134.0], [33.5, 136.0], [33.6, 137.0], [33.7, 138.0], [33.8, 140.0], [33.9, 141.0], [34.0, 143.0], [34.1, 144.0], [34.2, 145.0], [34.3, 147.0], [34.4, 148.0], [34.5, 150.0], [34.6, 152.0], [34.7, 153.0], [34.8, 155.0], [34.9, 156.0], [35.0, 158.0], [35.1, 160.0], [35.2, 161.0], [35.3, 163.0], [35.4, 165.0], [35.5, 166.0], [35.6, 168.0], [35.7, 170.0], [35.8, 172.0], [35.9, 173.0], [36.0, 175.0], [36.1, 177.0], [36.2, 178.0], [36.3, 180.0], [36.4, 181.0], [36.5, 183.0], [36.6, 185.0], [36.7, 187.0], [36.8, 188.0], [36.9, 189.0], [37.0, 191.0], [37.1, 192.0], [37.2, 193.0], [37.3, 194.0], [37.4, 196.0], [37.5, 197.0], [37.6, 199.0], [37.7, 200.0], [37.8, 201.0], [37.9, 203.0], [38.0, 204.0], [38.1, 205.0], [38.2, 207.0], [38.3, 208.0], [38.4, 209.0], [38.5, 211.0], [38.6, 212.0], [38.7, 213.0], [38.8, 215.0], [38.9, 216.0], [39.0, 218.0], [39.1, 220.0], [39.2, 221.0], [39.3, 222.0], [39.4, 224.0], [39.5, 226.0], [39.6, 227.0], [39.7, 228.0], [39.8, 230.0], [39.9, 232.0], [40.0, 233.0], [40.1, 235.0], [40.2, 237.0], [40.3, 239.0], [40.4, 241.0], [40.5, 244.0], [40.6, 245.0], [40.7, 247.0], [40.8, 249.0], [40.9, 251.0], [41.0, 254.0], [41.1, 256.0], [41.2, 258.0], [41.3, 260.0], [41.4, 262.0], [41.5, 265.0], [41.6, 267.0], [41.7, 269.0], [41.8, 271.0], [41.9, 273.0], [42.0, 275.0], [42.1, 276.0], [42.2, 278.0], [42.3, 280.0], [42.4, 281.0], [42.5, 283.0], [42.6, 284.0], [42.7, 285.0], [42.8, 287.0], [42.9, 288.0], [43.0, 289.0], [43.1, 290.0], [43.2, 291.0], [43.3, 292.0], [43.4, 294.0], [43.5, 295.0], [43.6, 296.0], [43.7, 297.0], [43.8, 298.0], [43.9, 299.0], [44.0, 300.0], [44.1, 301.0], [44.2, 302.0], [44.3, 303.0], [44.4, 304.0], [44.5, 305.0], [44.6, 307.0], [44.7, 308.0], [44.8, 309.0], [44.9, 310.0], [45.0, 311.0], [45.1, 312.0], [45.2, 314.0], [45.3, 316.0], [45.4, 317.0], [45.5, 318.0], [45.6, 320.0], [45.7, 321.0], [45.8, 323.0], [45.9, 324.0], [46.0, 326.0], [46.1, 328.0], [46.2, 330.0], [46.3, 331.0], [46.4, 333.0], [46.5, 335.0], [46.6, 338.0], [46.7, 340.0], [46.8, 342.0], [46.9, 344.0], [47.0, 346.0], [47.1, 348.0], [47.2, 352.0], [47.3, 354.0], [47.4, 356.0], [47.5, 359.0], [47.6, 361.0], [47.7, 364.0], [47.8, 366.0], [47.9, 368.0], [48.0, 370.0], [48.1, 372.0], [48.2, 373.0], [48.3, 375.0], [48.4, 377.0], [48.5, 378.0], [48.6, 380.0], [48.7, 381.0], [48.8, 383.0], [48.9, 384.0], [49.0, 386.0], [49.1, 387.0], [49.2, 388.0], [49.3, 389.0], [49.4, 390.0], [49.5, 391.0], [49.6, 392.0], [49.7, 394.0], [49.8, 395.0], [49.9, 396.0], [50.0, 397.0], [50.1, 399.0], [50.2, 400.0], [50.3, 401.0], [50.4, 402.0], [50.5, 403.0], [50.6, 404.0], [50.7, 405.0], [50.8, 406.0], [50.9, 408.0], [51.0, 409.0], [51.1, 410.0], [51.2, 412.0], [51.3, 413.0], [51.4, 415.0], [51.5, 416.0], [51.6, 417.0], [51.7, 419.0], [51.8, 421.0], [51.9, 423.0], [52.0, 425.0], [52.1, 427.0], [52.2, 428.0], [52.3, 431.0], [52.4, 432.0], [52.5, 434.0], [52.6, 436.0], [52.7, 439.0], [52.8, 442.0], [52.9, 444.0], [53.0, 447.0], [53.1, 450.0], [53.2, 454.0], [53.3, 457.0], [53.4, 459.0], [53.5, 462.0], [53.6, 465.0], [53.7, 468.0], [53.8, 470.0], [53.9, 472.0], [54.0, 474.0], [54.1, 476.0], [54.2, 478.0], [54.3, 480.0], [54.4, 481.0], [54.5, 483.0], [54.6, 484.0], [54.7, 486.0], [54.8, 487.0], [54.9, 488.0], [55.0, 490.0], [55.1, 491.0], [55.2, 492.0], [55.3, 493.0], [55.4, 495.0], [55.5, 496.0], [55.6, 497.0], [55.7, 499.0], [55.8, 500.0], [55.9, 501.0], [56.0, 502.0], [56.1, 503.0], [56.2, 504.0], [56.3, 506.0], [56.4, 507.0], [56.5, 509.0], [56.6, 510.0], [56.7, 512.0], [56.8, 514.0], [56.9, 515.0], [57.0, 517.0], [57.1, 519.0], [57.2, 521.0], [57.3, 524.0], [57.4, 526.0], [57.5, 528.0], [57.6, 531.0], [57.7, 534.0], [57.8, 537.0], [57.9, 540.0], [58.0, 544.0], [58.1, 548.0], [58.2, 552.0], [58.3, 556.0], [58.4, 559.0], [58.5, 562.0], [58.6, 565.0], [58.7, 568.0], [58.8, 571.0], [58.9, 573.0], [59.0, 576.0], [59.1, 578.0], [59.2, 581.0], [59.3, 583.0], [59.4, 585.0], [59.5, 587.0], [59.6, 589.0], [59.7, 591.0], [59.8, 592.0], [59.9, 594.0], [60.0, 596.0], [60.1, 597.0], [60.2, 599.0], [60.3, 600.0], [60.4, 602.0], [60.5, 603.0], [60.6, 605.0], [60.7, 607.0], [60.8, 608.0], [60.9, 610.0], [61.0, 612.0], [61.1, 614.0], [61.2, 616.0], [61.3, 618.0], [61.4, 620.0], [61.5, 622.0], [61.6, 625.0], [61.7, 627.0], [61.8, 631.0], [61.9, 634.0], [62.0, 638.0], [62.1, 642.0], [62.2, 647.0], [62.3, 652.0], [62.4, 656.0], [62.5, 662.0], [62.6, 667.0], [62.7, 671.0], [62.8, 675.0], [62.9, 678.0], [63.0, 681.0], [63.1, 684.0], [63.2, 687.0], [63.3, 689.0], [63.4, 692.0], [63.5, 693.0], [63.6, 696.0], [63.7, 698.0], [63.8, 700.0], [63.9, 702.0], [64.0, 704.0], [64.1, 706.0], [64.2, 708.0], [64.3, 710.0], [64.4, 713.0], [64.5, 716.0], [64.6, 718.0], [64.7, 722.0], [64.8, 726.0], [64.9, 730.0], [65.0, 734.0], [65.1, 738.0], [65.2, 742.0], [65.3, 747.0], [65.4, 751.0], [65.5, 756.0], [65.6, 761.0], [65.7, 767.0], [65.8, 772.0], [65.9, 776.0], [66.0, 779.0], [66.1, 783.0], [66.2, 786.0], [66.3, 788.0], [66.4, 791.0], [66.5, 794.0], [66.6, 796.0], [66.7, 798.0], [66.8, 800.0], [66.9, 803.0], [67.0, 805.0], [67.1, 808.0], [67.2, 811.0], [67.3, 813.0], [67.4, 816.0], [67.5, 820.0], [67.6, 824.0], [67.7, 828.0], [67.8, 833.0], [67.9, 839.0], [68.0, 844.0], [68.1, 849.0], [68.2, 855.0], [68.3, 860.0], [68.4, 866.0], [68.5, 871.0], [68.6, 876.0], [68.7, 879.0], [68.8, 884.0], [68.9, 887.0], [69.0, 890.0], [69.1, 893.0], [69.2, 896.0], [69.3, 899.0], [69.4, 901.0], [69.5, 905.0], [69.6, 907.0], [69.7, 910.0], [69.8, 914.0], [69.9, 918.0], [70.0, 922.0], [70.1, 926.0], [70.2, 931.0], [70.3, 936.0], [70.4, 941.0], [70.5, 947.0], [70.6, 955.0], [70.7, 962.0], [70.8, 968.0], [70.9, 975.0], [71.0, 980.0], [71.1, 986.0], [71.2, 990.0], [71.3, 994.0], [71.4, 997.0], [71.5, 1002.0], [71.6, 1004.0], [71.7, 1008.0], [71.8, 1012.0], [71.9, 1017.0], [72.0, 1022.0], [72.1, 1026.0], [72.2, 1033.0], [72.3, 1040.0], [72.4, 1046.0], [72.5, 1054.0], [72.6, 1062.0], [72.7, 1069.0], [72.8, 1076.0], [72.9, 1082.0], [73.0, 1088.0], [73.1, 1093.0], [73.2, 1097.0], [73.3, 1101.0], [73.4, 1104.0], [73.5, 1109.0], [73.6, 1113.0], [73.7, 1117.0], [73.8, 1122.0], [73.9, 1127.0], [74.0, 1134.0], [74.1, 1141.0], [74.2, 1149.0], [74.3, 1155.0], [74.4, 1164.0], [74.5, 1172.0], [74.6, 1179.0], [74.7, 1183.0], [74.8, 1188.0], [74.9, 1194.0], [75.0, 1197.0], [75.1, 1201.0], [75.2, 1206.0], [75.3, 1210.0], [75.4, 1213.0], [75.5, 1217.0], [75.6, 1222.0], [75.7, 1227.0], [75.8, 1233.0], [75.9, 1240.0], [76.0, 1247.0], [76.1, 1255.0], [76.2, 1263.0], [76.3, 1271.0], [76.4, 1279.0], [76.5, 1284.0], [76.6, 1289.0], [76.7, 1295.0], [76.8, 1298.0], [76.9, 1304.0], [77.0, 1308.0], [77.1, 1313.0], [77.2, 1319.0], [77.3, 1324.0], [77.4, 1330.0], [77.5, 1338.0], [77.6, 1347.0], [77.7, 1354.0], [77.8, 1363.0], [77.9, 1371.0], [78.0, 1378.0], [78.1, 1385.0], [78.2, 1390.0], [78.3, 1396.0], [78.4, 1400.0], [78.5, 1406.0], [78.6, 1412.0], [78.7, 1418.0], [78.8, 1424.0], [78.9, 1432.0], [79.0, 1440.0], [79.1, 1448.0], [79.2, 1455.0], [79.3, 1465.0], [79.4, 1473.0], [79.5, 1483.0], [79.6, 1492.0], [79.7, 1500.0], [79.8, 1508.0], [79.9, 1516.0], [80.0, 1525.0], [80.1, 1534.0], [80.2, 1546.0], [80.3, 1557.0], [80.4, 1568.0], [80.5, 1580.0], [80.6, 1593.0], [80.7, 1601.0], [80.8, 1611.0], [80.9, 1620.0], [81.0, 1628.0], [81.1, 1639.0], [81.2, 1651.0], [81.3, 1662.0], [81.4, 1676.0], [81.5, 1686.0], [81.6, 1693.0], [81.7, 1701.0], [81.8, 1711.0], [81.9, 1719.0], [82.0, 1729.0], [82.1, 1740.0], [82.2, 1751.0], [82.3, 1761.0], [82.4, 1773.0], [82.5, 1784.0], [82.6, 1795.0], [82.7, 1804.0], [82.8, 1816.0], [82.9, 1829.0], [83.0, 1839.0], [83.1, 1851.0], [83.2, 1864.0], [83.3, 1880.0], [83.4, 1892.0], [83.5, 1903.0], [83.6, 1917.0], [83.7, 1932.0], [83.8, 1945.0], [83.9, 1960.0], [84.0, 1972.0], [84.1, 1985.0], [84.2, 1999.0], [84.3, 2009.0], [84.4, 2022.0], [84.5, 2035.0], [84.6, 2046.0], [84.7, 2062.0], [84.8, 2076.0], [84.9, 2094.0], [85.0, 2108.0], [85.1, 2124.0], [85.2, 2143.0], [85.3, 2159.0], [85.4, 2176.0], [85.5, 2189.0], [85.6, 2203.0], [85.7, 2218.0], [85.8, 2236.0], [85.9, 2256.0], [86.0, 2270.0], [86.1, 2285.0], [86.2, 2300.0], [86.3, 2315.0], [86.4, 2333.0], [86.5, 2350.0], [86.6, 2368.0], [86.7, 2385.0], [86.8, 2398.0], [86.9, 2412.0], [87.0, 2428.0], [87.1, 2445.0], [87.2, 2463.0], [87.3, 2480.0], [87.4, 2495.0], [87.5, 2506.0], [87.6, 2519.0], [87.7, 2537.0], [87.8, 2556.0], [87.9, 2571.0], [88.0, 2589.0], [88.1, 2603.0], [88.2, 2620.0], [88.3, 2641.0], [88.4, 2660.0], [88.5, 2677.0], [88.6, 2694.0], [88.7, 2711.0], [88.8, 2728.0], [88.9, 2753.0], [89.0, 2777.0], [89.1, 2798.0], [89.2, 2811.0], [89.3, 2835.0], [89.4, 2861.0], [89.5, 2883.0], [89.6, 2901.0], [89.7, 2914.0], [89.8, 2946.0], [89.9, 2970.0], [90.0, 2988.0], [90.1, 3005.0], [90.2, 3021.0], [90.3, 3045.0], [90.4, 3070.0], [90.5, 3092.0], [90.6, 3111.0], [90.7, 3138.0], [90.8, 3164.0], [90.9, 3187.0], [91.0, 3209.0], [91.1, 3228.0], [91.2, 3249.0], [91.3, 3276.0], [91.4, 3296.0], [91.5, 3319.0], [91.6, 3340.0], [91.7, 3375.0], [91.8, 3398.0], [91.9, 3424.0], [92.0, 3466.0], [92.1, 3493.0], [92.2, 3507.0], [92.3, 3533.0], [92.4, 3578.0], [92.5, 3598.0], [92.6, 3613.0], [92.7, 3648.0], [92.8, 3685.0], [92.9, 3702.0], [93.0, 3722.0], [93.1, 3762.0], [93.2, 3787.0], [93.3, 3812.0], [93.4, 3854.0], [93.5, 3888.0], [93.6, 3905.0], [93.7, 3945.0], [93.8, 3981.0], [93.9, 4000.0], [94.0, 4020.0], [94.1, 4060.0], [94.2, 4091.0], [94.3, 4146.0], [94.4, 4188.0], [94.5, 4219.0], [94.6, 4276.0], [94.7, 4303.0], [94.8, 4361.0], [94.9, 4400.0], [95.0, 4441.0], [95.1, 4494.0], [95.2, 4517.0], [95.3, 4581.0], [95.4, 4601.0], [95.5, 4630.0], [95.6, 4682.0], [95.7, 4698.0], [95.8, 4710.0], [95.9, 4738.0], [96.0, 4783.0], [96.1, 4799.0], [96.2, 4828.0], [96.3, 4890.0], [96.4, 4933.0], [96.5, 5011.0], [96.6, 5078.0], [96.7, 5131.0], [96.8, 5186.0], [96.9, 5251.0], [97.0, 5304.0], [97.1, 5414.0], [97.2, 5559.0], [97.3, 5652.0], [97.4, 5784.0], [97.5, 5891.0], [97.6, 6047.0], [97.7, 6146.0], [97.8, 6454.0], [97.9, 6886.0], [98.0, 7338.0], [98.1, 7831.0], [98.2, 7964.0], [98.3, 8050.0], [98.4, 8095.0], [98.5, 8164.0], [98.6, 8262.0], [98.7, 8440.0], [98.8, 8574.0], [98.9, 8830.0], [99.0, 9019.0], [99.1, 9232.0], [99.2, 9437.0], [99.3, 9581.0], [99.4, 9689.0], [99.5, 9799.0], [99.6, 9991.0], [99.7, 10078.0], [99.8, 10108.0], [99.9, 10388.0]], "isOverall": false, "label": "get", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 32629.0, "series": [{"data": [[0.0, 32629.0], [100.0, 4725.0], [200.0, 3682.0], [300.0, 3579.0], [400.0, 3104.0], [500.0, 2439.0], [600.0, 1688.0], [700.0, 1335.0], [800.0, 981.0], [900.0, 788.0], [1000.0, 736.0], [1100.0, 645.0], [1200.0, 606.0], [1300.0, 542.0], [1400.0, 349.0], [1500.0, 318.0], [1600.0, 318.0], [1700.0, 259.0], [1800.0, 237.0], [1900.0, 231.0], [2000.0, 222.0], [2100.0, 229.0], [2200.0, 201.0], [2300.0, 188.0], [2400.0, 211.0], [2500.0, 212.0], [2600.0, 158.0], [2700.0, 158.0], [2800.0, 156.0], [2900.0, 202.0], [3000.0, 162.0], [3100.0, 180.0], [3200.0, 140.0], [3300.0, 152.0], [3400.0, 158.0], [3500.0, 173.0], [3600.0, 173.0], [3700.0, 181.0], [3800.0, 193.0], [3900.0, 170.0], [4000.0, 135.0], [4100.0, 133.0], [4200.0, 168.0], [4300.0, 118.0], [4400.0, 151.0], [4500.0, 157.0], [4600.0, 191.0], [4700.0, 201.0], [4800.0, 141.0], [4900.0, 114.0], [5000.0, 108.0], [5100.0, 93.0], [5200.0, 92.0], [5300.0, 59.0], [5400.0, 39.0], [5600.0, 33.0], [5500.0, 50.0], [5700.0, 47.0], [5800.0, 55.0], [6000.0, 54.0], [5900.0, 64.0], [6100.0, 27.0], [6200.0, 24.0], [6300.0, 22.0], [6400.0, 14.0], [6600.0, 16.0], [6500.0, 33.0], [6800.0, 14.0], [6900.0, 15.0], [6700.0, 27.0], [7100.0, 23.0], [7000.0, 15.0], [7300.0, 16.0], [7400.0, 13.0], [7200.0, 11.0], [7600.0, 20.0], [7500.0, 16.0], [7800.0, 45.0], [7700.0, 19.0], [7900.0, 57.0], [8000.0, 91.0], [8100.0, 73.0], [8700.0, 23.0], [8600.0, 30.0], [8500.0, 33.0], [8400.0, 33.0], [8300.0, 35.0], [8200.0, 43.0], [9200.0, 34.0], [9100.0, 33.0], [9000.0, 22.0], [8900.0, 28.0], [8800.0, 35.0], [9700.0, 60.0], [9500.0, 62.0], [9600.0, 45.0], [9400.0, 41.0], [9300.0, 38.0], [9900.0, 43.0], [10000.0, 87.0], [10100.0, 76.0], [10200.0, 24.0], [9800.0, 31.0], [10300.0, 8.0], [10400.0, 4.0], [10700.0, 3.0], [10500.0, 3.0], [10600.0, 1.0], [10800.0, 3.0], [10900.0, 5.0], [11000.0, 2.0], [11100.0, 3.0], [11200.0, 1.0], [11400.0, 1.0], [11300.0, 1.0], [12200.0, 2.0], [12000.0, 4.0], [11800.0, 4.0], [12100.0, 1.0], [11900.0, 1.0], [12300.0, 2.0], [12400.0, 3.0], [13000.0, 1.0], [13900.0, 1.0], [14600.0, 1.0], [14800.0, 1.0], [15200.0, 1.0], [15300.0, 2.0], [15500.0, 1.0], [15700.0, 1.0], [15800.0, 2.0], [16300.0, 1.0], [16000.0, 1.0], [16500.0, 1.0], [18500.0, 1.0], [18600.0, 1.0], [18700.0, 1.0], [19500.0, 1.0], [20200.0, 1.0], [20000.0, 1.0], [19900.0, 1.0], [20500.0, 1.0], [21100.0, 1.0]], "isOverall": false, "label": "post", "isController": false}, {"data": [[0.0, 19771.0], [100.0, 5623.0], [200.0, 4219.0], [300.0, 4214.0], [400.0, 3780.0], [500.0, 2983.0], [600.0, 2396.0], [700.0, 2016.0], [800.0, 1728.0], [900.0, 1426.0], [1000.0, 1224.0], [1100.0, 1208.0], [1200.0, 1192.0], [1300.0, 1048.0], [1400.0, 881.0], [1500.0, 672.0], [1600.0, 665.0], [1700.0, 665.0], [1800.0, 545.0], [1900.0, 498.0], [2000.0, 496.0], [2100.0, 429.0], [2200.0, 420.0], [2300.0, 411.0], [2400.0, 423.0], [2500.0, 433.0], [2600.0, 374.0], [2700.0, 328.0], [2800.0, 313.0], [2900.0, 321.0], [3000.0, 321.0], [3100.0, 287.0], [3200.0, 304.0], [3300.0, 263.0], [3400.0, 232.0], [3500.0, 243.0], [3600.0, 249.0], [3700.0, 252.0], [3800.0, 207.0], [3900.0, 223.0], [4000.0, 224.0], [4200.0, 169.0], [4100.0, 145.0], [4300.0, 142.0], [4400.0, 156.0], [4500.0, 176.0], [4600.0, 214.0], [4700.0, 264.0], [4800.0, 158.0], [4900.0, 97.0], [5000.0, 119.0], [5100.0, 109.0], [5200.0, 113.0], [5300.0, 73.0], [5400.0, 38.0], [5600.0, 63.0], [5500.0, 64.0], [5800.0, 66.0], [5700.0, 47.0], [6000.0, 65.0], [6100.0, 38.0], [5900.0, 43.0], [6300.0, 19.0], [6200.0, 23.0], [6600.0, 15.0], [6400.0, 16.0], [6500.0, 16.0], [6900.0, 9.0], [6700.0, 12.0], [6800.0, 22.0], [7000.0, 23.0], [7100.0, 14.0], [7400.0, 17.0], [7300.0, 16.0], [7200.0, 12.0], [7600.0, 10.0], [7500.0, 12.0], [7900.0, 73.0], [7800.0, 35.0], [7700.0, 16.0], [8100.0, 94.0], [8000.0, 98.0], [8700.0, 30.0], [8600.0, 23.0], [8500.0, 44.0], [8400.0, 40.0], [8300.0, 43.0], [8200.0, 54.0], [9200.0, 38.0], [9000.0, 32.0], [9100.0, 40.0], [8900.0, 31.0], [8800.0, 32.0], [9600.0, 64.0], [9700.0, 57.0], [9500.0, 50.0], [9400.0, 37.0], [9300.0, 31.0], [9900.0, 33.0], [10000.0, 107.0], [10100.0, 48.0], [10200.0, 27.0], [9800.0, 46.0], [10300.0, 11.0], [10500.0, 3.0], [10400.0, 3.0], [10700.0, 3.0], [11200.0, 1.0], [10800.0, 2.0], [10900.0, 3.0], [11100.0, 3.0], [11000.0, 1.0], [11500.0, 2.0], [11300.0, 2.0], [11800.0, 3.0], [11900.0, 4.0], [12000.0, 2.0], [12200.0, 3.0], [12300.0, 1.0], [12500.0, 3.0], [12400.0, 1.0], [13100.0, 1.0], [13800.0, 2.0], [14100.0, 1.0], [14300.0, 1.0], [14600.0, 1.0], [14900.0, 1.0], [15400.0, 2.0], [15500.0, 1.0], [16200.0, 1.0], [16100.0, 2.0], [18400.0, 1.0], [18800.0, 1.0], [18900.0, 1.0], [20300.0, 2.0], [19500.0, 2.0], [20000.0, 1.0], [19800.0, 1.0], [19900.0, 1.0], [20900.0, 1.0], [21100.0, 1.0]], "isOverall": false, "label": "get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 19526.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 72486.0, "series": [{"data": [[0.0, 72486.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 22330.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 19526.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 19594.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.62511542E12, "maxY": 1024.0, "series": [{"data": [[1.62511554E12, 1024.0], [1.6251156E12, 989.886131616143], [1.62511548E12, 993.7139441670737]], "isOverall": false, "label": "JavaTest_peek", "isController": false}, {"data": [[1.6251156E12, 63.33471103084194], [1.62511566E12, 2.0]], "isOverall": false, "label": "JavaTest_cool", "isController": false}, {"data": [[1.62511542E12, 64.0], [1.62511548E12, 62.737623762376224]], "isOverall": false, "label": "JavaTest_warm", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62511566E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.0, "maxY": 16032.0, "series": [{"data": [[2.0, 10263.0], [4.0, 673.0], [5.0, 16032.0], [6.0, 603.0], [7.0, 591.0], [9.0, 108.6], [10.0, 8.75], [11.0, 58.28571428571429], [12.0, 7.0], [13.0, 44.5], [14.0, 73.0], [15.0, 507.0], [16.0, 378.0], [17.0, 17.5], [18.0, 32.5], [19.0, 7.799999999999998], [20.0, 7.0], [22.0, 7.5], [23.0, 45.266666666666666], [24.0, 160.77777777777777], [25.0, 29.571428571428573], [26.0, 9.166666666666666], [27.0, 6.75], [28.0, 107.6], [29.0, 7.590909090909092], [30.0, 94.75], [31.0, 13.8], [32.0, 11.5], [33.0, 550.2], [35.0, 38.888888888888886], [34.0, 424.12499999999994], [36.0, 55.54545454545455], [37.0, 9.0], [38.0, 259.6], [39.0, 152.00000000000003], [41.0, 8.0], [40.0, 28.0], [42.0, 118.56000000000004], [43.0, 32.8], [45.0, 285.5], [44.0, 594.5], [46.0, 555.0], [47.0, 8.4], [49.0, 154.25], [48.0, 94.71428571428572], [51.0, 115.16666666666666], [50.0, 2796.0], [52.0, 14.0], [55.0, 14.599999999999996], [54.0, 13.285714285714286], [56.0, 90.29032258064517], [57.0, 11.818181818181817], [58.0, 39.04166666666667], [59.0, 8.75], [60.0, 270.3571428571428], [61.0, 16.538461538461537], [62.0, 32.823529411764696], [63.0, 55.42857142857143], [64.0, 105.82593678722712], [65.0, 486.0], [68.0, 81.5], [69.0, 86.0], [70.0, 52.714285714285715], [71.0, 41.5], [72.0, 321.0], [74.0, 573.0], [83.0, 516.0], [89.0, 503.0], [97.0, 2888.0], [105.0, 477.0], [113.0, 164.0], [114.0, 98.5], [112.0, 4008.0], [116.0, 71.25], [117.0, 91.0], [118.0, 53.75], [126.0, 53.0], [139.0, 485.0], [151.0, 260.0], [144.0, 78.0], [167.0, 6.0], [173.0, 7.0], [171.0, 8.0], [168.0, 7.0], [191.0, 6.0], [190.0, 8.0], [189.0, 8.0], [187.0, 6.0], [186.0, 9.0], [200.0, 928.0], [211.0, 9.0], [210.0, 17.0], [208.0, 1355.0], [223.0, 338.3333333333333], [216.0, 8.5], [231.0, 7.0], [224.0, 9.0], [232.0, 5226.0], [247.0, 19.0], [245.0, 2617.0], [253.0, 31.0], [250.0, 76.0], [269.0, 9.0], [268.0, 7.0], [267.0, 2838.0], [260.0, 52.0], [259.0, 1430.0], [283.0, 3876.0], [279.0, 2534.0], [278.0, 904.0], [274.0, 2591.0], [303.0, 2578.0], [298.0, 1650.0], [297.0, 2467.0], [294.0, 7.0], [293.0, 2541.0], [292.0, 6.0], [288.0, 15.0], [309.0, 168.60000000000002], [311.0, 242.625], [319.0, 12.0], [308.0, 798.0], [335.0, 288.4375], [325.0, 6.0], [324.0, 1516.0], [320.0, 28.0], [350.0, 5.0], [342.0, 12.0], [339.0, 7.0], [365.0, 295.3333333333333], [367.0, 7.5], [360.0, 7.0], [355.0, 9.0], [353.0, 1486.0], [368.0, 656.6666666666667], [371.0, 301.8181818181818], [372.0, 1153.5], [373.0, 10.0], [383.0, 761.3333333333334], [369.0, 12.0], [394.0, 79.0], [389.0, 7.0], [387.0, 8.0], [385.0, 8.0], [415.0, 314.0], [414.0, 513.0], [410.0, 683.0], [409.0, 36.0], [407.0, 39.0], [404.0, 10.0], [403.0, 12.0], [429.0, 305.0], [431.0, 830.0], [428.0, 155.0], [427.0, 9.0], [426.0, 273.3333333333333], [424.0, 2190.0], [423.0, 1300.5], [419.0, 256.4], [416.0, 136.0], [445.0, 7.0], [444.0, 9.0], [442.0, 2170.0], [441.0, 861.6666666666667], [437.0, 262.0], [436.0, 2402.0], [435.0, 188.5], [434.0, 199.0], [463.0, 10.0], [461.0, 47.0], [456.0, 100.75], [455.0, 6.0], [453.0, 274.3333333333333], [452.0, 2546.0], [450.0, 123.0], [477.0, 2387.0], [470.0, 7.0], [469.0, 13.4], [466.0, 7.0], [494.0, 16.0], [490.0, 797.6666666666666], [488.0, 2116.0], [482.0, 15.5], [480.0, 9.333333333333334], [511.0, 1167.5], [506.0, 460.125], [510.0, 159.0], [509.0, 68.0], [508.0, 2286.0], [507.0, 25.0], [504.0, 2165.0], [498.0, 1260.0], [497.0, 716.3333333333334], [538.0, 813.3333333333333], [540.0, 8.0], [517.0, 373.1], [515.0, 705.6666666666667], [512.0, 61.0], [518.0, 119.0], [541.0, 1026.5], [539.0, 13.0], [532.0, 2386.0], [529.0, 18.5], [523.0, 117.0], [521.0, 45.0], [520.0, 79.0], [572.0, 1197.5], [558.0, 53.333333333333336], [557.0, 2244.0], [555.0, 9.0], [554.0, 1296.5], [552.0, 2070.0], [559.0, 107.0], [575.0, 64.0], [561.0, 2187.0], [560.0, 25.0], [564.0, 12.0], [563.0, 455.0], [574.0, 775.3333333333334], [573.0, 7.0], [569.0, 2084.0], [568.0, 3434.0], [551.0, 10.4], [550.0, 1153.0], [548.0, 14.0], [547.0, 35.5], [546.0, 21.0], [545.0, 278.0], [544.0, 966.0], [566.0, 2258.6], [565.0, 52.0], [594.0, 44.5], [607.0, 25.0], [604.0, 641.6666666666666], [603.0, 8.0], [602.0, 18.333333333333332], [590.0, 20.0], [578.0, 960.0], [577.0, 2899.0], [583.0, 736.3333333333333], [579.0, 1008.5], [589.0, 2432.0], [586.0, 14.0], [585.0, 1967.0], [599.0, 16.0], [598.0, 44.0], [595.0, 12.0], [592.0, 1151.5], [635.0, 8.6], [608.0, 421.0], [620.0, 11.0], [618.0, 25.0], [617.0, 945.5], [616.0, 23.5], [609.0, 399.0], [639.0, 96.0], [627.0, 829.3333333333334], [624.0, 1828.0], [638.0, 363.0], [636.0, 31.0], [634.0, 26.0], [632.0, 16.0], [614.0, 15.5], [631.0, 326.0], [629.0, 182.83333333333331], [666.0, 1603.0], [656.0, 829.0], [655.0, 395.0], [652.0, 941.0], [650.0, 452.0], [649.0, 2053.0], [664.0, 822.0], [646.0, 962.0], [645.0, 8.5], [644.0, 10.0], [643.0, 17.0], [642.0, 13.631578947368421], [641.0, 26.25], [640.0, 40.75], [657.0, 399.0], [658.0, 2040.0], [659.0, 396.0], [660.0, 701.3000000000001], [661.0, 512.6666666666666], [663.0, 10.0], [662.0, 7.0], [669.0, 6.0], [668.0, 887.0], [667.0, 9.0], [702.0, 1483.0], [697.0, 14.5], [679.0, 21.0], [677.0, 539.25], [676.0, 1699.5], [675.0, 100.0], [695.0, 680.0], [694.0, 752.5], [693.0, 1010.5], [691.0, 869.0], [687.0, 8.0], [685.0, 735.0], [683.0, 1785.0], [682.0, 7.0], [681.0, 39.33333333333333], [680.0, 203.25], [732.0, 1827.0], [719.0, 1481.5], [713.0, 361.1666666666667], [715.0, 2038.0], [718.0, 1499.0], [717.0, 1946.0], [735.0, 901.6666666666667], [724.0, 672.5], [731.0, 1704.0], [730.0, 10.0], [729.0, 11.0], [707.0, 2033.0], [706.0, 969.5], [705.0, 13.0], [704.0, 823.5], [726.0, 503.7142857142857], [725.0, 983.5], [762.0, 465.5], [760.0, 604.6999999999999], [741.0, 8.0], [739.0, 11.0], [738.0, 74.0], [736.0, 1158.0], [764.0, 1255.0], [763.0, 1578.0], [756.0, 10.0], [753.0, 8.0], [752.0, 31.285714285714285], [751.0, 37.5], [750.0, 35.5], [748.0, 14.8], [747.0, 60.0], [746.0, 11.0], [745.0, 13.0], [744.0, 739.5], [796.0, 1475.0], [793.0, 692.5], [794.0, 712.4444444444445], [795.0, 990.5], [797.0, 12.0], [784.0, 1235.0], [792.0, 55.4], [779.0, 9.5], [773.0, 31.0], [771.0, 10.5], [768.0, 73.5], [777.0, 10.333333333333334], [790.0, 65.0], [789.0, 11.0], [787.0, 1251.0], [785.0, 20.0], [818.0, 9.8], [830.0, 63.71428571428571], [831.0, 269.7142857142857], [816.0, 9.0], [828.0, 79.83333333333334], [825.0, 274.0], [824.0, 464.0], [807.0, 10.333333333333334], [806.0, 9.0], [804.0, 13.0], [802.0, 7.0], [800.0, 10.5], [815.0, 8.5], [812.0, 460.6666666666667], [810.0, 251.0], [823.0, 8.0], [821.0, 124.5], [819.0, 438.8], [847.0, 1007.0], [841.0, 638.5], [840.0, 387.0], [845.0, 1045.5], [846.0, 855.0], [850.0, 923.0], [848.0, 13.0], [851.0, 923.0], [852.0, 928.0], [853.0, 7.0], [862.0, 7.5], [861.0, 8.0], [893.0, 9.0], [895.0, 1185.0], [888.0, 7.666666666666667], [871.0, 172.0], [869.0, 290.0], [884.0, 7.0], [883.0, 7.0], [882.0, 7.0], [881.0, 9.666666666666666], [879.0, 8.833333333333334], [878.0, 11.0], [877.0, 184.5], [874.0, 89.0], [873.0, 61.0], [872.0, 36.5], [903.0, 1000.0], [898.0, 1089.0], [897.0, 861.1428571428572], [910.0, 388.0], [909.0, 77.44444444444444], [908.0, 12.0], [900.0, 853.0], [899.0, 13.0], [902.0, 202.14999999999998], [904.0, 1001.0], [905.0, 472.0], [927.0, 758.5555555555555], [926.0, 3569.0], [925.0, 442.3333333333333], [924.0, 501.0], [922.0, 808.75], [954.0, 987.5], [950.0, 823.75], [953.0, 1037.3333333333333], [935.0, 239.7777777777778], [934.0, 9.0], [931.0, 16.0], [930.0, 331.0], [929.0, 1161.0], [928.0, 1383.0], [955.0, 652.1666666666666], [958.0, 1030.0], [947.0, 7.0], [944.0, 2363.0], [943.0, 1610.2857142857142], [942.0, 2364.0], [940.0, 2406.0], [939.0, 383.0], [938.0, 16.0], [937.0, 1111.0], [936.0, 317.33333333333337], [989.0, 493.1666666666667], [991.0, 966.0], [988.0, 12.0], [987.0, 7.0], [986.0, 32.5], [985.0, 151.89999999999998], [974.0, 13.333333333333334], [960.0, 54.0], [967.0, 47.666666666666664], [963.0, 24.5], [973.0, 20.5], [972.0, 266.66666666666663], [971.0, 815.0], [970.0, 153.15384615384613], [982.0, 21.25], [981.0, 149.55555555555554], [980.0, 27.0], [1019.0, 344.66666666666663], [996.0, 96.0], [995.0, 43.0], [992.0, 2905.0], [999.0, 13.666666666666666], [998.0, 485.0], [1006.0, 15.0], [1005.0, 285.5], [1003.0, 11.0], [1002.0, 14.0], [1000.0, 1020.6666666666666], [1001.0, 917.6666666666665], [1023.0, 917.1219512195124], [1010.0, 330.0], [1009.0, 814.0], [1008.0, 13.0], [1012.0, 11.0], [1011.0, 8.5], [1015.0, 2795.0], [1014.0, 747.0], [1022.0, 386.5], [1020.0, 8.666666666666666], [1018.0, 168.75], [1017.0, 11.666666666666666], [1016.0, 886.9756097560975], [1024.0, 976.4295552772935], [1.0, 12056.0]], "isOverall": false, "label": "post", "isController": false}, {"data": [[789.5306530397529, 761.0216126850571]], "isOverall": false, "label": "post-Aggregated", "isController": false}, {"data": [[2.0, 6043.5], [3.0, 7476.0], [4.0, 8165.0], [5.0, 994.0], [6.0, 8781.0], [7.0, 751.0], [8.0, 1095.6666666666665], [9.0, 14.5], [10.0, 488.66666666666663], [11.0, 140.31249999999997], [12.0, 216.59999999999997], [13.0, 400.8], [14.0, 501.0], [15.0, 272.5], [16.0, 586.0], [17.0, 399.375], [18.0, 157.5], [19.0, 307.7857142857143], [20.0, 692.0], [21.0, 145.24999999999997], [22.0, 510.25], [23.0, 167.72727272727272], [24.0, 39.09090909090909], [25.0, 252.22222222222223], [26.0, 186.33333333333331], [27.0, 134.88], [28.0, 220.5], [29.0, 45.291666666666664], [30.0, 113.0769230769231], [31.0, 121.49999999999999], [33.0, 87.2], [32.0, 320.2857142857143], [35.0, 136.11764705882356], [34.0, 44.666666666666664], [37.0, 981.6], [36.0, 37.63636363636364], [39.0, 88.07142857142857], [38.0, 53.875], [41.0, 143.65000000000003], [40.0, 776.5999999999999], [42.0, 84.23809523809524], [43.0, 366.2], [45.0, 936.0], [44.0, 1815.5], [47.0, 313.4], [46.0, 21.0], [48.0, 197.53846153846155], [49.0, 411.5], [50.0, 345.0], [51.0, 242.7142857142857], [53.0, 19.0], [52.0, 195.0], [54.0, 281.74999999999994], [55.0, 57.25], [56.0, 110.72413793103446], [57.0, 53.0], [59.0, 216.71428571428572], [58.0, 59.33333333333335], [61.0, 232.66666666666657], [60.0, 59.733333333333334], [63.0, 247.19999999999996], [62.0, 74.06451612903224], [64.0, 134.7442102524066], [66.0, 214.0], [67.0, 177.66666666666669], [68.0, 940.5], [70.0, 85.625], [71.0, 500.8333333333333], [69.0, 558.0], [72.0, 68.33333333333333], [73.0, 333.0], [75.0, 603.0], [79.0, 1330.0], [78.0, 343.0], [77.0, 1335.0], [76.0, 1341.0], [83.0, 369.0], [81.0, 440.5], [85.0, 270.5], [87.0, 1329.0], [86.0, 1543.0], [84.0, 1610.0], [91.0, 1326.0], [90.0, 465.0], [88.0, 371.0], [95.0, 313.0], [94.0, 320.0], [93.0, 1307.0], [92.0, 304.0], [99.0, 300.0], [98.0, 1622.0], [97.0, 311.0], [102.0, 2213.0], [101.0, 318.0], [100.0, 567.0], [107.0, 489.0], [106.0, 486.0], [104.0, 398.0], [111.0, 139.66666666666666], [110.0, 1286.0], [109.0, 525.0], [108.0, 1750.0], [113.0, 197.6], [114.0, 282.625], [112.0, 409.0], [116.0, 327.0], [117.0, 519.6666666666667], [118.0, 406.25], [119.0, 554.8333333333333], [123.0, 4859.0], [122.0, 1764.0], [121.0, 1281.0], [120.0, 2904.0], [127.0, 1138.0], [125.0, 1249.5], [135.0, 1272.0], [134.0, 1351.0], [132.0, 28.0], [131.0, 2648.0], [129.0, 269.0], [128.0, 2899.0], [143.0, 1263.0], [141.0, 1265.0], [139.0, 1279.0], [137.0, 1154.0], [136.0, 2537.0], [151.0, 279.0], [149.0, 1042.0], [147.0, 23.0], [146.0, 1258.0], [145.0, 967.0], [158.0, 1052.0], [157.0, 1254.0], [156.0, 137.0], [155.0, 216.0], [154.0, 3633.0], [153.0, 990.3333333333334], [152.0, 1277.0], [166.0, 997.0], [165.0, 20.0], [164.0, 3427.0], [163.0, 915.0], [162.0, 935.0], [161.0, 1143.0], [160.0, 940.0], [175.0, 917.0], [174.0, 915.0], [173.0, 985.0], [172.0, 1798.0], [171.0, 39.0], [169.0, 949.0], [168.0, 924.0], [183.0, 1025.0], [182.0, 1120.0], [181.0, 1462.0], [180.0, 1464.0], [179.0, 1088.0], [178.0, 1545.0], [177.0, 1078.6666666666667], [176.0, 1199.0], [191.0, 341.6666666666667], [190.0, 1068.0], [189.0, 910.0], [186.0, 931.0], [185.0, 1891.0], [184.0, 1117.0], [198.0, 1758.0], [197.0, 900.0], [196.0, 1205.0], [195.0, 939.0], [193.0, 510.5], [192.0, 395.6666666666667], [206.0, 884.0], [205.0, 1472.0], [203.0, 1204.0], [202.0, 1508.0], [201.0, 1691.0], [200.0, 1199.0], [215.0, 1175.0], [214.0, 1103.0], [213.0, 1046.0], [212.0, 860.0], [211.0, 1098.0], [210.0, 3337.0], [209.0, 1059.0], [223.0, 534.5], [221.0, 1189.0], [220.0, 948.0], [219.0, 1429.0], [218.0, 1066.5], [216.0, 898.0], [231.0, 1008.0], [230.0, 1646.0], [229.0, 534.0], [228.0, 1181.0], [227.0, 1054.0], [226.0, 1179.0], [225.0, 605.0], [224.0, 438.5], [239.0, 969.0], [238.0, 1486.0], [237.0, 1179.0], [236.0, 587.5], [235.0, 1043.0], [233.0, 935.5], [247.0, 1626.0], [246.0, 1105.0], [244.0, 876.0], [242.0, 31.0], [241.0, 486.6666666666667], [255.0, 1626.0], [254.0, 943.0], [253.0, 1401.0], [251.0, 1040.0], [249.0, 847.5], [270.0, 87.5], [271.0, 1575.0], [268.0, 1159.0], [258.0, 2324.0], [257.0, 1651.0], [266.0, 943.0], [265.0, 1437.0], [263.0, 863.0], [262.0, 2471.0], [261.0, 858.0], [260.0, 1006.0], [286.0, 45.0], [285.0, 1077.0], [283.0, 2269.0], [282.0, 945.0], [281.0, 848.0], [280.0, 1140.0], [279.0, 823.0], [276.0, 1165.0], [275.0, 823.0], [274.0, 1785.0], [272.0, 2273.0], [301.0, 33.0], [300.0, 1138.5], [299.0, 893.0], [297.0, 3139.0], [295.0, 1804.0], [294.0, 102.0], [292.0, 2644.0], [291.0, 1300.5], [289.0, 2411.5], [318.0, 37.0], [309.0, 251.3409090909091], [310.0, 2083.0], [311.0, 395.8181818181818], [319.0, 982.0], [317.0, 2336.0], [316.0, 1109.0], [307.0, 1076.0], [305.0, 1251.0], [304.0, 536.0], [315.0, 2250.0], [313.0, 1008.0], [312.0, 1762.5], [333.0, 492.0], [327.0, 569.0], [326.0, 503.25], [325.0, 921.0], [329.0, 556.0], [335.0, 363.6363636363637], [334.0, 950.0], [332.0, 1153.0], [323.0, 1219.0], [322.0, 1798.5], [331.0, 1053.0], [330.0, 1534.0], [350.0, 338.0], [351.0, 1146.0], [349.0, 1190.0], [348.0, 1209.0], [347.0, 785.0], [346.0, 2408.0], [345.0, 991.0], [343.0, 1047.5], [337.0, 922.0], [336.0, 3026.0], [339.0, 833.5], [338.0, 2085.0], [341.0, 2483.0], [340.0, 1213.0], [366.0, 403.33333333333337], [365.0, 169.66666666666666], [367.0, 611.0], [364.0, 1195.0], [363.0, 1199.0], [362.0, 1635.0], [361.0, 1758.0], [360.0, 1048.0], [359.0, 323.0], [355.0, 934.5], [353.0, 1050.0], [358.0, 1316.3333333333333], [357.0, 1082.5], [356.0, 1210.0], [380.0, 227.0], [369.0, 616.0], [371.0, 277.7083333333333], [370.0, 1193.0], [372.0, 504.0], [373.0, 450.0], [375.0, 936.0], [368.0, 217.0], [374.0, 1142.3333333333333], [383.0, 1069.6666666666667], [379.0, 761.5], [378.0, 4910.0], [377.0, 1180.0], [376.0, 2922.0], [398.0, 846.0], [399.0, 2342.0], [397.0, 956.0], [387.0, 862.0], [386.0, 878.0], [385.0, 1587.0], [395.0, 1125.6666666666667], [394.0, 19.0], [393.0, 1076.0], [392.0, 864.0], [391.0, 856.0], [390.0, 822.0], [389.0, 424.5], [388.0, 874.0], [412.0, 963.0], [410.0, 2516.0], [409.0, 553.6666666666666], [408.0, 951.0], [407.0, 66.0], [401.0, 2017.0], [400.0, 1462.0], [406.0, 1027.0], [404.0, 968.0], [403.0, 1513.0], [402.0, 1596.0], [429.0, 999.0], [431.0, 410.3333333333333], [428.0, 595.5], [427.0, 258.0], [426.0, 127.0], [425.0, 1479.0], [422.0, 1509.0], [420.0, 1028.0], [419.0, 428.25], [418.0, 650.0], [417.0, 585.0], [416.0, 34.0], [444.0, 2421.0], [446.0, 2290.0], [447.0, 993.0], [445.0, 2168.0], [443.0, 1008.0], [441.0, 47.0], [438.0, 2277.0], [433.0, 992.0], [432.0, 56.0], [435.0, 222.0], [434.0, 187.0], [437.0, 30.0], [436.0, 309.0], [462.0, 966.0], [463.0, 1211.5], [460.0, 1401.0], [451.0, 366.33333333333337], [450.0, 1376.0], [448.0, 1631.0], [459.0, 2058.0], [458.0, 2138.0], [457.0, 966.0], [456.0, 507.0], [455.0, 2371.0], [454.0, 1422.0], [453.0, 50.0], [478.0, 991.0], [476.0, 898.5], [467.0, 956.0], [466.0, 1026.0], [465.0, 1589.0], [464.0, 966.0], [475.0, 918.25], [474.0, 1075.5], [473.0, 809.0], [472.0, 2934.0], [471.0, 900.0], [470.0, 953.0], [469.0, 843.3333333333333], [468.0, 118.0], [494.0, 2149.0], [495.0, 944.0], [492.0, 953.0], [483.0, 1112.0], [482.0, 483.5], [481.0, 2307.0], [480.0, 932.0], [491.0, 2811.0], [489.0, 959.0], [488.0, 968.5], [487.0, 924.0], [486.0, 1474.5], [485.0, 1348.0], [484.0, 1429.0], [509.0, 892.0], [511.0, 465.0], [506.0, 413.7941176470589], [510.0, 1098.0], [507.0, 2078.0], [505.0, 899.0], [503.0, 1829.5], [496.0, 1774.0], [499.0, 937.0], [497.0, 930.6666666666666], [502.0, 1290.0], [501.0, 1515.0], [500.0, 1278.0], [538.0, 669.5], [517.0, 550.4054054054054], [527.0, 1708.0], [513.0, 1281.0], [516.0, 1070.6666666666665], [514.0, 983.5], [526.0, 855.75], [525.0, 978.5], [522.0, 814.0], [521.0, 13.0], [520.0, 51.0], [523.0, 896.0], [524.0, 498.0], [542.0, 2483.5], [528.0, 1150.0], [530.0, 1939.0], [529.0, 1946.0], [532.0, 1767.6666666666665], [531.0, 2802.0], [540.0, 693.5], [539.0, 1122.0], [537.0, 1887.5], [519.0, 2094.0], [518.0, 309.5], [535.0, 1272.5], [533.0, 1073.5], [569.0, 772.6666666666666], [559.0, 702.3076923076925], [554.0, 759.1666666666666], [555.0, 1710.0], [556.0, 320.6666666666667], [557.0, 1241.25], [558.0, 1456.5], [560.0, 789.5555555555557], [551.0, 1116.7142857142858], [550.0, 8.0], [549.0, 643.0], [548.0, 1096.6], [547.0, 1084.2], [546.0, 51.0], [545.0, 27.0], [544.0, 1923.0], [571.0, 767.4], [573.0, 1642.3333333333335], [572.0, 644.5], [575.0, 2817.0], [561.0, 1211.75], [563.0, 785.0], [562.0, 2729.0], [564.0, 2054.5], [565.0, 959.75], [567.0, 1226.0], [566.0, 1309.5714285714284], [601.0, 737.0], [605.0, 940.75], [607.0, 1603.5], [592.0, 217.5], [594.0, 33.5], [593.0, 513.0], [597.0, 497.6666666666667], [595.0, 300.0], [604.0, 16.0], [603.0, 758.0], [602.0, 735.0], [600.0, 1267.3333333333335], [583.0, 699.6666666666666], [582.0, 8353.0], [581.0, 1110.5], [579.0, 1945.0], [578.0, 788.6666666666667], [576.0, 3148.0], [591.0, 759.0], [590.0, 4439.5], [589.0, 761.0], [588.0, 2092.0], [587.0, 28.0], [586.0, 920.0], [584.0, 2397.0], [599.0, 9.0], [598.0, 736.0], [635.0, 231.33333333333334], [612.0, 638.6666666666667], [608.0, 687.9374999999999], [623.0, 521.0], [622.0, 1897.0], [621.0, 528.0], [620.0, 1072.0], [618.0, 1046.0], [616.0, 781.0], [609.0, 1140.4285714285716], [610.0, 1106.6666666666667], [611.0, 806.0], [613.0, 1554.5], [614.0, 743.3333333333333], [632.0, 771.5], [615.0, 3252.0], [634.0, 1116.0], [633.0, 1341.5], [638.0, 11.0], [625.0, 961.0], [627.0, 360.3333333333333], [626.0, 1097.0], [629.0, 645.5], [628.0, 1014.0], [631.0, 39.0], [630.0, 1273.5], [637.0, 46.0], [636.0, 289.0], [665.0, 1869.6666666666667], [670.0, 51.0], [657.0, 1021.5], [654.0, 910.5], [653.0, 555.0], [651.0, 926.0], [650.0, 354.5], [649.0, 349.0], [655.0, 552.0], [641.0, 18.166666666666664], [640.0, 37.5], [643.0, 709.6363636363636], [642.0, 8.153846153846153], [645.0, 1216.5], [644.0, 1693.0], [647.0, 4401.0], [646.0, 496.0], [666.0, 527.0], [659.0, 1066.0], [660.0, 800.8333333333333], [661.0, 882.7499999999999], [663.0, 1582.0], [662.0, 697.5], [671.0, 134.5], [656.0, 905.0], [669.0, 1963.0], [667.0, 896.5], [701.0, 1718.5], [691.0, 880.3333333333334], [703.0, 2080.5], [688.0, 2019.6666666666667], [690.0, 2169.5], [689.0, 2696.6666666666665], [699.0, 2269.5], [698.0, 2472.0], [697.0, 2196.25], [679.0, 2283.5], [678.0, 4243.0], [677.0, 295.0], [675.0, 330.0], [674.0, 275.25], [673.0, 583.5], [672.0, 207.0], [687.0, 2456.5], [686.0, 615.0], [685.0, 2199.0], [684.0, 3540.0], [682.0, 1310.0], [681.0, 1417.0], [680.0, 561.0], [695.0, 231.0], [694.0, 1451.0], [692.0, 2375.0], [728.0, 1553.0], [716.0, 1023.6666666666667], [713.0, 1023.0999999999999], [712.0, 2516.0], [714.0, 1289.75], [715.0, 941.75], [717.0, 1591.0], [718.0, 1778.0], [719.0, 1042.142857142857], [720.0, 1461.3333333333333], [723.0, 1531.0], [721.0, 1641.0], [725.0, 1368.0], [724.0, 2264.0], [727.0, 1584.0], [726.0, 498.1111111111111], [735.0, 1328.6], [734.0, 693.0], [733.0, 1046.0], [731.0, 655.0], [730.0, 499.0], [729.0, 1254.0], [711.0, 2029.0], [710.0, 2566.0], [708.0, 2308.0], [706.0, 1738.0], [705.0, 2308.0], [704.0, 2360.5], [765.0, 1368.0], [761.0, 1110.0], [760.0, 925.5000000000001], [742.0, 3399.0], [741.0, 991.75], [740.0, 1692.0], [739.0, 602.0], [738.0, 4256.0], [737.0, 1327.0], [751.0, 2469.0], [750.0, 1566.0], [749.0, 1328.0], [748.0, 1995.6666666666667], [747.0, 2078.75], [746.0, 2179.0], [745.0, 2176.0], [744.0, 856.0], [762.0, 1133.3333333333333], [767.0, 1263.0], [754.0, 88.0], [752.0, 1092.0], [756.0, 1246.0], [755.0, 59.0], [764.0, 1714.0], [763.0, 784.0], [758.0, 783.0], [757.0, 786.0], [792.0, 1203.0], [797.0, 2075.0], [793.0, 1033.6363636363635], [794.0, 951.1428571428572], [795.0, 923.4], [783.0, 1881.5], [769.0, 1056.0], [768.0, 2038.5], [771.0, 2456.5], [770.0, 1157.5], [773.0, 1241.0], [772.0, 2167.0], [775.0, 1395.0], [774.0, 3145.0], [782.0, 4000.0], [781.0, 4000.0], [780.0, 1217.0], [779.0, 2308.0], [778.0, 4008.0], [777.0, 2380.0], [776.0, 1236.0], [791.0, 2243.0], [790.0, 2143.0], [789.0, 2302.2], [788.0, 1578.5], [787.0, 2631.5], [786.0, 2621.0], [785.0, 1188.0], [784.0, 2129.75], [831.0, 1427.0], [830.0, 519.6666666666666], [828.0, 437.0], [821.0, 820.0], [812.0, 540.0], [804.0, 1500.0], [841.0, 1093.0], [846.0, 1080.642857142857], [847.0, 928.0], [848.0, 1020.0], [850.0, 1024.0], [863.0, 406.5], [849.0, 428.0], [840.0, 451.0], [888.0, 376.0], [879.0, 447.0], [875.0, 410.8], [869.0, 493.0], [865.0, 525.0], [924.0, 2152.0], [897.0, 1078.4285714285716], [898.0, 1022.5], [900.0, 1105.642857142857], [905.0, 1379.0], [909.0, 434.0], [927.0, 1529.4444444444443], [915.0, 383.0], [926.0, 3575.0], [925.0, 2266.4], [922.0, 632.5], [902.0, 1133.6666666666665], [935.0, 1300.142857142857], [959.0, 476.0], [946.0, 1052.0], [945.0, 2942.5], [944.0, 1188.0], [947.0, 1156.3333333333333], [949.0, 1162.75], [950.0, 1233.8461538461538], [953.0, 1287.0], [934.0, 1124.0], [933.0, 2470.5], [932.0, 2454.0], [931.0, 779.5], [930.0, 2140.0], [929.0, 886.0], [943.0, 2571.6666666666665], [941.0, 2372.0], [940.0, 1235.6666666666667], [939.0, 3130.0], [938.0, 1272.6666666666667], [936.0, 1312.3333333333333], [954.0, 1167.0], [955.0, 942.0], [958.0, 1881.0], [988.0, 1884.0], [991.0, 349.0], [976.0, 1611.0], [978.0, 1180.0], [977.0, 2205.0], [990.0, 2238.5], [989.0, 1361.1666666666667], [987.0, 1910.0], [986.0, 2016.0], [985.0, 1317.5], [984.0, 1660.0], [974.0, 1055.5], [963.0, 2786.0], [972.0, 2329.5], [971.0, 508.0], [970.0, 1122.75], [968.0, 1027.0], [983.0, 1950.6666666666667], [981.0, 1238.0], [1022.0, 820.75], [995.0, 1389.0], [996.0, 1224.75], [998.0, 1318.142857142857], [997.0, 1983.0], [1000.0, 1212.0], [1001.0, 1198.7333333333333], [1006.0, 1080.25], [994.0, 684.0], [993.0, 1940.5], [1005.0, 413.0], [1003.0, 1746.0], [1023.0, 1277.0348837209299], [1010.0, 758.0], [1008.0, 589.0], [1013.0, 1969.0], [1011.0, 1356.0], [1020.0, 1364.5], [1017.0, 1051.5], [1018.0, 2575.0], [1016.0, 1906.1157894736848], [1015.0, 1876.25], [1014.0, 3363.0], [1024.0, 1331.8019235820645], [1.0, 5904.5]], "isOverall": false, "label": "get", "isController": false}, {"data": [[784.3383777688846, 1042.318941855468]], "isOverall": false, "label": "get-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1024.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10.683333333333334, "minX": 1.62511542E12, "maxY": 1640228.45, "series": [{"data": [[1.62511554E12, 1640228.45], [1.62511542E12, 30014.066666666666], [1.6251156E12, 1456279.7333333334], [1.62511548E12, 367106.86666666664], [1.62511566E12, 69.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62511554E12, 208748.48333333334], [1.62511542E12, 5004.566666666667], [1.6251156E12, 174734.5], [1.62511548E12, 61252.916666666664], [1.62511566E12, 10.683333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62511566E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 316.5342984409788, "minX": 1.62511542E12, "maxY": 10345.5, "series": [{"data": [[1.62511554E12, 767.5738296852478], [1.62511542E12, 400.92721518987344], [1.6251156E12, 316.5342984409788], [1.62511548E12, 2324.5424546758722], [1.62511566E12, 10263.0]], "isOverall": false, "label": "post", "isController": false}, {"data": [[1.62511554E12, 1134.1575309590107], [1.62511542E12, 557.6458966565358], [1.6251156E12, 567.2102855051276], [1.62511548E12, 2316.5208078335513], [1.62511566E12, 10345.5]], "isOverall": false, "label": "get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62511566E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 239.78092056421667, "minX": 1.62511542E12, "maxY": 10345.5, "series": [{"data": [[1.62511554E12, 663.8089790701383], [1.62511542E12, 400.7325949367089], [1.6251156E12, 239.78092056421667], [1.62511548E12, 2324.5185861484247], [1.62511566E12, 10263.0]], "isOverall": false, "label": "post", "isController": false}, {"data": [[1.62511554E12, 998.3909954881551], [1.62511542E12, 557.6048632218842], [1.6251156E12, 468.67562225475854], [1.62511548E12, 2316.501958384341], [1.62511566E12, 10345.5]], "isOverall": false, "label": "get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62511566E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62511542E12, "maxY": 521.1385431917975, "series": [{"data": [[1.62511554E12, 163.62687330244407], [1.62511542E12, 0.0], [1.6251156E12, 270.1791017074987], [1.62511548E12, 0.0], [1.62511566E12, 0.0]], "isOverall": false, "label": "post", "isController": false}, {"data": [[1.62511554E12, 502.87206809382013], [1.62511542E12, 155.06838905775103], [1.6251156E12, 521.1385431917975], [1.62511548E12, 18.349326805385548], [1.62511566E12, 11.0]], "isOverall": false, "label": "get", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62511566E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.62511542E12, "maxY": 21183.0, "series": [{"data": [[1.62511554E12, 21183.0], [1.62511542E12, 1796.0], [1.6251156E12, 16151.0], [1.62511548E12, 20569.0], [1.62511566E12, 10421.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62511554E12, 2320.0], [1.62511542E12, 613.9000000000001], [1.6251156E12, 93.0], [1.62511548E12, 5290.0], [1.62511566E12, 10421.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62511554E12, 4546.820000000029], [1.62511542E12, 1495.7199999999912], [1.6251156E12, 662.7100000000464], [1.62511548E12, 10106.0], [1.62511566E12, 10421.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62511554E12, 3008.0], [1.62511542E12, 1064.5000000000286], [1.6251156E12, 114.0], [1.62511548E12, 9503.9], [1.62511566E12, 10421.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62511554E12, 4.0], [1.62511542E12, 6.0], [1.6251156E12, 4.0], [1.62511548E12, 4.0], [1.62511566E12, 10263.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62511554E12, 340.0], [1.62511542E12, 421.0], [1.6251156E12, 22.0], [1.62511548E12, 1020.0], [1.62511566E12, 10270.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62511566E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 2.0, "maxY": 16091.5, "series": [{"data": [[2.0, 16091.5], [3.0, 10270.0], [4.0, 598.5], [13.0, 15.0], [22.0, 1429.5], [43.0, 1105.0], [45.0, 1315.5], [44.0, 1304.0], [47.0, 1206.0], [49.0, 1286.0], [48.0, 1311.0], [51.0, 1196.0], [60.0, 813.0], [69.0, 1014.0], [80.0, 1006.5], [83.0, 787.0], [87.0, 699.0], [88.0, 611.5], [91.0, 698.0], [101.0, 590.0], [100.0, 616.5], [108.0, 13.0], [119.0, 14.0], [127.0, 512.0], [126.0, 598.0], [133.0, 409.0], [141.0, 407.0], [144.0, 390.0], [150.0, 505.5], [145.0, 13.0], [159.0, 404.0], [154.0, 351.5], [163.0, 391.0], [172.0, 15.0], [192.0, 4397.0], [200.0, 399.0], [201.0, 4103.0], [208.0, 3893.5], [209.0, 774.0], [219.0, 4010.0], [246.0, 3793.5], [240.0, 4517.5], [257.0, 3222.0], [282.0, 4700.5], [279.0, 3699.0], [289.0, 4107.0], [301.0, 4199.0], [294.0, 2731.0], [319.0, 2070.0], [314.0, 4810.5], [315.0, 98.5], [322.0, 2684.0], [331.0, 4480.0], [334.0, 4248.0], [327.0, 93.0], [346.0, 1445.5], [337.0, 17.0], [344.0, 18.0], [379.0, 194.5], [383.0, 95.0], [393.0, 248.0], [385.0, 185.0], [409.0, 100.0], [407.0, 94.0], [445.0, 973.0], [480.0, 96.0], [509.0, 86.5], [502.0, 16.0], [550.0, 473.0], [571.0, 22.0], [593.0, 196.0], [601.0, 563.0], [636.0, 189.0], [622.0, 286.5], [651.0, 564.0], [671.0, 388.0], [652.0, 99.5], [703.0, 300.0], [690.0, 500.0], [702.0, 35.0], [684.0, 14.0], [737.0, 197.0], [744.0, 604.5], [762.0, 601.0], [773.0, 611.0], [791.0, 535.0], [804.0, 486.0], [828.0, 492.0], [802.0, 514.0], [822.0, 863.5], [845.0, 522.0], [861.0, 253.0], [854.0, 97.5], [894.0, 491.0], [892.0, 506.0], [881.0, 598.5], [865.0, 80.0], [896.0, 418.0], [905.0, 193.0], [900.0, 598.0], [935.0, 484.0], [959.0, 499.0], [956.0, 1246.0], [950.0, 108.5], [949.0, 383.5], [979.0, 329.0], [968.0, 517.5], [985.0, 148.0], [995.0, 452.0], [1013.0, 61.0], [997.0, 866.0], [1006.0, 622.0], [996.0, 1451.5], [1022.0, 142.5], [1016.0, 15.0], [1032.0, 508.5], [1041.0, 467.0], [1049.0, 895.0], [1057.0, 481.5], [1025.0, 490.0], [1030.0, 181.0], [1069.0, 777.0], [1067.0, 361.5], [1058.0, 1132.0], [1076.0, 166.0], [1035.0, 120.0], [1039.0, 838.0], [1130.0, 406.5], [1107.0, 483.0], [1111.0, 158.0], [1108.0, 919.0], [1117.0, 682.0], [1149.0, 962.5], [1214.0, 205.0], [1169.0, 1134.0], [1176.0, 45.0], [1206.0, 15.0], [1227.0, 384.0], [1252.0, 329.0], [1233.0, 255.0], [1259.0, 35.0], [1266.0, 41.0], [1253.0, 41.0], [1249.0, 21.0], [1287.0, 341.0], [1336.0, 380.0], [1322.0, 388.0], [1305.0, 37.0], [1296.0, 28.0], [1284.0, 36.0], [1337.0, 28.0], [1398.0, 541.0], [1395.0, 354.5], [1383.0, 517.0], [1355.0, 228.0], [1388.0, 39.0], [1356.0, 30.0], [1368.0, 37.0], [1386.0, 35.0], [1394.0, 28.0], [1422.0, 461.0], [1441.0, 459.0], [1412.0, 319.0], [1446.0, 271.0], [1439.0, 1456.0], [1436.0, 38.0], [1450.0, 37.0], [1461.0, 26.0], [1449.0, 24.0], [1488.0, 494.5], [1506.0, 270.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[702.0, 265.0], [822.0, 269.5], [861.0, 160.0], [854.0, 353.5], [881.0, 107.0], [865.0, 419.0], [894.0, 836.5], [896.0, 14662.0], [905.0, 583.5], [900.0, 263.0], [956.0, 283.0], [950.0, 145.0], [949.0, 48.0], [979.0, 168.0], [968.0, 94.0], [985.0, 77.0], [1013.0, 296.5], [997.0, 224.0], [1006.0, 114.0], [996.0, 198.5], [1022.0, 146.5], [1076.0, 116.0], [1030.0, 203.0], [1069.0, 200.0], [1025.0, 349.0], [1067.0, 903.0], [1058.0, 276.0], [1049.0, 846.0], [1035.0, 442.0], [1039.0, 98.0], [1107.0, 422.0], [1111.0, 94.5], [1108.0, 213.0], [1117.0, 161.0], [1149.0, 22.0], [1214.0, 296.0], [1169.0, 108.0], [1176.0, 52.0], [1252.0, 545.0], [1233.0, 225.0], [1266.0, 40.0], [1253.0, 63.0], [1322.0, 25.0], [1305.0, 20.0], [1355.0, 2988.0], [1356.0, 8.0], [1439.0, 573.5], [1506.0, 46.0], [49.0, 12448.0], [315.0, 10014.0], [327.0, 10029.0], [379.0, 10104.0], [385.0, 10097.0], [409.0, 10079.0], [480.0, 10093.0], [509.0, 10111.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1506.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 16091.5, "series": [{"data": [[2.0, 16091.5], [3.0, 10270.0], [4.0, 598.5], [13.0, 15.0], [22.0, 1429.5], [43.0, 1105.0], [45.0, 1315.5], [44.0, 1304.0], [47.0, 1206.0], [49.0, 1286.0], [48.0, 1311.0], [51.0, 1196.0], [60.0, 813.0], [69.0, 1014.0], [80.0, 1006.5], [83.0, 787.0], [87.0, 699.0], [88.0, 611.5], [91.0, 698.0], [101.0, 590.0], [100.0, 616.5], [108.0, 13.0], [119.0, 14.0], [127.0, 512.0], [126.0, 598.0], [133.0, 409.0], [141.0, 407.0], [144.0, 390.0], [150.0, 505.5], [145.0, 13.0], [159.0, 404.0], [154.0, 351.5], [163.0, 391.0], [172.0, 15.0], [192.0, 4397.0], [200.0, 398.5], [201.0, 4103.0], [208.0, 3893.5], [209.0, 774.0], [219.0, 4010.0], [246.0, 3793.5], [240.0, 4517.5], [257.0, 3222.0], [282.0, 4700.5], [279.0, 3699.0], [289.0, 4107.0], [301.0, 4199.0], [294.0, 2731.0], [319.0, 2070.0], [314.0, 4810.5], [315.0, 98.5], [322.0, 2684.0], [331.0, 4480.0], [334.0, 4248.0], [327.0, 93.0], [346.0, 1445.5], [337.0, 17.0], [344.0, 18.0], [379.0, 194.0], [383.0, 95.0], [393.0, 248.0], [385.0, 185.0], [409.0, 100.0], [407.0, 94.0], [445.0, 973.0], [480.0, 96.0], [509.0, 86.5], [502.0, 16.0], [550.0, 473.0], [571.0, 22.0], [593.0, 196.0], [601.0, 563.0], [636.0, 189.0], [622.0, 286.5], [651.0, 564.0], [671.0, 388.0], [652.0, 99.5], [703.0, 300.0], [690.0, 500.0], [702.0, 35.0], [684.0, 13.5], [737.0, 197.0], [744.0, 604.5], [762.0, 601.0], [773.0, 611.0], [791.0, 535.0], [804.0, 486.0], [828.0, 492.0], [802.0, 514.0], [822.0, 863.5], [845.0, 522.0], [861.0, 253.0], [854.0, 97.5], [894.0, 491.0], [892.0, 506.0], [881.0, 598.5], [865.0, 80.0], [896.0, 418.0], [905.0, 193.0], [900.0, 598.0], [935.0, 484.0], [959.0, 499.0], [956.0, 1246.0], [950.0, 108.5], [949.0, 383.5], [979.0, 329.0], [968.0, 517.5], [985.0, 148.0], [995.0, 452.0], [1013.0, 61.0], [997.0, 866.0], [1006.0, 622.0], [996.0, 1451.5], [1022.0, 142.5], [1016.0, 15.0], [1032.0, 508.5], [1041.0, 467.0], [1049.0, 895.0], [1057.0, 481.5], [1025.0, 490.0], [1030.0, 178.5], [1069.0, 777.0], [1067.0, 361.5], [1058.0, 1132.0], [1076.0, 164.0], [1035.0, 120.0], [1039.0, 838.0], [1130.0, 406.0], [1107.0, 483.0], [1111.0, 158.0], [1108.0, 919.0], [1117.0, 678.5], [1149.0, 962.5], [1214.0, 205.0], [1169.0, 1132.5], [1176.0, 45.0], [1206.0, 15.0], [1227.0, 384.0], [1252.0, 329.0], [1233.0, 255.0], [1259.0, 35.0], [1266.0, 41.0], [1253.0, 41.0], [1249.0, 21.0], [1287.0, 341.0], [1336.0, 380.0], [1322.0, 388.0], [1305.0, 36.0], [1296.0, 28.0], [1284.0, 36.0], [1337.0, 28.0], [1398.0, 541.0], [1395.0, 354.5], [1383.0, 517.0], [1355.0, 228.0], [1388.0, 38.0], [1356.0, 30.0], [1368.0, 37.0], [1386.0, 35.0], [1394.0, 28.0], [1422.0, 460.5], [1441.0, 458.0], [1412.0, 319.0], [1446.0, 271.0], [1439.0, 1456.0], [1436.0, 38.0], [1450.0, 37.0], [1461.0, 26.0], [1449.0, 24.0], [1488.0, 494.0], [1506.0, 270.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[702.0, 0.0], [822.0, 0.0], [861.0, 0.0], [854.0, 0.0], [881.0, 0.0], [865.0, 0.0], [894.0, 0.0], [896.0, 14662.0], [905.0, 0.0], [900.0, 0.0], [956.0, 0.0], [950.0, 0.0], [949.0, 0.0], [979.0, 0.0], [968.0, 0.0], [985.0, 0.0], [1013.0, 0.0], [997.0, 0.0], [1006.0, 0.0], [996.0, 0.0], [1022.0, 0.0], [1076.0, 0.0], [1030.0, 0.0], [1069.0, 0.0], [1025.0, 0.0], [1067.0, 0.0], [1058.0, 0.0], [1049.0, 0.0], [1035.0, 0.0], [1039.0, 0.0], [1107.0, 0.0], [1111.0, 0.0], [1108.0, 0.0], [1117.0, 0.0], [1149.0, 0.0], [1214.0, 0.0], [1169.0, 0.0], [1176.0, 0.0], [1252.0, 0.0], [1233.0, 0.0], [1266.0, 0.0], [1253.0, 0.0], [1322.0, 0.0], [1305.0, 0.0], [1355.0, 2988.0], [1356.0, 0.0], [1439.0, 0.0], [1506.0, 46.0], [49.0, 12448.0], [315.0, 10014.0], [327.0, 10029.0], [379.0, 10104.0], [385.0, 10097.0], [409.0, 10079.0], [480.0, 10093.0], [509.0, 10111.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1506.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 22.566666666666666, "minX": 1.62511542E12, "maxY": 1042.2333333333333, "series": [{"data": [[1.62511554E12, 1042.2333333333333], [1.62511542E12, 22.566666666666666], [1.6251156E12, 887.5166666666667], [1.62511548E12, 279.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6251156E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.62511542E12, "maxY": 883.7, "series": [{"data": [[1.62511554E12, 883.7], [1.62511542E12, 21.5], [1.6251156E12, 738.1], [1.62511548E12, 262.35], [1.62511566E12, 0.05]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.62511554E12, 0.05], [1.62511548E12, 1.6]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.62511554E12, 158.68333333333334], [1.6251156E12, 166.23333333333332]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62511566E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.62511542E12, "maxY": 457.85, "series": [{"data": [[1.62511554E12, 95.0], [1.6251156E12, 102.83333333333333], [1.62511548E12, 0.8166666666666667]], "isOverall": false, "label": "get-failure", "isController": false}, {"data": [[1.62511554E12, 425.85], [1.62511542E12, 10.966666666666667], [1.6251156E12, 352.5], [1.62511548E12, 135.35], [1.62511566E12, 0.03333333333333333]], "isOverall": false, "label": "get-success", "isController": false}, {"data": [[1.62511554E12, 457.85], [1.62511542E12, 10.533333333333333], [1.6251156E12, 385.6], [1.62511548E12, 127.0], [1.62511566E12, 0.016666666666666666]], "isOverall": false, "label": "post-success", "isController": false}, {"data": [[1.62511554E12, 63.733333333333334], [1.6251156E12, 63.4], [1.62511548E12, 0.7833333333333333]], "isOverall": false, "label": "post-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62511566E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.62511542E12, "maxY": 883.7, "series": [{"data": [[1.62511554E12, 883.7], [1.62511542E12, 21.5], [1.6251156E12, 738.1], [1.62511548E12, 262.35], [1.62511566E12, 0.05]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.62511554E12, 158.73333333333332], [1.6251156E12, 166.23333333333332], [1.62511548E12, 1.6]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62511566E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

