/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 4483.0, "series": [{"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 4.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 6.0], [6.5, 6.0], [6.6, 6.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 6.0], [9.3, 6.0], [9.4, 6.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 6.0], [10.8, 6.0], [10.9, 6.0], [11.0, 6.0], [11.1, 6.0], [11.2, 6.0], [11.3, 6.0], [11.4, 6.0], [11.5, 6.0], [11.6, 6.0], [11.7, 6.0], [11.8, 6.0], [11.9, 6.0], [12.0, 6.0], [12.1, 6.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 7.0], [13.0, 7.0], [13.1, 7.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 7.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 7.0], [17.6, 7.0], [17.7, 7.0], [17.8, 7.0], [17.9, 7.0], [18.0, 7.0], [18.1, 7.0], [18.2, 7.0], [18.3, 7.0], [18.4, 7.0], [18.5, 7.0], [18.6, 7.0], [18.7, 7.0], [18.8, 7.0], [18.9, 7.0], [19.0, 7.0], [19.1, 7.0], [19.2, 7.0], [19.3, 7.0], [19.4, 7.0], [19.5, 7.0], [19.6, 7.0], [19.7, 7.0], [19.8, 7.0], [19.9, 7.0], [20.0, 7.0], [20.1, 7.0], [20.2, 7.0], [20.3, 7.0], [20.4, 7.0], [20.5, 7.0], [20.6, 7.0], [20.7, 7.0], [20.8, 7.0], [20.9, 7.0], [21.0, 7.0], [21.1, 7.0], [21.2, 7.0], [21.3, 7.0], [21.4, 7.0], [21.5, 7.0], [21.6, 7.0], [21.7, 7.0], [21.8, 7.0], [21.9, 7.0], [22.0, 7.0], [22.1, 7.0], [22.2, 7.0], [22.3, 7.0], [22.4, 7.0], [22.5, 7.0], [22.6, 7.0], [22.7, 7.0], [22.8, 7.0], [22.9, 7.0], [23.0, 7.0], [23.1, 7.0], [23.2, 7.0], [23.3, 7.0], [23.4, 7.0], [23.5, 7.0], [23.6, 7.0], [23.7, 7.0], [23.8, 7.0], [23.9, 7.0], [24.0, 7.0], [24.1, 7.0], [24.2, 7.0], [24.3, 7.0], [24.4, 7.0], [24.5, 7.0], [24.6, 7.0], [24.7, 7.0], [24.8, 7.0], [24.9, 7.0], [25.0, 7.0], [25.1, 7.0], [25.2, 7.0], [25.3, 7.0], [25.4, 7.0], [25.5, 7.0], [25.6, 7.0], [25.7, 7.0], [25.8, 7.0], [25.9, 7.0], [26.0, 7.0], [26.1, 7.0], [26.2, 7.0], [26.3, 7.0], [26.4, 7.0], [26.5, 7.0], [26.6, 7.0], [26.7, 7.0], [26.8, 7.0], [26.9, 7.0], [27.0, 7.0], [27.1, 7.0], [27.2, 7.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 8.0], [29.6, 8.0], [29.7, 8.0], [29.8, 8.0], [29.9, 8.0], [30.0, 8.0], [30.1, 8.0], [30.2, 8.0], [30.3, 8.0], [30.4, 8.0], [30.5, 8.0], [30.6, 8.0], [30.7, 8.0], [30.8, 8.0], [30.9, 8.0], [31.0, 8.0], [31.1, 8.0], [31.2, 8.0], [31.3, 8.0], [31.4, 8.0], [31.5, 8.0], [31.6, 8.0], [31.7, 8.0], [31.8, 8.0], [31.9, 8.0], [32.0, 8.0], [32.1, 8.0], [32.2, 8.0], [32.3, 8.0], [32.4, 8.0], [32.5, 8.0], [32.6, 8.0], [32.7, 8.0], [32.8, 8.0], [32.9, 8.0], [33.0, 8.0], [33.1, 8.0], [33.2, 8.0], [33.3, 8.0], [33.4, 8.0], [33.5, 8.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 8.0], [38.6, 8.0], [38.7, 8.0], [38.8, 8.0], [38.9, 8.0], [39.0, 8.0], [39.1, 8.0], [39.2, 8.0], [39.3, 8.0], [39.4, 8.0], [39.5, 8.0], [39.6, 8.0], [39.7, 8.0], [39.8, 8.0], [39.9, 8.0], [40.0, 8.0], [40.1, 8.0], [40.2, 8.0], [40.3, 8.0], [40.4, 8.0], [40.5, 8.0], [40.6, 8.0], [40.7, 8.0], [40.8, 8.0], [40.9, 8.0], [41.0, 8.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 9.0], [43.6, 9.0], [43.7, 9.0], [43.8, 9.0], [43.9, 9.0], [44.0, 9.0], [44.1, 9.0], [44.2, 9.0], [44.3, 9.0], [44.4, 9.0], [44.5, 9.0], [44.6, 9.0], [44.7, 9.0], [44.8, 9.0], [44.9, 9.0], [45.0, 9.0], [45.1, 9.0], [45.2, 9.0], [45.3, 9.0], [45.4, 9.0], [45.5, 9.0], [45.6, 9.0], [45.7, 9.0], [45.8, 9.0], [45.9, 9.0], [46.0, 9.0], [46.1, 9.0], [46.2, 9.0], [46.3, 9.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 9.0], [50.0, 9.0], [50.1, 9.0], [50.2, 9.0], [50.3, 9.0], [50.4, 9.0], [50.5, 9.0], [50.6, 9.0], [50.7, 9.0], [50.8, 9.0], [50.9, 9.0], [51.0, 9.0], [51.1, 9.0], [51.2, 9.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 10.0], [53.9, 10.0], [54.0, 10.0], [54.1, 10.0], [54.2, 10.0], [54.3, 10.0], [54.4, 10.0], [54.5, 10.0], [54.6, 10.0], [54.7, 10.0], [54.8, 10.0], [54.9, 10.0], [55.0, 10.0], [55.1, 10.0], [55.2, 10.0], [55.3, 10.0], [55.4, 10.0], [55.5, 10.0], [55.6, 10.0], [55.7, 10.0], [55.8, 10.0], [55.9, 10.0], [56.0, 10.0], [56.1, 10.0], [56.2, 10.0], [56.3, 10.0], [56.4, 10.0], [56.5, 10.0], [56.6, 10.0], [56.7, 10.0], [56.8, 10.0], [56.9, 10.0], [57.0, 10.0], [57.1, 10.0], [57.2, 10.0], [57.3, 10.0], [57.4, 10.0], [57.5, 10.0], [57.6, 10.0], [57.7, 10.0], [57.8, 10.0], [57.9, 10.0], [58.0, 10.0], [58.1, 10.0], [58.2, 10.0], [58.3, 11.0], [58.4, 11.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 11.0], [59.2, 11.0], [59.3, 11.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 11.0], [60.0, 11.0], [60.1, 11.0], [60.2, 11.0], [60.3, 11.0], [60.4, 11.0], [60.5, 11.0], [60.6, 11.0], [60.7, 11.0], [60.8, 11.0], [60.9, 11.0], [61.0, 11.0], [61.1, 11.0], [61.2, 11.0], [61.3, 11.0], [61.4, 11.0], [61.5, 11.0], [61.6, 11.0], [61.7, 11.0], [61.8, 11.0], [61.9, 11.0], [62.0, 11.0], [62.1, 11.0], [62.2, 11.0], [62.3, 11.0], [62.4, 11.0], [62.5, 11.0], [62.6, 11.0], [62.7, 12.0], [62.8, 12.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 12.0], [63.9, 12.0], [64.0, 12.0], [64.1, 12.0], [64.2, 12.0], [64.3, 12.0], [64.4, 12.0], [64.5, 12.0], [64.6, 12.0], [64.7, 12.0], [64.8, 12.0], [64.9, 12.0], [65.0, 12.0], [65.1, 12.0], [65.2, 13.0], [65.3, 13.0], [65.4, 13.0], [65.5, 13.0], [65.6, 13.0], [65.7, 13.0], [65.8, 13.0], [65.9, 13.0], [66.0, 13.0], [66.1, 13.0], [66.2, 13.0], [66.3, 13.0], [66.4, 13.0], [66.5, 13.0], [66.6, 13.0], [66.7, 14.0], [66.8, 14.0], [66.9, 14.0], [67.0, 14.0], [67.1, 14.0], [67.2, 14.0], [67.3, 14.0], [67.4, 14.0], [67.5, 14.0], [67.6, 15.0], [67.7, 15.0], [67.8, 15.0], [67.9, 15.0], [68.0, 15.0], [68.1, 15.0], [68.2, 16.0], [68.3, 16.0], [68.4, 16.0], [68.5, 16.0], [68.6, 16.0], [68.7, 17.0], [68.8, 17.0], [68.9, 17.0], [69.0, 17.0], [69.1, 18.0], [69.2, 18.0], [69.3, 18.0], [69.4, 19.0], [69.5, 19.0], [69.6, 19.0], [69.7, 19.0], [69.8, 20.0], [69.9, 20.0], [70.0, 21.0], [70.1, 21.0], [70.2, 21.0], [70.3, 22.0], [70.4, 22.0], [70.5, 23.0], [70.6, 23.0], [70.7, 23.0], [70.8, 24.0], [70.9, 24.0], [71.0, 25.0], [71.1, 25.0], [71.2, 26.0], [71.3, 26.0], [71.4, 27.0], [71.5, 28.0], [71.6, 28.0], [71.7, 29.0], [71.8, 29.0], [71.9, 30.0], [72.0, 30.0], [72.1, 31.0], [72.2, 31.0], [72.3, 32.0], [72.4, 32.0], [72.5, 33.0], [72.6, 34.0], [72.7, 34.0], [72.8, 35.0], [72.9, 35.0], [73.0, 36.0], [73.1, 36.0], [73.2, 37.0], [73.3, 37.0], [73.4, 38.0], [73.5, 38.0], [73.6, 39.0], [73.7, 39.0], [73.8, 40.0], [73.9, 40.0], [74.0, 41.0], [74.1, 41.0], [74.2, 41.0], [74.3, 42.0], [74.4, 42.0], [74.5, 43.0], [74.6, 43.0], [74.7, 44.0], [74.8, 44.0], [74.9, 44.0], [75.0, 45.0], [75.1, 45.0], [75.2, 46.0], [75.3, 46.0], [75.4, 46.0], [75.5, 47.0], [75.6, 47.0], [75.7, 48.0], [75.8, 48.0], [75.9, 48.0], [76.0, 49.0], [76.1, 49.0], [76.2, 50.0], [76.3, 50.0], [76.4, 50.0], [76.5, 51.0], [76.6, 51.0], [76.7, 51.0], [76.8, 52.0], [76.9, 52.0], [77.0, 52.0], [77.1, 53.0], [77.2, 53.0], [77.3, 54.0], [77.4, 54.0], [77.5, 54.0], [77.6, 55.0], [77.7, 55.0], [77.8, 55.0], [77.9, 56.0], [78.0, 56.0], [78.1, 56.0], [78.2, 57.0], [78.3, 57.0], [78.4, 57.0], [78.5, 58.0], [78.6, 58.0], [78.7, 58.0], [78.8, 59.0], [78.9, 59.0], [79.0, 59.0], [79.1, 60.0], [79.2, 60.0], [79.3, 60.0], [79.4, 61.0], [79.5, 61.0], [79.6, 61.0], [79.7, 62.0], [79.8, 62.0], [79.9, 62.0], [80.0, 63.0], [80.1, 63.0], [80.2, 63.0], [80.3, 64.0], [80.4, 64.0], [80.5, 64.0], [80.6, 65.0], [80.7, 65.0], [80.8, 65.0], [80.9, 66.0], [81.0, 66.0], [81.1, 66.0], [81.2, 66.0], [81.3, 67.0], [81.4, 67.0], [81.5, 67.0], [81.6, 68.0], [81.7, 68.0], [81.8, 68.0], [81.9, 68.0], [82.0, 69.0], [82.1, 69.0], [82.2, 69.0], [82.3, 70.0], [82.4, 70.0], [82.5, 70.0], [82.6, 70.0], [82.7, 71.0], [82.8, 71.0], [82.9, 71.0], [83.0, 71.0], [83.1, 72.0], [83.2, 72.0], [83.3, 72.0], [83.4, 72.0], [83.5, 73.0], [83.6, 73.0], [83.7, 73.0], [83.8, 73.0], [83.9, 74.0], [84.0, 74.0], [84.1, 74.0], [84.2, 74.0], [84.3, 75.0], [84.4, 75.0], [84.5, 75.0], [84.6, 75.0], [84.7, 76.0], [84.8, 76.0], [84.9, 76.0], [85.0, 76.0], [85.1, 76.0], [85.2, 77.0], [85.3, 77.0], [85.4, 77.0], [85.5, 77.0], [85.6, 78.0], [85.7, 78.0], [85.8, 78.0], [85.9, 78.0], [86.0, 78.0], [86.1, 79.0], [86.2, 79.0], [86.3, 79.0], [86.4, 79.0], [86.5, 80.0], [86.6, 80.0], [86.7, 80.0], [86.8, 80.0], [86.9, 81.0], [87.0, 81.0], [87.1, 81.0], [87.2, 81.0], [87.3, 81.0], [87.4, 82.0], [87.5, 82.0], [87.6, 82.0], [87.7, 82.0], [87.8, 83.0], [87.9, 83.0], [88.0, 83.0], [88.1, 83.0], [88.2, 84.0], [88.3, 84.0], [88.4, 84.0], [88.5, 84.0], [88.6, 85.0], [88.7, 85.0], [88.8, 85.0], [88.9, 85.0], [89.0, 86.0], [89.1, 86.0], [89.2, 86.0], [89.3, 86.0], [89.4, 87.0], [89.5, 87.0], [89.6, 87.0], [89.7, 88.0], [89.8, 88.0], [89.9, 88.0], [90.0, 89.0], [90.1, 89.0], [90.2, 89.0], [90.3, 89.0], [90.4, 90.0], [90.5, 90.0], [90.6, 90.0], [90.7, 91.0], [90.8, 91.0], [90.9, 91.0], [91.0, 92.0], [91.1, 92.0], [91.2, 92.0], [91.3, 93.0], [91.4, 93.0], [91.5, 93.0], [91.6, 94.0], [91.7, 94.0], [91.8, 94.0], [91.9, 95.0], [92.0, 95.0], [92.1, 95.0], [92.2, 96.0], [92.3, 96.0], [92.4, 96.0], [92.5, 97.0], [92.6, 97.0], [92.7, 97.0], [92.8, 98.0], [92.9, 98.0], [93.0, 99.0], [93.1, 99.0], [93.2, 99.0], [93.3, 100.0], [93.4, 100.0], [93.5, 101.0], [93.6, 102.0], [93.7, 102.0], [93.8, 103.0], [93.9, 104.0], [94.0, 105.0], [94.1, 107.0], [94.2, 109.0], [94.3, 111.0], [94.4, 114.0], [94.5, 118.0], [94.6, 122.0], [94.7, 126.0], [94.8, 130.0], [94.9, 134.0], [95.0, 138.0], [95.1, 141.0], [95.2, 145.0], [95.3, 149.0], [95.4, 153.0], [95.5, 157.0], [95.6, 161.0], [95.7, 166.0], [95.8, 170.0], [95.9, 174.0], [96.0, 178.0], [96.1, 183.0], [96.2, 186.0], [96.3, 190.0], [96.4, 194.0], [96.5, 197.0], [96.6, 201.0], [96.7, 206.0], [96.8, 212.0], [96.9, 222.0], [97.0, 234.0], [97.1, 245.0], [97.2, 255.0], [97.3, 267.0], [97.4, 278.0], [97.5, 288.0], [97.6, 296.0], [97.7, 304.0], [97.8, 321.0], [97.9, 346.0], [98.0, 370.0], [98.1, 388.0], [98.2, 403.0], [98.3, 436.0], [98.4, 469.0], [98.5, 495.0], [98.6, 519.0], [98.7, 566.0], [98.8, 598.0], [98.9, 643.0], [99.0, 689.0], [99.1, 732.0], [99.2, 793.0], [99.3, 883.0], [99.4, 971.0], [99.5, 1089.0], [99.6, 1242.0], [99.7, 1423.0], [99.8, 1616.0], [99.9, 1887.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 6.0], [6.5, 6.0], [6.6, 6.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 6.0], [9.3, 6.0], [9.4, 6.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 7.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 7.0], [13.0, 7.0], [13.1, 7.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 7.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 7.0], [17.6, 7.0], [17.7, 7.0], [17.8, 7.0], [17.9, 7.0], [18.0, 7.0], [18.1, 7.0], [18.2, 7.0], [18.3, 7.0], [18.4, 7.0], [18.5, 7.0], [18.6, 7.0], [18.7, 7.0], [18.8, 7.0], [18.9, 7.0], [19.0, 7.0], [19.1, 7.0], [19.2, 7.0], [19.3, 7.0], [19.4, 7.0], [19.5, 7.0], [19.6, 7.0], [19.7, 7.0], [19.8, 7.0], [19.9, 7.0], [20.0, 7.0], [20.1, 7.0], [20.2, 7.0], [20.3, 7.0], [20.4, 7.0], [20.5, 7.0], [20.6, 7.0], [20.7, 7.0], [20.8, 7.0], [20.9, 7.0], [21.0, 7.0], [21.1, 7.0], [21.2, 7.0], [21.3, 7.0], [21.4, 7.0], [21.5, 7.0], [21.6, 7.0], [21.7, 7.0], [21.8, 7.0], [21.9, 7.0], [22.0, 7.0], [22.1, 7.0], [22.2, 7.0], [22.3, 7.0], [22.4, 7.0], [22.5, 7.0], [22.6, 7.0], [22.7, 7.0], [22.8, 7.0], [22.9, 7.0], [23.0, 7.0], [23.1, 7.0], [23.2, 7.0], [23.3, 7.0], [23.4, 7.0], [23.5, 7.0], [23.6, 7.0], [23.7, 7.0], [23.8, 7.0], [23.9, 7.0], [24.0, 7.0], [24.1, 7.0], [24.2, 7.0], [24.3, 7.0], [24.4, 7.0], [24.5, 7.0], [24.6, 7.0], [24.7, 8.0], [24.8, 8.0], [24.9, 8.0], [25.0, 8.0], [25.1, 8.0], [25.2, 8.0], [25.3, 8.0], [25.4, 8.0], [25.5, 8.0], [25.6, 8.0], [25.7, 8.0], [25.8, 8.0], [25.9, 8.0], [26.0, 8.0], [26.1, 8.0], [26.2, 8.0], [26.3, 8.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 8.0], [27.2, 8.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 8.0], [29.6, 8.0], [29.7, 8.0], [29.8, 8.0], [29.9, 8.0], [30.0, 8.0], [30.1, 8.0], [30.2, 8.0], [30.3, 8.0], [30.4, 8.0], [30.5, 8.0], [30.6, 8.0], [30.7, 8.0], [30.8, 8.0], [30.9, 8.0], [31.0, 8.0], [31.1, 8.0], [31.2, 8.0], [31.3, 8.0], [31.4, 8.0], [31.5, 8.0], [31.6, 8.0], [31.7, 8.0], [31.8, 8.0], [31.9, 8.0], [32.0, 8.0], [32.1, 8.0], [32.2, 8.0], [32.3, 8.0], [32.4, 8.0], [32.5, 8.0], [32.6, 8.0], [32.7, 8.0], [32.8, 8.0], [32.9, 8.0], [33.0, 8.0], [33.1, 8.0], [33.2, 8.0], [33.3, 8.0], [33.4, 8.0], [33.5, 8.0], [33.6, 8.0], [33.7, 8.0], [33.8, 8.0], [33.9, 8.0], [34.0, 8.0], [34.1, 8.0], [34.2, 8.0], [34.3, 8.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 8.0], [38.4, 8.0], [38.5, 8.0], [38.6, 8.0], [38.7, 8.0], [38.8, 8.0], [38.9, 8.0], [39.0, 8.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 9.0], [43.6, 9.0], [43.7, 9.0], [43.8, 9.0], [43.9, 9.0], [44.0, 9.0], [44.1, 9.0], [44.2, 9.0], [44.3, 9.0], [44.4, 9.0], [44.5, 9.0], [44.6, 9.0], [44.7, 9.0], [44.8, 9.0], [44.9, 9.0], [45.0, 9.0], [45.1, 9.0], [45.2, 9.0], [45.3, 9.0], [45.4, 9.0], [45.5, 9.0], [45.6, 9.0], [45.7, 9.0], [45.8, 9.0], [45.9, 9.0], [46.0, 9.0], [46.1, 9.0], [46.2, 9.0], [46.3, 9.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 9.0], [47.7, 9.0], [47.8, 9.0], [47.9, 9.0], [48.0, 9.0], [48.1, 9.0], [48.2, 9.0], [48.3, 9.0], [48.4, 9.0], [48.5, 9.0], [48.6, 9.0], [48.7, 9.0], [48.8, 9.0], [48.9, 9.0], [49.0, 9.0], [49.1, 9.0], [49.2, 9.0], [49.3, 9.0], [49.4, 9.0], [49.5, 9.0], [49.6, 9.0], [49.7, 9.0], [49.8, 9.0], [49.9, 10.0], [50.0, 10.0], [50.1, 10.0], [50.2, 10.0], [50.3, 10.0], [50.4, 10.0], [50.5, 10.0], [50.6, 10.0], [50.7, 10.0], [50.8, 10.0], [50.9, 10.0], [51.0, 10.0], [51.1, 10.0], [51.2, 10.0], [51.3, 10.0], [51.4, 10.0], [51.5, 10.0], [51.6, 10.0], [51.7, 10.0], [51.8, 10.0], [51.9, 10.0], [52.0, 10.0], [52.1, 10.0], [52.2, 10.0], [52.3, 10.0], [52.4, 10.0], [52.5, 10.0], [52.6, 10.0], [52.7, 10.0], [52.8, 10.0], [52.9, 10.0], [53.0, 10.0], [53.1, 10.0], [53.2, 10.0], [53.3, 10.0], [53.4, 10.0], [53.5, 10.0], [53.6, 10.0], [53.7, 10.0], [53.8, 10.0], [53.9, 10.0], [54.0, 10.0], [54.1, 10.0], [54.2, 10.0], [54.3, 10.0], [54.4, 10.0], [54.5, 10.0], [54.6, 10.0], [54.7, 10.0], [54.8, 10.0], [54.9, 10.0], [55.0, 10.0], [55.1, 10.0], [55.2, 10.0], [55.3, 10.0], [55.4, 10.0], [55.5, 10.0], [55.6, 10.0], [55.7, 10.0], [55.8, 10.0], [55.9, 10.0], [56.0, 10.0], [56.1, 10.0], [56.2, 10.0], [56.3, 10.0], [56.4, 10.0], [56.5, 10.0], [56.6, 10.0], [56.7, 10.0], [56.8, 10.0], [56.9, 10.0], [57.0, 10.0], [57.1, 10.0], [57.2, 10.0], [57.3, 10.0], [57.4, 11.0], [57.5, 11.0], [57.6, 11.0], [57.7, 11.0], [57.8, 11.0], [57.9, 11.0], [58.0, 11.0], [58.1, 11.0], [58.2, 11.0], [58.3, 11.0], [58.4, 11.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 11.0], [59.2, 11.0], [59.3, 11.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 11.0], [60.0, 11.0], [60.1, 11.0], [60.2, 11.0], [60.3, 11.0], [60.4, 11.0], [60.5, 11.0], [60.6, 11.0], [60.7, 11.0], [60.8, 11.0], [60.9, 11.0], [61.0, 11.0], [61.1, 11.0], [61.2, 11.0], [61.3, 11.0], [61.4, 11.0], [61.5, 11.0], [61.6, 11.0], [61.7, 11.0], [61.8, 11.0], [61.9, 11.0], [62.0, 11.0], [62.1, 12.0], [62.2, 12.0], [62.3, 12.0], [62.4, 12.0], [62.5, 12.0], [62.6, 12.0], [62.7, 12.0], [62.8, 12.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 12.0], [63.9, 12.0], [64.0, 12.0], [64.1, 12.0], [64.2, 12.0], [64.3, 12.0], [64.4, 12.0], [64.5, 12.0], [64.6, 12.0], [64.7, 12.0], [64.8, 12.0], [64.9, 13.0], [65.0, 13.0], [65.1, 13.0], [65.2, 13.0], [65.3, 13.0], [65.4, 13.0], [65.5, 13.0], [65.6, 13.0], [65.7, 13.0], [65.8, 13.0], [65.9, 13.0], [66.0, 13.0], [66.1, 13.0], [66.2, 13.0], [66.3, 13.0], [66.4, 14.0], [66.5, 14.0], [66.6, 14.0], [66.7, 14.0], [66.8, 14.0], [66.9, 14.0], [67.0, 14.0], [67.1, 14.0], [67.2, 14.0], [67.3, 14.0], [67.4, 15.0], [67.5, 15.0], [67.6, 15.0], [67.7, 15.0], [67.8, 15.0], [67.9, 15.0], [68.0, 15.0], [68.1, 16.0], [68.2, 16.0], [68.3, 16.0], [68.4, 16.0], [68.5, 16.0], [68.6, 17.0], [68.7, 17.0], [68.8, 17.0], [68.9, 17.0], [69.0, 18.0], [69.1, 18.0], [69.2, 18.0], [69.3, 19.0], [69.4, 19.0], [69.5, 19.0], [69.6, 20.0], [69.7, 20.0], [69.8, 20.0], [69.9, 21.0], [70.0, 21.0], [70.1, 21.0], [70.2, 22.0], [70.3, 22.0], [70.4, 23.0], [70.5, 23.0], [70.6, 23.0], [70.7, 24.0], [70.8, 24.0], [70.9, 25.0], [71.0, 25.0], [71.1, 26.0], [71.2, 26.0], [71.3, 27.0], [71.4, 27.0], [71.5, 28.0], [71.6, 28.0], [71.7, 29.0], [71.8, 29.0], [71.9, 30.0], [72.0, 31.0], [72.1, 31.0], [72.2, 32.0], [72.3, 32.0], [72.4, 33.0], [72.5, 33.0], [72.6, 34.0], [72.7, 34.0], [72.8, 35.0], [72.9, 35.0], [73.0, 36.0], [73.1, 36.0], [73.2, 37.0], [73.3, 37.0], [73.4, 38.0], [73.5, 38.0], [73.6, 39.0], [73.7, 39.0], [73.8, 40.0], [73.9, 40.0], [74.0, 41.0], [74.1, 41.0], [74.2, 42.0], [74.3, 42.0], [74.4, 42.0], [74.5, 43.0], [74.6, 43.0], [74.7, 44.0], [74.8, 44.0], [74.9, 45.0], [75.0, 45.0], [75.1, 45.0], [75.2, 46.0], [75.3, 46.0], [75.4, 47.0], [75.5, 47.0], [75.6, 47.0], [75.7, 48.0], [75.8, 48.0], [75.9, 49.0], [76.0, 49.0], [76.1, 49.0], [76.2, 50.0], [76.3, 50.0], [76.4, 50.0], [76.5, 51.0], [76.6, 51.0], [76.7, 52.0], [76.8, 52.0], [76.9, 52.0], [77.0, 53.0], [77.1, 53.0], [77.2, 53.0], [77.3, 54.0], [77.4, 54.0], [77.5, 54.0], [77.6, 55.0], [77.7, 55.0], [77.8, 56.0], [77.9, 56.0], [78.0, 56.0], [78.1, 57.0], [78.2, 57.0], [78.3, 57.0], [78.4, 58.0], [78.5, 58.0], [78.6, 58.0], [78.7, 59.0], [78.8, 59.0], [78.9, 59.0], [79.0, 60.0], [79.1, 60.0], [79.2, 60.0], [79.3, 61.0], [79.4, 61.0], [79.5, 61.0], [79.6, 62.0], [79.7, 62.0], [79.8, 62.0], [79.9, 63.0], [80.0, 63.0], [80.1, 63.0], [80.2, 64.0], [80.3, 64.0], [80.4, 64.0], [80.5, 64.0], [80.6, 65.0], [80.7, 65.0], [80.8, 65.0], [80.9, 66.0], [81.0, 66.0], [81.1, 66.0], [81.2, 67.0], [81.3, 67.0], [81.4, 67.0], [81.5, 67.0], [81.6, 68.0], [81.7, 68.0], [81.8, 68.0], [81.9, 69.0], [82.0, 69.0], [82.1, 69.0], [82.2, 69.0], [82.3, 70.0], [82.4, 70.0], [82.5, 70.0], [82.6, 70.0], [82.7, 71.0], [82.8, 71.0], [82.9, 71.0], [83.0, 72.0], [83.1, 72.0], [83.2, 72.0], [83.3, 72.0], [83.4, 73.0], [83.5, 73.0], [83.6, 73.0], [83.7, 73.0], [83.8, 74.0], [83.9, 74.0], [84.0, 74.0], [84.1, 74.0], [84.2, 75.0], [84.3, 75.0], [84.4, 75.0], [84.5, 75.0], [84.6, 75.0], [84.7, 76.0], [84.8, 76.0], [84.9, 76.0], [85.0, 76.0], [85.1, 77.0], [85.2, 77.0], [85.3, 77.0], [85.4, 77.0], [85.5, 78.0], [85.6, 78.0], [85.7, 78.0], [85.8, 78.0], [85.9, 78.0], [86.0, 79.0], [86.1, 79.0], [86.2, 79.0], [86.3, 79.0], [86.4, 80.0], [86.5, 80.0], [86.6, 80.0], [86.7, 80.0], [86.8, 81.0], [86.9, 81.0], [87.0, 81.0], [87.1, 81.0], [87.2, 81.0], [87.3, 82.0], [87.4, 82.0], [87.5, 82.0], [87.6, 82.0], [87.7, 83.0], [87.8, 83.0], [87.9, 83.0], [88.0, 83.0], [88.1, 84.0], [88.2, 84.0], [88.3, 84.0], [88.4, 84.0], [88.5, 85.0], [88.6, 85.0], [88.7, 85.0], [88.8, 85.0], [88.9, 86.0], [89.0, 86.0], [89.1, 86.0], [89.2, 86.0], [89.3, 87.0], [89.4, 87.0], [89.5, 87.0], [89.6, 88.0], [89.7, 88.0], [89.8, 88.0], [89.9, 89.0], [90.0, 89.0], [90.1, 89.0], [90.2, 89.0], [90.3, 90.0], [90.4, 90.0], [90.5, 90.0], [90.6, 91.0], [90.7, 91.0], [90.8, 91.0], [90.9, 92.0], [91.0, 92.0], [91.1, 92.0], [91.2, 92.0], [91.3, 93.0], [91.4, 93.0], [91.5, 93.0], [91.6, 94.0], [91.7, 94.0], [91.8, 94.0], [91.9, 95.0], [92.0, 95.0], [92.1, 95.0], [92.2, 96.0], [92.3, 96.0], [92.4, 97.0], [92.5, 97.0], [92.6, 97.0], [92.7, 98.0], [92.8, 98.0], [92.9, 98.0], [93.0, 99.0], [93.1, 99.0], [93.2, 100.0], [93.3, 100.0], [93.4, 101.0], [93.5, 101.0], [93.6, 102.0], [93.7, 103.0], [93.8, 104.0], [93.9, 105.0], [94.0, 106.0], [94.1, 108.0], [94.2, 110.0], [94.3, 112.0], [94.4, 115.0], [94.5, 119.0], [94.6, 123.0], [94.7, 127.0], [94.8, 131.0], [94.9, 135.0], [95.0, 139.0], [95.1, 143.0], [95.2, 147.0], [95.3, 151.0], [95.4, 155.0], [95.5, 159.0], [95.6, 163.0], [95.7, 168.0], [95.8, 172.0], [95.9, 176.0], [96.0, 181.0], [96.1, 185.0], [96.2, 189.0], [96.3, 192.0], [96.4, 196.0], [96.5, 199.0], [96.6, 203.0], [96.7, 209.0], [96.8, 217.0], [96.9, 228.0], [97.0, 239.0], [97.1, 249.0], [97.2, 259.0], [97.3, 271.0], [97.4, 281.0], [97.5, 290.0], [97.6, 297.0], [97.7, 307.0], [97.8, 329.0], [97.9, 352.0], [98.0, 375.0], [98.1, 392.0], [98.2, 408.0], [98.3, 446.0], [98.4, 477.0], [98.5, 498.0], [98.6, 530.0], [98.7, 571.0], [98.8, 601.0], [98.9, 650.0], [99.0, 694.0], [99.1, 743.0], [99.2, 797.0], [99.3, 882.0], [99.4, 976.0], [99.5, 1087.0], [99.6, 1237.0], [99.7, 1433.0], [99.8, 1624.0], [99.9, 1892.0], [100.0, 4437.0]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1255467.0, "series": [{"data": [[0.0, 1255467.0], [600.0, 3084.0], [700.0, 2399.0], [800.0, 1585.0], [900.0, 1398.0], [1000.0, 1061.0], [1100.0, 860.0], [1200.0, 731.0], [1300.0, 764.0], [1400.0, 741.0], [1500.0, 680.0], [100.0, 45061.0], [1600.0, 604.0], [1700.0, 525.0], [1800.0, 354.0], [1900.0, 301.0], [2000.0, 276.0], [2100.0, 176.0], [2200.0, 130.0], [2300.0, 81.0], [2400.0, 74.0], [2500.0, 69.0], [2600.0, 50.0], [2700.0, 20.0], [2800.0, 16.0], [2900.0, 9.0], [3000.0, 4.0], [3100.0, 10.0], [200.0, 14702.0], [3300.0, 9.0], [3200.0, 21.0], [3400.0, 3.0], [3500.0, 4.0], [3700.0, 4.0], [3800.0, 12.0], [3900.0, 1.0], [4000.0, 1.0], [4200.0, 2.0], [4100.0, 4.0], [4300.0, 1.0], [4400.0, 1.0], [300.0, 7058.0], [400.0, 4769.0], [500.0, 3755.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[0.0, 1254984.0], [600.0, 3000.0], [700.0, 2505.0], [800.0, 1709.0], [900.0, 1372.0], [1000.0, 1079.0], [1100.0, 887.0], [1200.0, 766.0], [1300.0, 672.0], [1400.0, 711.0], [1500.0, 678.0], [100.0, 45351.0], [1600.0, 623.0], [1700.0, 546.0], [1800.0, 352.0], [1900.0, 308.0], [2000.0, 265.0], [2100.0, 146.0], [2200.0, 141.0], [2300.0, 105.0], [2400.0, 92.0], [2500.0, 70.0], [2600.0, 43.0], [2700.0, 32.0], [2800.0, 23.0], [2900.0, 14.0], [3000.0, 7.0], [3100.0, 8.0], [200.0, 15127.0], [3200.0, 17.0], [3300.0, 14.0], [3400.0, 2.0], [3500.0, 11.0], [3700.0, 6.0], [3600.0, 3.0], [3800.0, 4.0], [3900.0, 6.0], [4000.0, 1.0], [4200.0, 1.0], [4100.0, 1.0], [4400.0, 1.0], [300.0, 7076.0], [400.0, 4838.0], [500.0, 3852.0]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6948.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2654572.0, "series": [{"data": [[0.0, 2654572.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 32806.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6948.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 63.70060991779367, "minX": 1.62512616E12, "maxY": 1024.0, "series": [{"data": [[1.62512622E12, 63.70060991779367], [1.62512616E12, 64.0]], "isOverall": false, "label": "warm_up", "isController": false}, {"data": [[1.62512634E12, 63.96324744620891]], "isOverall": false, "label": "cool_down_phase", "isController": false}, {"data": [[1.62512628E12, 1024.0], [1.62512622E12, 1016.3563280674656], [1.62512634E12, 934.847747779185]], "isOverall": false, "label": "peak_phase", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62512634E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.0, "maxY": 1722.0, "series": [{"data": [[2.0, 438.5], [3.0, 443.0], [4.0, 276.0], [5.0, 594.3333333333334], [6.0, 10.0], [7.0, 28.5], [8.0, 389.33333333333337], [10.0, 508.7142857142857], [12.0, 93.0], [13.0, 115.75], [14.0, 51.0], [15.0, 19.0], [16.0, 19.142857142857142], [17.0, 89.0], [18.0, 41.666666666666664], [19.0, 21.615384615384613], [20.0, 52.25], [21.0, 50.0], [22.0, 36.75], [23.0, 38.5], [24.0, 17.5], [25.0, 8.0], [26.0, 56.8], [27.0, 41.0], [28.0, 20.25], [29.0, 8.333333333333334], [30.0, 36.875], [31.0, 14.5], [33.0, 34.33333333333333], [32.0, 13.0], [34.0, 25.666666666666668], [35.0, 8.5], [37.0, 568.0], [36.0, 44.5], [39.0, 76.0], [38.0, 246.2], [40.0, 37.666666666666664], [41.0, 874.5], [42.0, 7.8], [43.0, 10.2], [45.0, 27.25], [44.0, 14.818181818181817], [47.0, 8.18181818181818], [46.0, 13.166666666666668], [49.0, 7.8], [48.0, 7.0], [51.0, 12.482758620689657], [50.0, 7.375], [53.0, 8.857142857142856], [52.0, 8.476190476190478], [55.0, 10.160000000000002], [54.0, 8.125], [56.0, 10.625000000000002], [57.0, 8.8], [59.0, 16.25], [58.0, 11.162790697674417], [61.0, 16.181818181818183], [60.0, 17.166666666666664], [63.0, 26.79166666666667], [62.0, 18.199999999999996], [64.0, 16.898175136230897], [65.0, 7.75], [66.0, 8.307692307692307], [67.0, 7.666666666666667], [68.0, 9.0], [69.0, 20.727272727272723], [70.0, 14.833333333333332], [71.0, 8.125], [72.0, 52.9], [73.0, 14.105263157894738], [75.0, 9.0], [74.0, 20.571428571428573], [76.0, 9.840000000000002], [77.0, 11.0], [78.0, 21.312500000000004], [83.0, 47.8], [82.0, 8.494623655913978], [81.0, 8.588235294117647], [80.0, 51.800000000000004], [84.0, 73.75], [85.0, 11.696969696969699], [86.0, 82.54545454545455], [87.0, 16.0], [88.0, 19.333333333333332], [90.0, 26.68421052631579], [91.0, 29.0], [89.0, 11.833333333333332], [93.0, 8.75], [94.0, 18.75], [95.0, 39.5], [92.0, 8.75], [97.0, 16.0], [98.0, 23.846153846153847], [99.0, 38.166666666666664], [96.0, 454.25], [100.0, 46.83333333333333], [101.0, 92.0], [102.0, 14.363636363636363], [103.0, 7.75], [104.0, 6.428571428571429], [105.0, 8.5], [107.0, 7.6], [108.0, 8.714285714285714], [110.0, 7.0], [111.0, 8.0], [109.0, 8.1], [114.0, 9.0], [113.0, 7.0], [116.0, 10.2], [117.0, 36.5], [118.0, 34.333333333333336], [119.0, 141.0], [120.0, 39.0], [122.0, 58.666666666666664], [123.0, 87.83333333333333], [121.0, 10.0], [124.0, 35.25000000000001], [125.0, 23.200000000000003], [126.0, 7.666666666666667], [127.0, 7.0], [132.0, 7.875000000000002], [135.0, 7.0], [134.0, 9.0], [133.0, 6.7142857142857135], [131.0, 8.0], [130.0, 18.5], [129.0, 7.454545454545454], [138.0, 7.6], [140.0, 7.375000000000001], [143.0, 7.875], [142.0, 7.833333333333333], [141.0, 8.833333333333334], [136.0, 7.8999999999999995], [151.0, 8.0], [150.0, 12.875], [149.0, 17.25], [148.0, 7.4], [147.0, 9.0], [146.0, 8.75], [145.0, 8.333333333333332], [144.0, 9.0], [157.0, 7.0], [156.0, 7.0], [155.0, 7.0], [154.0, 8.142857142857142], [153.0, 9.555555555555555], [152.0, 8.25], [160.0, 88.0], [167.0, 8.98076923076923], [166.0, 16.424999999999997], [165.0, 13.962962962962962], [164.0, 8.666666666666666], [163.0, 9.933333333333334], [162.0, 7.833333333333333], [161.0, 143.10714285714283], [175.0, 7.5], [174.0, 8.542857142857141], [173.0, 8.0], [172.0, 7.836734693877552], [171.0, 7.0], [170.0, 12.071428571428571], [169.0, 8.043478260869565], [168.0, 10.0], [176.0, 31.666666666666664], [177.0, 8.0], [179.0, 36.66666666666666], [182.0, 29.285714285714285], [183.0, 20.142857142857142], [181.0, 29.5], [180.0, 12.666666666666666], [178.0, 13.296296296296294], [189.0, 30.333333333333336], [191.0, 834.5], [190.0, 1722.0], [186.0, 12.0], [185.0, 6.0], [194.0, 25.19047619047619], [197.0, 30.26666666666667], [199.0, 7.75], [198.0, 14.205882352941176], [196.0, 10.999999999999998], [195.0, 12.5], [193.0, 543.9375], [200.0, 37.71428571428571], [201.0, 9.244444444444445], [203.0, 11.266666666666666], [204.0, 9.714285714285714], [207.0, 8.117647058823529], [206.0, 7.826086956521741], [205.0, 7.5], [202.0, 7.166666666666667], [209.0, 14.444444444444443], [210.0, 32.0], [211.0, 8.757009345794394], [212.0, 8.999999999999998], [215.0, 13.303030303030305], [214.0, 10.5], [213.0, 8.0], [208.0, 7.727272727272727], [216.0, 7.593749999999998], [223.0, 8.363636363636365], [222.0, 6.428571428571428], [221.0, 9.690909090909093], [220.0, 15.000000000000002], [219.0, 7.0], [218.0, 8.200000000000003], [224.0, 10.781249999999998], [229.0, 14.85714285714286], [231.0, 35.85046728971962], [230.0, 28.4], [228.0, 8.285714285714285], [227.0, 7.666666666666667], [225.0, 10.833333333333337], [232.0, 63.57142857142857], [233.0, 56.83333333333333], [234.0, 77.2], [235.0, 15.210526315789476], [236.0, 38.64864864864865], [237.0, 22.53846153846154], [238.0, 23.71428571428571], [239.0, 8.0], [240.0, 20.071428571428577], [246.0, 18.999999999999993], [247.0, 7.277777777777778], [245.0, 36.125], [244.0, 117.28571428571429], [243.0, 15.823529411764707], [242.0, 13.066666666666666], [241.0, 85.0], [248.0, 43.79411764705881], [251.0, 7.5], [254.0, 7.533333333333334], [255.0, 9.535714285714286], [253.0, 7.875], [252.0, 7.666666666666667], [250.0, 7.533333333333333], [249.0, 10.314285714285715], [269.0, 18.114285714285714], [257.0, 15.090909090909097], [256.0, 11.296296296296298], [258.0, 43.0], [262.0, 51.84210526315789], [261.0, 10.5], [260.0, 46.0], [263.0, 6.0], [265.0, 124.29999999999998], [264.0, 676.0], [267.0, 54.269841269841265], [270.0, 10.483870967741934], [271.0, 7.666666666666666], [268.0, 14.444444444444443], [285.0, 41.117647058823536], [278.0, 34.87096774193548], [276.0, 16.363636363636363], [277.0, 7.61111111111111], [279.0, 23.0], [272.0, 7.538461538461538], [274.0, 7.3], [273.0, 7.555555555555555], [284.0, 24.222222222222218], [275.0, 8.318965517241383], [280.0, 46.800000000000004], [281.0, 48.807692307692314], [282.0, 56.87096774193551], [283.0, 21.307692307692303], [287.0, 8.0], [286.0, 8.0], [301.0, 9.5], [292.0, 44.03571428571427], [293.0, 12.125000000000002], [294.0, 22.52173913043478], [297.0, 54.729729729729726], [298.0, 34.5], [299.0, 26.34615384615384], [300.0, 521.0], [295.0, 19.222222222222218], [288.0, 19.750000000000004], [290.0, 27.47619047619047], [289.0, 8.0], [291.0, 8.333333333333332], [303.0, 28.799999999999994], [302.0, 264.3125], [316.0, 135.0], [304.0, 29.0], [305.0, 13.714285714285715], [307.0, 7.285714285714286], [306.0, 14.400000000000002], [309.0, 15.470588235294118], [308.0, 7.76851851851852], [311.0, 18.521276595744684], [310.0, 7.785714285714286], [312.0, 45.81250000000001], [313.0, 18.52127659574468], [314.0, 12.804347826086955], [315.0, 11.621621621621623], [317.0, 60.428571428571416], [318.0, 12.25], [319.0, 58.85714285714286], [334.0, 80.41666666666667], [320.0, 9.366666666666664], [327.0, 11.36], [326.0, 7.903225806451611], [325.0, 7.476190476190475], [324.0, 7.783783783783784], [321.0, 8.986842105263156], [323.0, 7.8804347826086945], [322.0, 10.5531914893617], [328.0, 16.000000000000004], [331.0, 179.0], [335.0, 54.33333333333335], [332.0, 26.14285714285714], [330.0, 17.911392405063292], [329.0, 15.803030303030296], [348.0, 12.220779220779217], [336.0, 142.0], [337.0, 99.13333333333334], [339.0, 41.72222222222223], [338.0, 15.0], [342.0, 194.77777777777777], [341.0, 12.100000000000001], [340.0, 17.333333333333332], [343.0, 13.666666666666668], [349.0, 19.051282051282048], [350.0, 43.55555555555556], [351.0, 12.26373626373626], [345.0, 8.539215686274511], [344.0, 7.999999999999999], [347.0, 7.787234042553191], [346.0, 7.833333333333333], [364.0, 38.23076923076923], [352.0, 37.08602150537633], [354.0, 41.0], [353.0, 14.161290322580646], [355.0, 7.666666666666667], [356.0, 13.469879518072291], [357.0, 20.42045454545454], [359.0, 14.358974358974363], [358.0, 9.627906976744184], [366.0, 39.13725490196077], [367.0, 20.98148148148148], [361.0, 8.142857142857146], [360.0, 7.666666666666667], [363.0, 13.5], [362.0, 14.901886792452833], [365.0, 11.0], [370.0, 20.757575757575754], [369.0, 11.745098039215685], [371.0, 139.66666666666669], [380.0, 36.85714285714286], [373.0, 100.22222222222223], [372.0, 7.329411764705884], [374.0, 32.64705882352941], [375.0, 299.3333333333333], [368.0, 7.57142857142857], [376.0, 116.0], [377.0, 7.333333333333333], [379.0, 1528.0], [378.0, 11.339622641509434], [383.0, 7.0], [382.0, 18.074074074074076], [381.0, 7.333333333333334], [398.0, 9.310126582278484], [384.0, 42.749999999999986], [388.0, 20.84374999999999], [390.0, 17.07142857142857], [389.0, 7.888888888888889], [392.0, 44.29032258064515], [395.0, 77.75000000000004], [397.0, 7.700000000000001], [399.0, 111.94444444444446], [396.0, 7.277777777777777], [387.0, 15.120000000000001], [386.0, 37.36363636363637], [385.0, 10.736842105263156], [394.0, 7.68421052631579], [393.0, 12.521739130434783], [414.0, 64.16666666666667], [400.0, 63.937499999999986], [403.0, 243.5], [402.0, 25.0], [401.0, 37.833333333333336], [407.0, 617.0], [406.0, 8.5], [405.0, 15.0], [404.0, 37.66666666666667], [408.0, 255.49999999999997], [409.0, 38.06896551724138], [410.0, 49.599999999999994], [411.0, 7.0], [415.0, 14.444444444444445], [413.0, 61.4], [412.0, 238.62500000000003], [428.0, 33.66037735849056], [420.0, 71.23684210526316], [421.0, 19.333333333333332], [422.0, 109.86666666666666], [423.0, 140.5], [419.0, 9.0], [418.0, 18.0], [417.0, 16.55769230769231], [416.0, 34.714285714285715], [424.0, 162.03333333333333], [425.0, 29.43939393939396], [427.0, 23.8], [426.0, 8.959349593495931], [431.0, 13.326086956521735], [430.0, 10.666666666666668], [429.0, 7.916666666666668], [433.0, 78.73333333333333], [432.0, 17.2], [434.0, 14.88888888888889], [444.0, 8.2], [435.0, 7.0], [437.0, 46.44444444444444], [436.0, 45.06818181818182], [438.0, 152.5], [439.0, 24.724137931034477], [440.0, 102.20000000000006], [441.0, 12.559139784946234], [443.0, 7.625], [442.0, 13.369565217391306], [447.0, 9.149253731343283], [446.0, 11.605263157894736], [445.0, 8.68548387096774], [460.0, 91.15151515151516], [450.0, 12.25], [451.0, 11.834951456310687], [453.0, 74.56250000000001], [452.0, 17.647058823529413], [454.0, 48.761904761904766], [455.0, 20.439999999999994], [449.0, 7.9], [448.0, 7.710526315789474], [457.0, 24.312500000000004], [459.0, 29.75], [458.0, 22.193548387096772], [461.0, 24.400000000000002], [462.0, 18.285714285714285], [463.0, 38.43396226415094], [456.0, 50.75000000000001], [476.0, 20.639999999999997], [469.0, 47.17647058823529], [468.0, 8.777777777777779], [470.0, 181.62499999999997], [471.0, 14.644230769230772], [465.0, 14.2], [464.0, 27.187500000000004], [467.0, 7.928571428571429], [466.0, 22.080645161290324], [474.0, 41.625], [475.0, 36.06976744186046], [477.0, 104.39999999999999], [479.0, 23.87096774193548], [473.0, 10.155172413793101], [472.0, 11.23076923076923], [478.0, 67.18181818181819], [492.0, 70.06250000000001], [487.0, 43.12500000000001], [485.0, 11.285000000000002], [484.0, 7.96551724137931], [488.0, 98.86666666666669], [489.0, 93.26086956521736], [483.0, 11.06060606060606], [482.0, 12.403508771929825], [481.0, 17.01754385964912], [480.0, 14.806451612903222], [494.0, 50.6], [491.0, 12.592592592592593], [490.0, 11.224489795918366], [486.0, 10.382716049382717], [508.0, 38.07692307692308], [497.0, 38.06250000000001], [496.0, 35.55769230769231], [499.0, 127.0], [498.0, 22.882352941176475], [501.0, 184.0], [500.0, 15.068181818181817], [502.0, 53.625], [503.0, 24.69230769230769], [509.0, 53.31111111111112], [511.0, 10.769230769230766], [505.0, 7.6], [504.0, 14.384615384615385], [507.0, 33.4], [506.0, 27.56], [510.0, 12.117948717948714], [519.0, 16.25000000000001], [512.0, 82.75], [514.0, 361.125], [513.0, 8.056962025316459], [515.0, 85.31578947368425], [518.0, 10.363636363636363], [517.0, 11.910714285714285], [516.0, 31.555555555555546], [527.0, 72.30769230769229], [526.0, 6.827586206896552], [525.0, 7.666666666666667], [524.0, 19.319277108433734], [523.0, 15.067796610169493], [522.0, 14.6875], [521.0, 8.0], [520.0, 15.111111111111114], [528.0, 104.66666666666667], [541.0, 90.2], [540.0, 27.25], [539.0, 44.15217391304347], [542.0, 11.921052631578945], [543.0, 18.424999999999994], [537.0, 21.74074074074074], [536.0, 12.521739130434785], [538.0, 112.0], [529.0, 13.619047619047619], [531.0, 12.173913043478258], [530.0, 8.809523809523808], [532.0, 109.22826086956519], [533.0, 78.12280701754386], [534.0, 87.73076923076923], [535.0, 85.66666666666667], [568.0, 446.66666666666663], [557.0, 43.02877697841728], [547.0, 33.182926829268276], [546.0, 64.67924528301887], [545.0, 27.67796610169492], [544.0, 48.0], [548.0, 18.857142857142858], [549.0, 30.68421052631579], [550.0, 61.64705882352943], [551.0, 8.742424242424242], [569.0, 48.05000000000001], [570.0, 15.151315789473681], [571.0, 70.66666666666667], [572.0, 46.521126760563384], [573.0, 10.388888888888891], [575.0, 127.78571428571429], [562.0, 10.142857142857144], [561.0, 18.74285714285714], [560.0, 28.62962962962963], [574.0, 23.5], [552.0, 14.6088888888889], [554.0, 124.76923076923076], [553.0, 8.493150684931509], [555.0, 227.66666666666666], [556.0, 204.2222222222222], [558.0, 44.94117647058823], [559.0, 7.666666666666666], [563.0, 7.9705882352941195], [565.0, 14.602739726027396], [564.0, 71.5813953488372], [566.0, 157.0], [567.0, 119.80000000000001], [579.0, 71.6896551724138], [590.0, 50.357142857142854], [576.0, 248.0], [577.0, 40.09090909090907], [578.0, 106.25000000000001], [592.0, 35.583333333333336], [607.0, 120.65624999999999], [605.0, 20.95000000000001], [606.0, 19.687499999999996], [603.0, 94.64285714285715], [604.0, 10.552380952380956], [601.0, 16.915094339622648], [600.0, 65.77966101694912], [582.0, 8.6], [581.0, 159.09090909090904], [580.0, 55.5], [602.0, 7.368852459016392], [593.0, 217.2], [595.0, 84.62068965517238], [594.0, 31.538461538461544], [596.0, 18.91525423728814], [597.0, 85.81818181818181], [599.0, 6.333333333333333], [598.0, 6.0], [584.0, 7.0], [585.0, 410.53333333333336], [586.0, 47.23255813953489], [588.0, 265.0], [587.0, 33.510638297872326], [589.0, 68.42857142857143], [591.0, 149.1111111111111], [615.0, 40.30534351145038], [610.0, 266.0], [608.0, 173.66666666666669], [609.0, 11.899999999999999], [622.0, 42.0], [621.0, 26.354838709677416], [623.0, 8.0], [611.0, 53.5], [612.0, 12.728744939271257], [613.0, 80.21176470588235], [614.0, 7.830357142857141], [624.0, 31.13333333333333], [625.0, 9.0], [627.0, 21.82608695652174], [626.0, 36.1304347826087], [639.0, 18.25], [638.0, 12.305970149253731], [637.0, 63.96875000000001], [635.0, 194.75], [636.0, 559.6], [632.0, 95.63636363636364], [633.0, 9.324503311258281], [634.0, 171.77272727272728], [628.0, 36.99999999999999], [631.0, 13.000000000000004], [630.0, 9.405594405594407], [629.0, 18.81896551724138], [616.0, 22.599999999999994], [617.0, 37.823008849557525], [619.0, 11.666666666666666], [618.0, 6.0], [620.0, 21.068749999999994], [664.0, 25.21875], [653.0, 180.7], [641.0, 79.33333333333333], [640.0, 21.5], [642.0, 18.81818181818182], [644.0, 7.873786407766988], [643.0, 15.872340425531915], [645.0, 81.8], [646.0, 7.0], [647.0, 10.138888888888884], [665.0, 9.0], [667.0, 8.318537859007833], [666.0, 32.9622641509434], [668.0, 27.03333333333333], [670.0, 60.74999999999999], [669.0, 10.69047619047619], [671.0, 57.33333333333333], [657.0, 190.375], [656.0, 29.52777777777777], [649.0, 27.920353982300885], [648.0, 9.5], [650.0, 140.08333333333334], [651.0, 71.14285714285715], [652.0, 98.88888888888889], [654.0, 141.97826086956522], [655.0, 15.777777777777775], [658.0, 138.53124999999997], [659.0, 208.02500000000003], [660.0, 104.0], [663.0, 70.89473684210525], [662.0, 27.937499999999996], [661.0, 24.907692307692315], [677.0, 214.0], [675.0, 36.9375], [673.0, 108.20689655172416], [674.0, 12.763736263736265], [687.0, 7.5], [672.0, 13.384615384615383], [676.0, 8.746031746031747], [679.0, 10.444759206798858], [678.0, 9.195488721804516], [696.0, 127.44444444444444], [697.0, 37.00000000000001], [698.0, 150.85714285714286], [699.0, 135.91666666666666], [702.0, 98.89473684210527], [701.0, 65.89473684210525], [700.0, 27.33333333333333], [703.0, 36.917808219178106], [689.0, 9.0], [688.0, 661.0], [691.0, 23.333333333333332], [690.0, 242.25], [685.0, 55.43373493975904], [684.0, 168.2222222222222], [683.0, 7.333333333333333], [682.0, 22.6], [681.0, 31.853658536585364], [680.0, 9.685714285714287], [686.0, 281.17499999999995], [692.0, 54.14285714285714], [695.0, 43.888888888888886], [694.0, 15.857142857142856], [693.0, 22.78125], [708.0, 60.66666666666666], [704.0, 13.005780346820812], [705.0, 7.428571428571429], [706.0, 16.96078431372548], [707.0, 25.673076923076923], [711.0, 14.926829268292686], [710.0, 9.68], [709.0, 11.882352941176471], [728.0, 232.91176470588235], [729.0, 25.125], [730.0, 22.41071428571428], [731.0, 35.83908045977011], [732.0, 10.572687224669608], [733.0, 7.333333333333331], [734.0, 60.35294117647059], [735.0, 14.523076923076921], [716.0, 10.637209302325587], [715.0, 13.684210526315791], [714.0, 10.250000000000002], [713.0, 10.642857142857146], [712.0, 13.57777777777778], [718.0, 9.607142857142856], [717.0, 8.032467532467532], [719.0, 8.806818181818182], [720.0, 22.8448275862069], [722.0, 41.88311688311686], [721.0, 9.82142857142857], [723.0, 46.388349514563124], [724.0, 134.0], [725.0, 30.471014492753625], [727.0, 24.285714285714285], [726.0, 24.61904761904762], [760.0, 13.105882352941176], [750.0, 88.55813953488374], [741.0, 23.823529411764714], [743.0, 9.058823529411763], [742.0, 10.82608695652174], [751.0, 118.8], [736.0, 18.357142857142858], [738.0, 10.524590163934421], [737.0, 10.953125000000004], [740.0, 14.462121212121216], [739.0, 8.0], [761.0, 7.687500000000001], [763.0, 7.6909090909090905], [762.0, 7.521739130434782], [744.0, 21.35526315789474], [745.0, 10.835365853658532], [748.0, 21.232067510548518], [747.0, 8.83152173913043], [746.0, 8.70769230769231], [749.0, 31.18604651162791], [752.0, 180.71428571428572], [754.0, 75.05882352941178], [753.0, 450.14285714285717], [755.0, 28.42857142857143], [757.0, 29.150943396226413], [756.0, 36.75], [759.0, 33.54166666666666], [758.0, 113.23376623376626], [764.0, 252.99999999999997], [767.0, 78.25], [766.0, 9.542857142857144], [765.0, 25.166666666666668], [775.0, 67.44444444444446], [771.0, 80.21428571428571], [768.0, 15.040322580645167], [769.0, 21.88372093023256], [770.0, 14.802469135802477], [772.0, 30.69090909090905], [773.0, 46.416666666666664], [774.0, 73.0], [785.0, 57.54411764705883], [799.0, 28.056603773584914], [784.0, 26.339506172839513], [796.0, 63.333333333333336], [795.0, 11.849593495934961], [794.0, 38.142857142857146], [797.0, 11.045454545454547], [798.0, 21.914285714285715], [792.0, 30.491666666666674], [793.0, 538.5], [786.0, 31.259541984732834], [787.0, 11.409090909090908], [789.0, 7.6], [788.0, 9.229508196721312], [791.0, 359.0], [790.0, 7.369565217391304], [776.0, 19.441860465116264], [778.0, 7.0], [777.0, 17.1625], [780.0, 10.261538461538462], [779.0, 11.083333333333334], [782.0, 19.73118279569892], [781.0, 27.192771084337355], [783.0, 20.333333333333332], [829.0, 11.78879706152434], [812.0, 110.6], [800.0, 21.310810810810807], [808.0, 43.5], [809.0, 24.57142857142857], [810.0, 42.69811320754717], [811.0, 240.0], [813.0, 200.83333333333334], [815.0, 48.92307692307694], [814.0, 9.75], [816.0, 168.78571428571428], [825.0, 9.574358974358974], [824.0, 23.214285714285715], [807.0, 26.72549019607844], [806.0, 22.133333333333333], [805.0, 17.611111111111114], [804.0, 24.633333333333333], [803.0, 12.829787234042552], [802.0, 29.5], [801.0, 10.347457627118644], [826.0, 8.743589743589745], [828.0, 8.5], [827.0, 16.520000000000003], [830.0, 24.59740259740261], [831.0, 168.21428571428575], [817.0, 81.25], [818.0, 52.54054054054053], [819.0, 40.6794871794872], [820.0, 132.3846153846154], [821.0, 26.48039215686274], [822.0, 289.99999999999994], [823.0, 7.379310344827586], [839.0, 236.0], [836.0, 75.28947368421052], [833.0, 76.41095890410958], [832.0, 30.784810126582283], [835.0, 24.909090909090907], [834.0, 26.436619718309853], [847.0, 11.23770491803279], [846.0, 97.31250000000001], [845.0, 18.933333333333337], [844.0, 12.316666666666666], [843.0, 8.522727272727272], [842.0, 13.763157894736842], [837.0, 20.4551724137931], [838.0, 13.754901960784315], [840.0, 28.44000000000001], [841.0, 26.52777777777778], [850.0, 27.75], [849.0, 7.513513513513514], [848.0, 8.785714285714286], [852.0, 7.481481481481482], [851.0, 8.333333333333332], [855.0, 8.187500000000002], [854.0, 8.529411764705882], [862.0, 433.1428571428571], [863.0, 162.8], [857.0, 99.94285714285714], [856.0, 8.863636363636363], [860.0, 9.076923076923078], [861.0, 67.375], [889.0, 222.0], [868.0, 235.91666666666669], [867.0, 212.8421052631579], [879.0, 26.0], [865.0, 16.571428571428573], [864.0, 12.5], [866.0, 10.0], [871.0, 204.24242424242428], [870.0, 16.61904761904762], [869.0, 16.969696969696976], [888.0, 37.05], [873.0, 93.15384615384616], [872.0, 10.4], [874.0, 16.34285714285714], [877.0, 21.764705882352942], [876.0, 12.692307692307693], [878.0, 279.0], [880.0, 83.625], [884.0, 89.56249999999999], [883.0, 32.666666666666664], [882.0, 47.0], [881.0, 72.28571428571429], [886.0, 68.27777777777779], [885.0, 34.66666666666667], [893.0, 237.89473684210523], [892.0, 38.85000000000001], [891.0, 25.8], [890.0, 11.5], [894.0, 144.7142857142857], [895.0, 206.8], [924.0, 10.17213114754098], [898.0, 161.33333333333331], [901.0, 449.0], [900.0, 47.43750000000001], [899.0, 138.0], [903.0, 29.999999999999996], [902.0, 35.833333333333336], [921.0, 28.22727272727273], [920.0, 29.400000000000002], [905.0, 56.73529411764704], [904.0, 22.0], [907.0, 30.2], [906.0, 30.900000000000002], [909.0, 19.560000000000002], [908.0, 8.0], [911.0, 54.83333333333332], [910.0, 14.75], [927.0, 14.11009174311926], [913.0, 75.0], [912.0, 23.125], [915.0, 92.0], [914.0, 28.5], [917.0, 36.0], [916.0, 40.875], [919.0, 173.0], [918.0, 778.6], [926.0, 14.30769230769231], [925.0, 14.386554621848735], [923.0, 12.197368421052632], [922.0, 14.281250000000005], [956.0, 23.876106194690262], [951.0, 228.1863354037269], [950.0, 11.055555555555557], [949.0, 16.5], [948.0, 13.328282828282834], [947.0, 7.562015503875966], [946.0, 14.633333333333333], [945.0, 20.732394366197177], [944.0, 52.38271604938271], [952.0, 13.063139931740617], [935.0, 9.728915662650602], [934.0, 8.882352941176467], [933.0, 8.931999999999999], [932.0, 7.456521739130436], [931.0, 8.457446808510635], [930.0, 24.700787401574814], [929.0, 13.220338983050846], [928.0, 20.73684210526315], [943.0, 87.87640449438202], [942.0, 35.117647058823536], [941.0, 31.166666666666668], [940.0, 40.56716417910447], [939.0, 27.816326530612248], [938.0, 17.39393939393939], [937.0, 21.837837837837835], [936.0, 12.457142857142857], [953.0, 21.549738219895282], [954.0, 32.62500000000001], [958.0, 97.10714285714283], [959.0, 147.28571428571428], [957.0, 10.0], [955.0, 12.003333333333343], [984.0, 40.65789473684208], [964.0, 80.66], [962.0, 41.88000000000001], [960.0, 119.59374999999999], [961.0, 14.617647058823529], [975.0, 9.223776223776225], [963.0, 23.05797101449275], [965.0, 183.66666666666663], [966.0, 28.57894736842105], [967.0, 140.7], [985.0, 21.066666666666666], [987.0, 9.314814814814815], [986.0, 8.818181818181817], [989.0, 8.878048780487804], [988.0, 8.448275862068964], [991.0, 8.92391304347826], [977.0, 10.238095238095239], [976.0, 9.833333333333332], [990.0, 12.145454545454545], [978.0, 26.29859719438876], [980.0, 15.679611650485434], [979.0, 9.48760330578512], [981.0, 22.453703703703706], [983.0, 22.268292682926813], [982.0, 8.43478260869565], [970.0, 35.254901960784316], [969.0, 15.633333333333328], [968.0, 25.412499999999994], [971.0, 15.315789473684212], [973.0, 18.04878048780488], [972.0, 20.216216216216214], [974.0, 534.0], [997.0, 159.0], [993.0, 374.0], [992.0, 19.49180327868853], [1007.0, 16.49479166666667], [1006.0, 24.020689655172408], [1004.0, 173.9518987341773], [1005.0, 80.61538461538461], [994.0, 220.25], [995.0, 213.0399999999999], [996.0, 253.0], [998.0, 355.6111111111111], [1016.0, 28.637096774193548], [1017.0, 145.29411764705878], [1021.0, 112.8], [1020.0, 38.08196721311476], [1019.0, 44.415584415584426], [1018.0, 47.30065359477121], [1022.0, 36.96875], [1023.0, 9.188235294117646], [1008.0, 17.772833723653385], [1009.0, 15.054279749478066], [1011.0, 24.153846153846168], [1010.0, 14.642857142857142], [1012.0, 16.86868686868688], [1013.0, 16.81290322580646], [1014.0, 20.64615384615385], [1015.0, 59.85714285714286], [1002.0, 400.25], [1000.0, 177.0], [1003.0, 311.0], [1024.0, 50.07552307395552], [1.0, 802.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[933.7446463188696, 46.706599043566705]], "isOverall": false, "label": "Post_Request-Aggregated", "isController": false}, {"data": [[3.0, 8.0], [5.0, 486.6666666666667], [6.0, 77.0], [9.0, 8.5], [11.0, 59.0], [12.0, 10.0], [13.0, 65.2], [14.0, 8.75], [15.0, 9.0], [16.0, 18.0], [17.0, 33.0], [18.0, 22.6], [19.0, 24.714285714285715], [20.0, 9.0], [22.0, 22.599999999999998], [23.0, 21.666666666666664], [24.0, 17.0], [25.0, 10.0], [26.0, 9.0], [27.0, 69.0], [28.0, 12.0], [29.0, 11.0], [30.0, 8.5], [31.0, 30.666666666666664], [33.0, 27.63636363636363], [32.0, 8.846153846153847], [35.0, 193.16666666666669], [34.0, 9.5], [37.0, 1079.0], [36.0, 899.0], [38.0, 9.0], [41.0, 142.75], [40.0, 8.666666666666666], [42.0, 35.5], [43.0, 98.3], [44.0, 70.23529411764707], [45.0, 20.666666666666668], [46.0, 50.86111111111111], [47.0, 16.5], [49.0, 40.53846153846154], [48.0, 18.999999999999996], [51.0, 28.91304347826087], [50.0, 56.25925925925926], [53.0, 15.700000000000001], [52.0, 11.85294117647059], [54.0, 13.058823529411761], [55.0, 17.91666666666666], [57.0, 10.0], [56.0, 21.545454545454543], [59.0, 19.11111111111111], [58.0, 17.02439024390244], [61.0, 32.99999999999999], [60.0, 14.499999999999998], [63.0, 39.04761904761904], [62.0, 8.100000000000001], [64.0, 17.626339027215145], [65.0, 10.2], [66.0, 10.4], [67.0, 8.25], [68.0, 8.428571428571429], [69.0, 26.05555555555555], [70.0, 20.6], [71.0, 8.277777777777777], [72.0, 33.78947368421053], [73.0, 11.892857142857144], [75.0, 40.5], [74.0, 18.66666666666667], [76.0, 11.619047619047619], [77.0, 84.75], [78.0, 9.923076923076923], [81.0, 17.470588235294116], [83.0, 43.5], [82.0, 9.715789473684213], [80.0, 7.833333333333333], [84.0, 28.551724137931032], [86.0, 40.65384615384615], [87.0, 25.416666666666664], [85.0, 9.677685950413224], [90.0, 65.13333333333333], [91.0, 13.3], [89.0, 46.33333333333333], [88.0, 27.28571428571429], [93.0, 13.5], [94.0, 9.333333333333334], [95.0, 21.0], [92.0, 145.0], [98.0, 30.0], [99.0, 44.49999999999999], [96.0, 9.0], [100.0, 40.166666666666664], [101.0, 68.33333333333333], [102.0, 21.583333333333332], [103.0, 8.2], [104.0, 18.75], [106.0, 11.0], [107.0, 9.0], [105.0, 7.333333333333333], [108.0, 17.5], [109.0, 10.142857142857144], [111.0, 8.0], [114.0, 12.25], [113.0, 7.0], [112.0, 8.0], [116.0, 31.857142857142858], [117.0, 51.0], [118.0, 54.4], [119.0, 92.0], [120.0, 58.5], [122.0, 57.333333333333336], [123.0, 142.125], [121.0, 7.0], [124.0, 26.333333333333336], [125.0, 23.8], [126.0, 7.5], [127.0, 8.25], [132.0, 10.7], [135.0, 7.5], [134.0, 10.666666666666666], [133.0, 8.25], [131.0, 7.0], [130.0, 30.75], [129.0, 8.842105263157896], [143.0, 8.222222222222221], [142.0, 9.25], [141.0, 7.714285714285714], [140.0, 7.571428571428571], [139.0, 7.75], [138.0, 7.666666666666667], [136.0, 7.0], [151.0, 9.0], [150.0, 8.375], [149.0, 20.0], [148.0, 8.25], [147.0, 7.642857142857142], [146.0, 8.5], [145.0, 8.0], [144.0, 6.0], [157.0, 954.5], [156.0, 6.0], [155.0, 14.866666666666667], [154.0, 8.538461538461537], [153.0, 7.5], [152.0, 15.857142857142858], [160.0, 54.75], [161.0, 189.32258064516128], [166.0, 10.552631578947368], [167.0, 8.145454545454546], [165.0, 7.920000000000002], [164.0, 7.75], [163.0, 7.800000000000001], [162.0, 27.0], [175.0, 8.25], [174.0, 7.657894736842107], [173.0, 8.666666666666666], [172.0, 8.909090909090912], [171.0, 7.75], [170.0, 10.636363636363637], [169.0, 8.105263157894736], [168.0, 9.0], [183.0, 10.166666666666668], [182.0, 11.0], [181.0, 7.857142857142857], [180.0, 9.0], [179.0, 10.944444444444445], [178.0, 7.863636363636365], [177.0, 8.0], [185.0, 20.0], [187.0, 91.0], [191.0, 8.0], [189.0, 887.5], [186.0, 14.199999999999998], [184.0, 8.5], [194.0, 36.43478260869564], [195.0, 24.166666666666664], [199.0, 9.0], [198.0, 12.333333333333334], [197.0, 22.15], [196.0, 8.624999999999998], [193.0, 14.0], [200.0, 19.25], [201.0, 13.217391304347828], [203.0, 18.416666666666668], [204.0, 9.631578947368421], [207.0, 9.30188679245283], [206.0, 7.416666666666666], [205.0, 7.6000000000000005], [202.0, 8.0], [215.0, 7.84], [214.0, 8.416666666666668], [213.0, 7.5], [212.0, 10.878048780487802], [211.0, 12.65454545454545], [210.0, 7.75], [209.0, 8.2], [208.0, 13.285714285714286], [216.0, 49.083333333333336], [218.0, 45.7027027027027], [220.0, 8.968749999999998], [221.0, 8.769230769230768], [222.0, 7.8], [223.0, 8.547169811320758], [219.0, 8.416666666666668], [217.0, 9.0], [228.0, 9.0], [229.0, 12.523809523809522], [230.0, 8.6], [231.0, 63.558823529411754], [227.0, 8.0], [225.0, 11.4375], [224.0, 8.170212765957446], [232.0, 30.142857142857146], [233.0, 123.8], [234.0, 134.0], [235.0, 55.7142857142857], [236.0, 36.081632653061206], [237.0, 50.47619047619047], [238.0, 82.0], [239.0, 9.6], [240.0, 18.428571428571423], [241.0, 66.0], [245.0, 29.55555555555555], [246.0, 32.046875], [247.0, 34.28571428571429], [244.0, 24.555555555555557], [243.0, 20.25], [242.0, 8.769230769230768], [248.0, 121.51111111111112], [249.0, 15.500000000000004], [251.0, 18.45833333333334], [254.0, 8.470588235294118], [255.0, 9.464285714285715], [253.0, 8.125], [252.0, 8.19047619047619], [250.0, 8.000000000000007], [269.0, 13.66666666666667], [257.0, 34.95238095238095], [256.0, 8.473684210526317], [263.0, 7.0], [258.0, 63.44444444444444], [268.0, 8.64864864864865], [260.0, 83.5], [261.0, 7.666666666666667], [262.0, 121.77777777777774], [265.0, 182.9090909090909], [267.0, 30.9], [266.0, 1274.5], [270.0, 9.75], [271.0, 7.970588235294118], [284.0, 26.58333333333334], [276.0, 14.95238095238095], [277.0, 7.8], [278.0, 75.75], [279.0, 15.515151515151517], [273.0, 6.8], [272.0, 9.176470588235295], [275.0, 8.073529411764707], [274.0, 8.0], [280.0, 76.77777777777777], [281.0, 14.208333333333334], [282.0, 74.6888888888889], [283.0, 14.46153846153846], [285.0, 29.818181818181813], [287.0, 33.333333333333336], [286.0, 7.5], [300.0, 305.4], [289.0, 7.0], [290.0, 20.620689655172413], [291.0, 14.555555555555555], [292.0, 66.29166666666667], [293.0, 16.76470588235294], [295.0, 20.625], [288.0, 18.615384615384617], [294.0, 7.909090909090909], [297.0, 80.1875], [298.0, 30.249999999999996], [299.0, 26.533333333333335], [301.0, 9.5], [303.0, 11.625000000000002], [296.0, 8.5], [302.0, 10.0], [316.0, 74.0], [304.0, 7.0], [305.0, 13.090909090909092], [307.0, 6.5], [306.0, 11.000000000000002], [309.0, 12.931818181818185], [308.0, 8.327272727272726], [310.0, 15.8], [311.0, 9.946666666666662], [313.0, 21.747368421052634], [314.0, 13.627450980392158], [315.0, 10.341463414634147], [317.0, 74.84615384615384], [318.0, 40.16666666666667], [319.0, 16.22222222222222], [312.0, 15.26315789473684], [332.0, 30.0], [321.0, 8.303571428571427], [320.0, 14.835616438356162], [323.0, 9.238636363636363], [322.0, 8.134615384615387], [325.0, 8.764705882352942], [324.0, 7.233333333333333], [326.0, 9.837837837837839], [327.0, 8.08], [328.0, 23.281249999999993], [330.0, 27.611940298507463], [329.0, 19.492753623188403], [331.0, 75.33333333333334], [333.0, 101.0], [334.0, 60.77272727272727], [335.0, 60.84615384615383], [339.0, 75.11111111111111], [336.0, 259.2857142857143], [337.0, 37.58333333333333], [338.0, 77.75], [342.0, 185.0625], [341.0, 7.0], [340.0, 7.0], [343.0, 36.333333333333336], [346.0, 11.227272727272728], [345.0, 9.179245283018865], [344.0, 63.42857142857143], [347.0, 8.432432432432437], [348.0, 21.661764705882344], [349.0, 15.850574712643676], [350.0, 31.47619047619048], [351.0, 10.159763313609472], [364.0, 40.351351351351354], [352.0, 64.28301886792451], [354.0, 57.37499999999999], [353.0, 16.25806451612903], [355.0, 8.0], [356.0, 15.923076923076925], [357.0, 9.462264150943396], [359.0, 12.187500000000002], [358.0, 8.0], [367.0, 30.51162790697674], [361.0, 8.236111111111116], [360.0, 7.615384615384615], [363.0, 9.0], [362.0, 17.76208178438662], [366.0, 30.43859649122808], [365.0, 7.0], [370.0, 29.30303030303031], [369.0, 14.713043478260872], [371.0, 48.92307692307692], [380.0, 85.09523809523809], [373.0, 61.50000000000001], [372.0, 8.014492753623188], [374.0, 54.85454545454545], [375.0, 92.5], [368.0, 11.176470588235293], [379.0, 26.25], [378.0, 11.999999999999996], [377.0, 293.0], [383.0, 26.0], [382.0, 14.368421052631579], [381.0, 13.263157894736842], [387.0, 17.423076923076923], [384.0, 49.38095238095238], [385.0, 12.134328358208954], [386.0, 9.899999999999999], [388.0, 16.5925925925926], [389.0, 7.625], [390.0, 16.266666666666666], [392.0, 57.75342465753422], [398.0, 9.271604938271608], [399.0, 72.51724137931035], [393.0, 20.731182795698928], [395.0, 91.71666666666665], [394.0, 7.384615384615384], [396.0, 7.3999999999999995], [397.0, 8.125], [414.0, 538.2857142857142], [402.0, 45.588235294117645], [400.0, 50.0], [401.0, 15.57971014492754], [403.0, 252.0], [413.0, 44.75], [412.0, 33.33333333333333], [406.0, 128.0], [405.0, 6.5], [404.0, 8.0], [407.0, 1150.3333333333333], [408.0, 142.27272727272728], [409.0, 76.54545454545453], [410.0, 108.85714285714286], [411.0, 29.333333333333336], [415.0, 163.41666666666663], [423.0, 20.285714285714285], [416.0, 110.14285714285715], [417.0, 26.41379310344828], [419.0, 8.0], [418.0, 14.428571428571429], [420.0, 40.09523809523811], [421.0, 15.562499999999996], [422.0, 131.99999999999997], [424.0, 106.19230769230771], [425.0, 41.90277777777777], [427.0, 9.80952380952381], [426.0, 10.453846153846149], [428.0, 18.31707317073171], [429.0, 9.93421052631579], [431.0, 12.104166666666666], [430.0, 9.058823529411766], [444.0, 61.27272727272728], [433.0, 54.088235294117645], [434.0, 30.333333333333332], [436.0, 58.820512820512825], [437.0, 136.36363636363637], [438.0, 283.5], [439.0, 27.791666666666668], [432.0, 8.0], [440.0, 107.40000000000003], [442.0, 32.9189189189189], [441.0, 12.404255319148934], [443.0, 8.7], [447.0, 10.05194805194805], [446.0, 7.7], [445.0, 9.913385826771655], [460.0, 54.77777777777778], [450.0, 12.680000000000005], [449.0, 24.4], [455.0, 15.25], [448.0, 7.947368421052633], [451.0, 20.04854368932039], [453.0, 107.35000000000004], [452.0, 10.787878787878785], [454.0, 56.69724770642204], [456.0, 63.6], [457.0, 232.29999999999998], [459.0, 85.10000000000001], [458.0, 23.363636363636363], [462.0, 10.105263157894738], [461.0, 13.733333333333334], [463.0, 23.386363636363637], [476.0, 32.9047619047619], [465.0, 80.5], [467.0, 8.517241379310343], [466.0, 21.079365079365076], [471.0, 7.656565656565659], [464.0, 54.62857142857143], [469.0, 24.244897959183668], [468.0, 8.033333333333333], [470.0, 265.3529411764706], [475.0, 63.51111111111112], [477.0, 39.375], [479.0, 93.75609756097562], [478.0, 12.155555555555551], [474.0, 576.2], [473.0, 10.940298507462689], [472.0, 7.733333333333333], [492.0, 122.44000000000001], [485.0, 16.818181818181827], [484.0, 8.0], [486.0, 13.707070707070706], [487.0, 50.02857142857142], [481.0, 13.46666666666667], [480.0, 12.095238095238095], [483.0, 16.88095238095238], [482.0, 9.929292929292933], [488.0, 77.3846153846154], [489.0, 108.95652173913044], [491.0, 33.647058823529406], [490.0, 16.170212765957448], [494.0, 32.083333333333336], [493.0, 7.0], [509.0, 32.755555555555546], [497.0, 24.25], [496.0, 58.238095238095234], [499.0, 11.0], [498.0, 39.00000000000001], [503.0, 25.459459459459463], [502.0, 23.0], [501.0, 7.0], [500.0, 15.32], [511.0, 23.96969696969697], [510.0, 10.269662921348317], [508.0, 17.5], [507.0, 48.666666666666664], [506.0, 26.400000000000002], [505.0, 10.5], [504.0, 24.166666666666668], [515.0, 58.567567567567565], [512.0, 171.42857142857144], [514.0, 205.25], [513.0, 8.79746835443038], [518.0, 14.596153846153845], [517.0, 35.666666666666664], [516.0, 22.23636363636364], [536.0, 13.11111111111111], [519.0, 17.821917808219187], [537.0, 13.3125], [538.0, 111.16666666666667], [540.0, 20.333333333333336], [539.0, 84.06976744186046], [541.0, 58.75], [543.0, 20.387096774193548], [542.0, 20.062500000000004], [520.0, 24.411764705882348], [522.0, 202.76470588235293], [527.0, 73.61111111111113], [526.0, 9.2962962962963], [525.0, 6.6], [524.0, 9.595238095238097], [523.0, 15.15254237288136], [528.0, 88.07999999999996], [529.0, 10.672727272727268], [530.0, 7.862745098039214], [531.0, 13.150537634408597], [532.0, 98.64383561643838], [533.0, 8.117647058823533], [534.0, 66.18421052631578], [535.0, 7.904761904761903], [569.0, 90.5], [556.0, 247.0], [547.0, 48.83333333333335], [546.0, 41.581395348837205], [545.0, 22.6734693877551], [548.0, 27.666666666666664], [549.0, 29.478723404255323], [550.0, 71.6], [551.0, 7.742857142857143], [570.0, 15.691823899371071], [571.0, 13.333333333333334], [572.0, 13.848275862068954], [573.0, 9.96], [574.0, 16.0], [575.0, 223.0], [561.0, 17.368421052631575], [560.0, 26.361904761904754], [552.0, 11.269406392694066], [553.0, 11.766666666666667], [554.0, 278.0], [555.0, 97.83333333333333], [558.0, 120.0], [557.0, 21.68531468531468], [559.0, 8.875], [562.0, 41.576923076923066], [565.0, 15.229508196721316], [564.0, 7.702702702702702], [563.0, 21.223880597014926], [566.0, 78.43750000000001], [567.0, 137.77777777777777], [603.0, 44.95652173913044], [581.0, 37.333333333333336], [578.0, 60.375000000000014], [577.0, 38.116279069767444], [576.0, 376.6], [579.0, 67.46874999999999], [580.0, 27.125], [582.0, 50.25], [600.0, 204.27586206896552], [583.0, 8.0], [601.0, 13.514851485148514], [602.0, 10.183206106870234], [604.0, 12.857142857142856], [605.0, 12.107142857142854], [606.0, 22.999999999999996], [607.0, 140.16279069767444], [594.0, 19.999999999999996], [593.0, 29.6], [592.0, 29.727272727272727], [588.0, 297.0], [587.0, 22.086419753086417], [586.0, 28.894736842105264], [585.0, 282.3636363636364], [584.0, 510.6666666666667], [590.0, 35.58490566037736], [589.0, 49.25], [591.0, 99.87499999999999], [595.0, 98.84375000000003], [596.0, 11.625000000000002], [597.0, 7.523809523809524], [599.0, 6.0], [598.0, 8.333333333333334], [614.0, 37.30714285714288], [610.0, 44.5], [609.0, 15.839285714285717], [608.0, 244.50000000000003], [622.0, 24.0], [621.0, 23.892857142857142], [623.0, 97.25], [619.0, 14.730769230769225], [620.0, 16.41818181818181], [611.0, 27.179487179487182], [612.0, 15.399176954732509], [613.0, 33.63157894736843], [615.0, 23.18018018018019], [632.0, 71.0], [634.0, 89.11538461538461], [633.0, 11.211221122112216], [635.0, 171.75], [636.0, 514.75], [637.0, 76.80952380952381], [638.0, 12.304511278195493], [639.0, 21.857142857142858], [624.0, 27.234374999999993], [626.0, 27.43478260869565], [627.0, 29.421052631578956], [628.0, 41.333333333333336], [630.0, 9.929577464788737], [629.0, 15.081967213114755], [631.0, 17.58974358974359], [617.0, 25.41584158415843], [616.0, 7.2272727272727275], [618.0, 6.0], [664.0, 37.36], [652.0, 236.90909090909093], [641.0, 60.19444444444445], [643.0, 18.389830508474578], [642.0, 18.333333333333332], [645.0, 7.0], [644.0, 8.20879120879121], [647.0, 22.50387596899225], [646.0, 7.0], [668.0, 43.10714285714285], [667.0, 9.271794871794874], [666.0, 24.87037037037037], [669.0, 27.90000000000001], [670.0, 195.5], [671.0, 52.217391304347814], [656.0, 34.87500000000001], [649.0, 39.38582677165356], [648.0, 15.11111111111111], [650.0, 46.23529411764705], [651.0, 204.26666666666668], [653.0, 165.2608695652174], [654.0, 146.65], [655.0, 36.0], [640.0, 20.666666666666668], [657.0, 21.692307692307693], [658.0, 35.4], [659.0, 71.78787878787877], [660.0, 7.5], [661.0, 20.846153846153847], [663.0, 55.777777777777764], [662.0, 25.83870967741935], [699.0, 66.57142857142857], [675.0, 34.71428571428572], [673.0, 144.51612903225805], [672.0, 39.65217391304348], [674.0, 19.905759162303664], [676.0, 32.25925925925926], [677.0, 172.59999999999997], [685.0, 38.947368421052644], [684.0, 167.0], [683.0, 11.0], [682.0, 121.63636363636363], [681.0, 23.659090909090907], [680.0, 12.055555555555557], [686.0, 227.14516129032265], [690.0, 355.99999999999994], [703.0, 45.082802547770704], [688.0, 288.0], [689.0, 55.5], [700.0, 73.57142857142857], [701.0, 19.42857142857143], [702.0, 24.06666666666667], [697.0, 85.66666666666667], [696.0, 46.333333333333336], [679.0, 9.573573573573581], [678.0, 7.760736196319017], [698.0, 33.5], [691.0, 42.23809523809524], [692.0, 48.22448979591836], [693.0, 30.11111111111111], [694.0, 67.33333333333333], [695.0, 87.66666666666666], [710.0, 66.16000000000001], [705.0, 35.31249999999999], [704.0, 13.944099378882], [716.0, 9.925531914893613], [715.0, 12.352941176470587], [718.0, 8.400000000000002], [717.0, 9.629834254143647], [719.0, 10.11363636363636], [706.0, 21.263681592039813], [707.0, 29.507936507936513], [708.0, 50.6875], [709.0, 14.249999999999998], [711.0, 19.453488372093016], [728.0, 192.68421052631578], [729.0, 34.1875], [730.0, 25.766355140186906], [731.0, 13.525252525252526], [732.0, 12.663716814159285], [735.0, 13.918032786885243], [721.0, 11.23076923076923], [720.0, 10.140350877192985], [734.0, 9.071428571428571], [733.0, 7.645161290322579], [722.0, 46.134831460674135], [723.0, 54.739999999999974], [724.0, 179.8604651162791], [727.0, 27.275862068965523], [726.0, 25.687500000000004], [725.0, 27.020833333333336], [712.0, 24.489795918367342], [713.0, 11.846153846153843], [714.0, 43.172413793103445], [760.0, 23.813084112149536], [751.0, 249.41666666666663], [741.0, 76.08333333333333], [740.0, 13.326923076923077], [739.0, 27.437499999999996], [738.0, 10.147058823529415], [737.0, 17.52238805970149], [736.0, 23.333333333333336], [743.0, 8.300000000000002], [742.0, 13.75], [761.0, 10.5], [763.0, 7.843023255813956], [762.0, 7.814285714285715], [744.0, 22.22368421052632], [745.0, 9.596385542168674], [746.0, 16.76056338028169], [748.0, 21.94017094017095], [747.0, 8.214689265536723], [750.0, 38.617021276595736], [749.0, 27.870588235294118], [754.0, 69.07142857142857], [755.0, 40.80769230769232], [756.0, 24.421052631578945], [757.0, 42.96610169491524], [759.0, 23.214285714285715], [758.0, 80.68253968253968], [764.0, 324.1666666666667], [765.0, 17.363636363636367], [766.0, 28.024999999999984], [767.0, 63.2], [753.0, 223.19999999999996], [752.0, 84.0], [775.0, 83.6744186046512], [771.0, 56.76923076923078], [769.0, 19.96491228070176], [768.0, 14.8923076923077], [770.0, 12.493506493506498], [772.0, 44.91914893617019], [773.0, 304.0], [774.0, 114.22857142857137], [786.0, 22.062992125984252], [785.0, 30.040540540540537], [784.0, 27.647798742138377], [797.0, 57.3], [798.0, 9.978723404255323], [799.0, 14.785714285714286], [795.0, 15.366141732283463], [796.0, 102.18181818181819], [793.0, 568.2], [792.0, 11.509803921568631], [794.0, 35.04761904761905], [787.0, 16.074468085106368], [790.0, 15.890624999999993], [789.0, 6.800000000000001], [788.0, 8.507246376811594], [791.0, 400.25], [776.0, 14.993808049535595], [778.0, 6.0], [777.0, 8.219178082191782], [779.0, 24.126984126984123], [780.0, 18.897058823529413], [782.0, 17.77011494252873], [781.0, 22.337837837837835], [783.0, 28.375], [827.0, 17.015267175572518], [801.0, 12.246575342465757], [800.0, 29.688311688311668], [805.0, 39.25925925925926], [804.0, 17.891891891891888], [803.0, 15.526315789473687], [802.0, 19.678571428571427], [806.0, 24.29787234042553], [824.0, 7.375], [807.0, 15.63265306122449], [825.0, 18.717171717171734], [826.0, 24.83333333333334], [828.0, 47.6], [829.0, 11.647861692447691], [831.0, 135.9], [830.0, 27.528089887640437], [808.0, 81.40384615384616], [809.0, 23.63157894736842], [810.0, 32.68493150684934], [813.0, 175.5625], [812.0, 33.5], [811.0, 26.11111111111111], [814.0, 48.9375], [815.0, 36.54166666666664], [816.0, 184.35000000000002], [817.0, 177.44444444444446], [818.0, 52.470588235294116], [819.0, 59.758064516129025], [820.0, 126.525], [821.0, 24.500000000000004], [822.0, 129.5294117647059], [823.0, 15.5], [839.0, 179.66666666666669], [834.0, 42.20325203252033], [833.0, 68.03508771929825], [847.0, 10.933070866141728], [832.0, 29.411764705882348], [836.0, 49.15217391304346], [835.0, 260.9411764705883], [837.0, 17.696594427244573], [838.0, 14.205714285714286], [850.0, 42.0], [849.0, 9.11111111111111], [848.0, 8.903345724907064], [851.0, 10.166666666666668], [862.0, 129.0], [863.0, 91.66666666666667], [860.0, 38.84615384615385], [861.0, 109.87999999999998], [857.0, 105.62500000000003], [856.0, 10.714285714285715], [859.0, 204.0], [852.0, 26.281250000000004], [854.0, 61.99999999999999], [855.0, 9.023809523809527], [840.0, 35.04166666666666], [841.0, 46.66265060240963], [842.0, 20.841463414634156], [843.0, 11.309523809523808], [845.0, 10.789473684210526], [844.0, 70.56862745098042], [846.0, 88.76923076923076], [870.0, 15.999999999999998], [868.0, 271.0], [867.0, 168.64516129032256], [879.0, 30.666666666666668], [865.0, 9.5], [864.0, 8.083333333333334], [866.0, 8.0], [869.0, 18.636363636363637], [871.0, 216.8571428571429], [889.0, 6.0], [888.0, 22.666666666666668], [891.0, 236.8], [893.0, 249.6153846153847], [892.0, 40.42857142857143], [894.0, 87.2], [895.0, 34.5], [875.0, 14.0], [874.0, 30.636363636363647], [873.0, 14.571428571428571], [872.0, 16.142857142857146], [877.0, 21.499999999999996], [876.0, 25.933333333333337], [878.0, 24.0], [880.0, 110.83333333333333], [881.0, 127.99999999999999], [883.0, 18.0], [882.0, 8.333333333333334], [884.0, 238.52941176470588], [886.0, 93.50000000000001], [885.0, 22.5], [887.0, 476.0], [924.0, 15.600000000000003], [898.0, 153.0], [905.0, 68.94117647058822], [904.0, 17.0], [907.0, 37.0], [906.0, 49.75], [909.0, 36.89473684210527], [908.0, 25.0], [911.0, 40.43478260869565], [910.0, 35.5], [927.0, 14.8], [913.0, 5.0], [912.0, 26.312500000000004], [915.0, 37.83333333333333], [914.0, 17.444444444444443], [917.0, 42.375], [916.0, 30.77777777777778], [919.0, 33.68965517241379], [918.0, 66.0], [926.0, 11.281690140845065], [925.0, 10.975206611570247], [923.0, 20.730158730158745], [922.0, 15.984126984126984], [921.0, 21.03636363636364], [920.0, 28.71428571428571], [903.0, 47.625], [902.0, 26.875], [900.0, 57.49999999999999], [899.0, 59.833333333333336], [956.0, 20.537634408602145], [951.0, 246.2857142857144], [952.0, 10.813311688311686], [935.0, 10.720779220779221], [934.0, 8.950000000000003], [933.0, 7.95985401459854], [932.0, 8.06578947368421], [931.0, 9.161616161616163], [930.0, 14.335664335664333], [929.0, 9.75], [928.0, 18.57142857142857], [943.0, 30.17821782178217], [942.0, 38.86885245901638], [941.0, 30.615384615384613], [940.0, 27.36065573770492], [939.0, 24.18947368421053], [938.0, 23.73611111111111], [937.0, 12.071428571428575], [936.0, 9.052631578947368], [953.0, 34.797546012269926], [954.0, 49.959595959595966], [958.0, 127.57142857142857], [959.0, 205.03124999999994], [945.0, 20.55555555555556], [944.0, 33.16666666666667], [947.0, 8.368613138686134], [946.0, 19.055555555555554], [949.0, 8.095238095238095], [948.0, 11.464999999999996], [950.0, 11.223214285714288], [957.0, 14.4], [955.0, 11.250000000000005], [985.0, 22.64999999999999], [965.0, 172.82857142857142], [963.0, 29.750000000000004], [960.0, 182.72727272727275], [962.0, 37.44186046511629], [961.0, 17.723404255319146], [975.0, 10.000000000000004], [964.0, 37.62264150943397], [966.0, 39.442307692307686], [967.0, 154.42857142857144], [970.0, 26.152542372881378], [969.0, 16.912280701754376], [968.0, 34.02247191011235], [971.0, 15.724137931034491], [973.0, 17.810344827586206], [972.0, 20.139344262295083], [974.0, 586.0], [976.0, 53.58333333333333], [977.0, 7.800000000000001], [988.0, 99.53846153846152], [987.0, 9.333333333333334], [986.0, 10.047619047619046], [990.0, 8.450704225352114], [989.0, 8.970588235294118], [991.0, 10.038961038961036], [984.0, 36.042857142857144], [978.0, 21.435684647302928], [980.0, 18.040865384615397], [979.0, 11.627906976744182], [981.0, 34.0], [983.0, 9.083333333333334], [982.0, 9.035714285714286], [998.0, 379.58823529411757], [994.0, 348.875], [992.0, 26.80508474576271], [993.0, 8.0], [1007.0, 17.22459893048128], [1006.0, 25.713333333333342], [995.0, 251.6956521739131], [996.0, 217.57142857142858], [997.0, 160.0], [1008.0, 17.231292517006807], [1012.0, 12.696078431372548], [1011.0, 10.871794871794874], [1010.0, 15.611764705882356], [1009.0, 13.477551020408162], [1023.0, 16.948818897637807], [1021.0, 66.58620689655172], [1020.0, 52.825396825396844], [1022.0, 40.2542372881356], [1017.0, 170.8823529411764], [1016.0, 26.688000000000006], [1018.0, 42.944805194805205], [1019.0, 39.99999999999999], [1013.0, 22.29139072847681], [1014.0, 36.80263157894737], [1015.0, 131.25], [1002.0, 252.7666666666667], [1001.0, 117.0], [1003.0, 189.0909090909091], [1004.0, 143.00000000000006], [1005.0, 88.57142857142858], [1024.0, 50.451490450368], [1.0, 106.0]], "isOverall": false, "label": "Get_Request", "isController": false}, {"data": [[933.5789406500726, 47.10951657539545]], "isOverall": false, "label": "Get_Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1024.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 80632.18333333333, "minX": 1.62512616E12, "maxY": 4.26418023E7, "series": [{"data": [[1.62512628E12, 4.26418023E7], [1.62512622E12, 8713827.916666666], [1.62512634E12, 1.1993282533333333E7], [1.62512616E12, 551777.95]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62512628E12, 6622468.5], [1.62512622E12, 1351217.3166666667], [1.62512634E12, 1862597.6666666667], [1.62512616E12, 80632.18333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62512634E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 17.881596171718638, "minX": 1.62512616E12, "maxY": 149.39392852094798, "series": [{"data": [[1.62512628E12, 33.87389553050645], [1.62512622E12, 147.8351347668524], [1.62512634E12, 18.039357995197584], [1.62512616E12, 66.55319332070943]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[1.62512628E12, 34.1059938487553], [1.62512622E12, 149.39392852094798], [1.62512634E12, 17.881596171718638], [1.62512616E12, 69.9702069202371]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62512634E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 17.860947974135108, "minX": 1.62512616E12, "maxY": 149.3618423198597, "series": [{"data": [[1.62512628E12, 33.84801231644337], [1.62512622E12, 147.80431689968003], [1.62512634E12, 18.01912329482302], [1.62512616E12, 66.5239283869853]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[1.62512628E12, 34.078997335944415], [1.62512622E12, 149.3618423198597], [1.62512634E12, 17.860947974135108], [1.62512616E12, 69.92787842362821]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62512634E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62512616E12, "maxY": 5.40619902120718, "series": [{"data": [[1.62512628E12, 0.028234817750716318], [1.62512622E12, 0.0], [1.62512634E12, 0.0], [1.62512616E12, 0.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[1.62512628E12, 0.029005400414902946], [1.62512622E12, 0.19388176707875324], [1.62512634E12, 0.008115323011212027], [1.62512616E12, 5.40619902120718]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62512634E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.62512616E12, "maxY": 4483.0, "series": [{"data": [[1.62512628E12, 2655.0], [1.62512622E12, 4483.0], [1.62512634E12, 2226.0], [1.62512616E12, 2226.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62512628E12, 49.0], [1.62512622E12, 147.0], [1.62512634E12, 10.0], [1.62512616E12, 155.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62512628E12, 148.9800000000032], [1.62512622E12, 382.9900000000016], [1.62512634E12, 70.0], [1.62512616E12, 537.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62512628E12, 74.0], [1.62512622E12, 206.0], [1.62512634E12, 11.0], [1.62512616E12, 242.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62512628E12, 3.0], [1.62512622E12, 3.0], [1.62512634E12, 4.0], [1.62512616E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62512628E12, 8.0], [1.62512622E12, 12.0], [1.62512634E12, 8.0], [1.62512616E12, 11.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62512634E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 591.0, "maxY": 485.0, "series": [{"data": [[35623.0, 9.0], [35839.0, 9.0], [42215.0, 8.0], [45543.0, 8.0], [19339.0, 13.0], [18883.0, 30.0], [20267.0, 15.0], [19575.0, 21.0], [20847.0, 16.0], [21327.0, 11.0], [21387.0, 18.0], [23795.0, 14.0], [25031.0, 12.0], [24859.0, 12.0], [26023.0, 10.0], [26131.0, 9.0], [27951.0, 9.0], [39462.0, 8.0], [43174.0, 8.0], [8841.0, 11.0], [38309.0, 8.0], [9901.0, 11.0], [40045.0, 8.0], [40821.0, 8.0], [42093.0, 8.0], [42549.0, 8.0], [42821.0, 8.0], [12879.0, 11.0], [15671.0, 11.0], [17298.0, 11.0], [19182.0, 13.0], [19418.0, 12.0], [21766.0, 12.0], [24994.0, 12.0], [25278.0, 11.0], [26870.0, 9.0], [30626.0, 9.0], [33636.0, 9.0], [35836.0, 9.0], [35748.0, 9.0], [35564.0, 9.0], [36828.0, 8.0], [36916.0, 9.0], [47652.0, 8.0], [33235.0, 9.0], [33875.0, 9.0], [36155.0, 9.0], [591.0, 10.0], [40547.0, 8.0], [656.0, 66.5], [669.0, 75.0], [668.0, 10.0], [681.0, 9.0], [734.0, 12.0], [748.0, 10.0], [794.0, 10.0], [811.0, 12.0], [842.0, 12.0], [925.0, 10.0], [988.0, 10.0], [1000.0, 10.0], [1055.0, 11.0], [1077.0, 10.0], [1080.0, 11.0], [16637.0, 11.0], [1149.0, 11.0], [1127.0, 11.0], [1122.0, 11.0], [1140.0, 10.0], [17881.0, 12.0], [18053.0, 12.0], [18133.0, 13.0], [18293.0, 13.0], [1203.0, 11.0], [1184.0, 11.0], [1169.0, 10.0], [1267.0, 11.0], [21333.0, 8.0], [1396.0, 10.0], [1345.0, 10.0], [1455.0, 10.0], [1471.0, 11.0], [22869.0, 13.0], [23781.0, 13.0], [1592.0, 10.0], [1640.0, 10.0], [29401.0, 9.0], [1854.0, 8.0], [31097.0, 9.0], [2039.0, 485.0], [31953.0, 9.0], [2086.0, 310.0], [2051.0, 380.0], [34482.0, 9.0], [2202.0, 89.0], [2208.0, 261.0], [2269.0, 378.0], [2224.0, 291.0], [36402.0, 9.0], [38658.0, 8.0], [2487.0, 281.0], [2453.0, 253.0], [39106.0, 9.0], [2704.0, 238.0], [2753.0, 146.0], [43378.0, 8.0], [2955.0, 200.0], [3066.0, 140.0], [47130.0, 8.0], [3109.0, 88.0], [3391.0, 23.0], [3532.0, 49.0], [3549.0, 37.0], [3558.0, 23.0], [3473.0, 18.0], [3866.0, 37.5], [4093.0, 18.0], [4118.0, 45.0], [4185.0, 14.0], [4538.0, 19.0], [4528.0, 14.0], [4845.0, 14.0], [4826.0, 8.0], [4949.0, 9.0], [5232.0, 13.0], [5125.0, 12.0], [5227.0, 9.0], [5587.0, 12.0], [5390.0, 8.0], [5675.0, 12.0], [5835.0, 12.0], [5816.0, 8.0], [5792.0, 8.0], [5819.0, 8.0], [5881.0, 8.0], [6106.0, 8.0], [6300.0, 12.0], [6352.0, 8.0], [6377.0, 8.0], [6387.0, 8.0], [6391.0, 8.0], [6511.0, 8.0], [6523.0, 8.0], [6628.0, 8.0], [6529.0, 8.0], [6597.0, 8.0], [6471.0, 8.0], [6774.0, 8.0], [6757.0, 9.0], [6888.0, 12.0], [6831.0, 8.0], [6828.0, 8.0], [6895.0, 8.0], [6754.0, 11.0], [6747.0, 8.0], [6678.0, 8.0], [6767.0, 8.0], [6660.0, 8.0], [6779.0, 8.0], [6743.0, 8.0], [6915.0, 11.0], [7180.0, 11.0], [7710.0, 11.0], [8118.0, 11.0], [9864.0, 11.0], [11388.0, 11.0], [45193.0, 8.0], [11788.0, 11.0], [12262.0, 11.0], [13746.0, 11.0], [14588.0, 11.0], [17952.0, 12.0], [21108.0, 13.0], [24336.0, 12.0], [24248.0, 12.0], [23992.0, 13.0], [25492.0, 12.0], [25856.0, 10.0], [28792.0, 9.0], [37432.0, 8.0], [44216.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 47652.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 591.0, "maxY": 485.0, "series": [{"data": [[35623.0, 9.0], [35839.0, 9.0], [42215.0, 8.0], [45543.0, 8.0], [19339.0, 13.0], [18883.0, 30.0], [20267.0, 14.0], [19575.0, 20.0], [20847.0, 16.0], [21327.0, 11.0], [21387.0, 18.0], [23795.0, 14.0], [25031.0, 12.0], [24859.0, 12.0], [26023.0, 10.0], [26131.0, 9.0], [27951.0, 9.0], [39462.0, 8.0], [43174.0, 8.0], [8841.0, 11.0], [38309.0, 8.0], [9901.0, 11.0], [40045.0, 8.0], [40821.0, 8.0], [42093.0, 8.0], [42549.0, 8.0], [42821.0, 8.0], [12879.0, 11.0], [15671.0, 11.0], [17298.0, 11.0], [19182.0, 13.0], [19418.0, 12.0], [21766.0, 12.0], [24994.0, 12.0], [25278.0, 11.0], [26870.0, 9.0], [30626.0, 9.0], [33636.0, 9.0], [35836.0, 9.0], [35748.0, 9.0], [35564.0, 9.0], [36828.0, 8.0], [36916.0, 9.0], [47652.0, 8.0], [33235.0, 9.0], [33875.0, 9.0], [36155.0, 8.0], [591.0, 10.0], [40547.0, 8.0], [656.0, 66.5], [669.0, 75.0], [668.0, 10.0], [681.0, 9.0], [734.0, 12.0], [748.0, 10.0], [794.0, 10.0], [811.0, 12.0], [842.0, 12.0], [925.0, 10.0], [988.0, 10.0], [1000.0, 10.0], [1055.0, 11.0], [1077.0, 10.0], [1080.0, 11.0], [16637.0, 11.0], [1149.0, 11.0], [1127.0, 10.0], [1122.0, 11.0], [1140.0, 10.0], [17881.0, 12.0], [18053.0, 12.0], [18133.0, 13.0], [18293.0, 13.0], [1203.0, 11.0], [1184.0, 11.0], [1169.0, 10.0], [1267.0, 11.0], [21333.0, 8.0], [1396.0, 10.0], [1345.0, 10.0], [1455.0, 10.0], [1471.0, 11.0], [22869.0, 13.0], [23781.0, 13.0], [1592.0, 10.0], [1640.0, 10.0], [29401.0, 9.0], [1854.0, 8.0], [31097.0, 9.0], [2039.0, 485.0], [31953.0, 9.0], [2086.0, 310.0], [2051.0, 380.0], [34482.0, 9.0], [2202.0, 89.0], [2208.0, 261.0], [2269.0, 378.0], [2224.0, 291.0], [36402.0, 9.0], [38658.0, 8.0], [2487.0, 281.0], [2453.0, 253.0], [39106.0, 8.0], [2704.0, 238.0], [2753.0, 146.0], [43378.0, 8.0], [2955.0, 200.0], [3066.0, 140.0], [47130.0, 8.0], [3109.0, 88.0], [3391.0, 23.0], [3532.0, 49.0], [3549.0, 37.0], [3558.0, 23.0], [3473.0, 18.0], [3866.0, 37.5], [4093.0, 18.0], [4118.0, 45.0], [4185.0, 14.0], [4538.0, 19.0], [4528.0, 14.0], [4845.0, 14.0], [4826.0, 8.0], [4949.0, 9.0], [5232.0, 13.0], [5125.0, 12.0], [5227.0, 9.0], [5587.0, 12.0], [5390.0, 8.0], [5675.0, 12.0], [5835.0, 12.0], [5816.0, 8.0], [5792.0, 8.0], [5819.0, 8.0], [5881.0, 8.0], [6106.0, 8.0], [6300.0, 11.0], [6352.0, 8.0], [6377.0, 8.0], [6387.0, 8.0], [6391.0, 8.0], [6511.0, 8.0], [6523.0, 8.0], [6628.0, 8.0], [6529.0, 8.0], [6597.0, 8.0], [6471.0, 8.0], [6774.0, 8.0], [6757.0, 9.0], [6888.0, 12.0], [6831.0, 8.0], [6828.0, 8.0], [6895.0, 8.0], [6754.0, 11.0], [6747.0, 8.0], [6678.0, 8.0], [6767.0, 8.0], [6660.0, 8.0], [6779.0, 8.0], [6743.0, 8.0], [6915.0, 11.0], [7180.0, 11.0], [7710.0, 11.0], [8118.0, 11.0], [9864.0, 11.0], [11388.0, 11.0], [45193.0, 8.0], [11788.0, 11.0], [12262.0, 11.0], [13746.0, 11.0], [14588.0, 11.0], [17952.0, 12.0], [21108.0, 12.0], [24336.0, 12.0], [24248.0, 12.0], [23992.0, 13.0], [25492.0, 12.0], [25856.0, 10.0], [28792.0, 9.0], [37432.0, 8.0], [44216.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 47652.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 388.8, "minX": 1.62512616E12, "maxY": 29966.05, "series": [{"data": [[1.62512628E12, 29966.05], [1.62512622E12, 6139.45], [1.62512634E12, 8411.133333333333], [1.62512616E12, 388.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62512634E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 387.75, "minX": 1.62512616E12, "maxY": 29966.1, "series": [{"data": [[1.62512628E12, 29966.1], [1.62512622E12, 6123.45], [1.62512634E12, 8428.133333333333], [1.62512616E12, 387.75]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62512634E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 193.63333333333333, "minX": 1.62512616E12, "maxY": 14983.416666666666, "series": [{"data": [[1.62512628E12, 14983.416666666666], [1.62512622E12, 3065.7], [1.62512634E12, 4214.25], [1.62512616E12, 194.11666666666667]], "isOverall": false, "label": "Get_Request-success", "isController": false}, {"data": [[1.62512628E12, 14982.683333333332], [1.62512622E12, 3057.75], [1.62512634E12, 4213.883333333333], [1.62512616E12, 193.63333333333333]], "isOverall": false, "label": "Post_Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62512634E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 387.75, "minX": 1.62512616E12, "maxY": 29966.1, "series": [{"data": [[1.62512628E12, 29966.1], [1.62512622E12, 6123.45], [1.62512634E12, 8428.133333333333], [1.62512616E12, 387.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62512634E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

