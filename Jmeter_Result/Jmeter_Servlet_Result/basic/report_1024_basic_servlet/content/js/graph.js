/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 11193.0, "series": [{"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 6.0], [6.5, 6.0], [6.6, 6.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 7.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 7.0], [13.0, 7.0], [13.1, 7.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 7.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 7.0], [17.6, 7.0], [17.7, 7.0], [17.8, 7.0], [17.9, 7.0], [18.0, 7.0], [18.1, 7.0], [18.2, 7.0], [18.3, 7.0], [18.4, 7.0], [18.5, 7.0], [18.6, 7.0], [18.7, 7.0], [18.8, 7.0], [18.9, 7.0], [19.0, 7.0], [19.1, 7.0], [19.2, 7.0], [19.3, 7.0], [19.4, 7.0], [19.5, 7.0], [19.6, 7.0], [19.7, 7.0], [19.8, 7.0], [19.9, 7.0], [20.0, 7.0], [20.1, 8.0], [20.2, 8.0], [20.3, 8.0], [20.4, 8.0], [20.5, 8.0], [20.6, 8.0], [20.7, 8.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 8.0], [21.8, 8.0], [21.9, 8.0], [22.0, 8.0], [22.1, 8.0], [22.2, 8.0], [22.3, 8.0], [22.4, 8.0], [22.5, 8.0], [22.6, 8.0], [22.7, 8.0], [22.8, 8.0], [22.9, 8.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 8.0], [23.5, 8.0], [23.6, 8.0], [23.7, 8.0], [23.8, 8.0], [23.9, 8.0], [24.0, 8.0], [24.1, 8.0], [24.2, 8.0], [24.3, 8.0], [24.4, 8.0], [24.5, 8.0], [24.6, 8.0], [24.7, 8.0], [24.8, 8.0], [24.9, 8.0], [25.0, 8.0], [25.1, 8.0], [25.2, 8.0], [25.3, 8.0], [25.4, 8.0], [25.5, 8.0], [25.6, 8.0], [25.7, 8.0], [25.8, 8.0], [25.9, 8.0], [26.0, 8.0], [26.1, 8.0], [26.2, 8.0], [26.3, 8.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 8.0], [27.2, 8.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 8.0], [29.6, 8.0], [29.7, 8.0], [29.8, 8.0], [29.9, 8.0], [30.0, 8.0], [30.1, 8.0], [30.2, 8.0], [30.3, 8.0], [30.4, 8.0], [30.5, 8.0], [30.6, 8.0], [30.7, 8.0], [30.8, 8.0], [30.9, 8.0], [31.0, 8.0], [31.1, 8.0], [31.2, 8.0], [31.3, 8.0], [31.4, 8.0], [31.5, 8.0], [31.6, 8.0], [31.7, 8.0], [31.8, 8.0], [31.9, 8.0], [32.0, 8.0], [32.1, 8.0], [32.2, 8.0], [32.3, 8.0], [32.4, 8.0], [32.5, 8.0], [32.6, 8.0], [32.7, 8.0], [32.8, 8.0], [32.9, 9.0], [33.0, 9.0], [33.1, 9.0], [33.2, 9.0], [33.3, 9.0], [33.4, 9.0], [33.5, 9.0], [33.6, 9.0], [33.7, 9.0], [33.8, 9.0], [33.9, 9.0], [34.0, 9.0], [34.1, 9.0], [34.2, 9.0], [34.3, 9.0], [34.4, 9.0], [34.5, 9.0], [34.6, 9.0], [34.7, 9.0], [34.8, 9.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 9.0], [38.0, 9.0], [38.1, 9.0], [38.2, 9.0], [38.3, 9.0], [38.4, 9.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 9.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 10.0], [48.1, 10.0], [48.2, 10.0], [48.3, 10.0], [48.4, 10.0], [48.5, 10.0], [48.6, 10.0], [48.7, 10.0], [48.8, 10.0], [48.9, 10.0], [49.0, 10.0], [49.1, 10.0], [49.2, 10.0], [49.3, 10.0], [49.4, 10.0], [49.5, 10.0], [49.6, 10.0], [49.7, 10.0], [49.8, 10.0], [49.9, 10.0], [50.0, 10.0], [50.1, 10.0], [50.2, 10.0], [50.3, 10.0], [50.4, 10.0], [50.5, 10.0], [50.6, 10.0], [50.7, 10.0], [50.8, 10.0], [50.9, 10.0], [51.0, 10.0], [51.1, 10.0], [51.2, 10.0], [51.3, 10.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 11.0], [52.2, 11.0], [52.3, 11.0], [52.4, 11.0], [52.5, 11.0], [52.6, 11.0], [52.7, 11.0], [52.8, 11.0], [52.9, 11.0], [53.0, 11.0], [53.1, 11.0], [53.2, 11.0], [53.3, 11.0], [53.4, 11.0], [53.5, 11.0], [53.6, 11.0], [53.7, 11.0], [53.8, 11.0], [53.9, 11.0], [54.0, 11.0], [54.1, 11.0], [54.2, 11.0], [54.3, 11.0], [54.4, 11.0], [54.5, 11.0], [54.6, 11.0], [54.7, 11.0], [54.8, 11.0], [54.9, 11.0], [55.0, 11.0], [55.1, 11.0], [55.2, 11.0], [55.3, 11.0], [55.4, 11.0], [55.5, 11.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 11.0], [56.0, 11.0], [56.1, 11.0], [56.2, 11.0], [56.3, 11.0], [56.4, 11.0], [56.5, 12.0], [56.6, 12.0], [56.7, 12.0], [56.8, 12.0], [56.9, 12.0], [57.0, 12.0], [57.1, 12.0], [57.2, 12.0], [57.3, 12.0], [57.4, 12.0], [57.5, 12.0], [57.6, 12.0], [57.7, 12.0], [57.8, 12.0], [57.9, 12.0], [58.0, 12.0], [58.1, 12.0], [58.2, 12.0], [58.3, 12.0], [58.4, 12.0], [58.5, 12.0], [58.6, 12.0], [58.7, 12.0], [58.8, 12.0], [58.9, 12.0], [59.0, 12.0], [59.1, 12.0], [59.2, 12.0], [59.3, 12.0], [59.4, 13.0], [59.5, 13.0], [59.6, 13.0], [59.7, 13.0], [59.8, 13.0], [59.9, 13.0], [60.0, 13.0], [60.1, 13.0], [60.2, 13.0], [60.3, 13.0], [60.4, 13.0], [60.5, 13.0], [60.6, 13.0], [60.7, 13.0], [60.8, 13.0], [60.9, 13.0], [61.0, 13.0], [61.1, 14.0], [61.2, 14.0], [61.3, 14.0], [61.4, 14.0], [61.5, 14.0], [61.6, 14.0], [61.7, 14.0], [61.8, 14.0], [61.9, 14.0], [62.0, 14.0], [62.1, 15.0], [62.2, 15.0], [62.3, 15.0], [62.4, 15.0], [62.5, 15.0], [62.6, 15.0], [62.7, 15.0], [62.8, 16.0], [62.9, 16.0], [63.0, 16.0], [63.1, 16.0], [63.2, 16.0], [63.3, 17.0], [63.4, 17.0], [63.5, 17.0], [63.6, 17.0], [63.7, 18.0], [63.8, 18.0], [63.9, 18.0], [64.0, 19.0], [64.1, 19.0], [64.2, 19.0], [64.3, 20.0], [64.4, 20.0], [64.5, 20.0], [64.6, 21.0], [64.7, 21.0], [64.8, 22.0], [64.9, 22.0], [65.0, 23.0], [65.1, 23.0], [65.2, 24.0], [65.3, 24.0], [65.4, 25.0], [65.5, 25.0], [65.6, 26.0], [65.7, 27.0], [65.8, 27.0], [65.9, 28.0], [66.0, 28.0], [66.1, 29.0], [66.2, 29.0], [66.3, 30.0], [66.4, 31.0], [66.5, 31.0], [66.6, 32.0], [66.7, 32.0], [66.8, 33.0], [66.9, 33.0], [67.0, 34.0], [67.1, 34.0], [67.2, 35.0], [67.3, 35.0], [67.4, 36.0], [67.5, 36.0], [67.6, 37.0], [67.7, 37.0], [67.8, 38.0], [67.9, 38.0], [68.0, 39.0], [68.1, 39.0], [68.2, 40.0], [68.3, 40.0], [68.4, 41.0], [68.5, 41.0], [68.6, 41.0], [68.7, 42.0], [68.8, 42.0], [68.9, 43.0], [69.0, 43.0], [69.1, 43.0], [69.2, 44.0], [69.3, 44.0], [69.4, 45.0], [69.5, 45.0], [69.6, 45.0], [69.7, 46.0], [69.8, 46.0], [69.9, 47.0], [70.0, 47.0], [70.1, 47.0], [70.2, 48.0], [70.3, 48.0], [70.4, 48.0], [70.5, 49.0], [70.6, 49.0], [70.7, 50.0], [70.8, 50.0], [70.9, 50.0], [71.0, 51.0], [71.1, 51.0], [71.2, 51.0], [71.3, 52.0], [71.4, 52.0], [71.5, 52.0], [71.6, 53.0], [71.7, 53.0], [71.8, 53.0], [71.9, 54.0], [72.0, 54.0], [72.1, 54.0], [72.2, 55.0], [72.3, 55.0], [72.4, 55.0], [72.5, 56.0], [72.6, 56.0], [72.7, 56.0], [72.8, 57.0], [72.9, 57.0], [73.0, 57.0], [73.1, 58.0], [73.2, 58.0], [73.3, 58.0], [73.4, 59.0], [73.5, 59.0], [73.6, 59.0], [73.7, 60.0], [73.8, 60.0], [73.9, 60.0], [74.0, 60.0], [74.1, 61.0], [74.2, 61.0], [74.3, 61.0], [74.4, 62.0], [74.5, 62.0], [74.6, 62.0], [74.7, 63.0], [74.8, 63.0], [74.9, 63.0], [75.0, 64.0], [75.1, 64.0], [75.2, 64.0], [75.3, 65.0], [75.4, 65.0], [75.5, 65.0], [75.6, 66.0], [75.7, 66.0], [75.8, 66.0], [75.9, 66.0], [76.0, 67.0], [76.1, 67.0], [76.2, 67.0], [76.3, 68.0], [76.4, 68.0], [76.5, 68.0], [76.6, 68.0], [76.7, 69.0], [76.8, 69.0], [76.9, 69.0], [77.0, 70.0], [77.1, 70.0], [77.2, 70.0], [77.3, 70.0], [77.4, 71.0], [77.5, 71.0], [77.6, 71.0], [77.7, 71.0], [77.8, 72.0], [77.9, 72.0], [78.0, 72.0], [78.1, 72.0], [78.2, 72.0], [78.3, 73.0], [78.4, 73.0], [78.5, 73.0], [78.6, 73.0], [78.7, 74.0], [78.8, 74.0], [78.9, 74.0], [79.0, 74.0], [79.1, 74.0], [79.2, 75.0], [79.3, 75.0], [79.4, 75.0], [79.5, 75.0], [79.6, 75.0], [79.7, 76.0], [79.8, 76.0], [79.9, 76.0], [80.0, 76.0], [80.1, 76.0], [80.2, 77.0], [80.3, 77.0], [80.4, 77.0], [80.5, 77.0], [80.6, 77.0], [80.7, 78.0], [80.8, 78.0], [80.9, 78.0], [81.0, 78.0], [81.1, 78.0], [81.2, 78.0], [81.3, 79.0], [81.4, 79.0], [81.5, 79.0], [81.6, 79.0], [81.7, 79.0], [81.8, 80.0], [81.9, 80.0], [82.0, 80.0], [82.1, 80.0], [82.2, 80.0], [82.3, 80.0], [82.4, 81.0], [82.5, 81.0], [82.6, 81.0], [82.7, 81.0], [82.8, 81.0], [82.9, 81.0], [83.0, 82.0], [83.1, 82.0], [83.2, 82.0], [83.3, 82.0], [83.4, 82.0], [83.5, 83.0], [83.6, 83.0], [83.7, 83.0], [83.8, 83.0], [83.9, 83.0], [84.0, 84.0], [84.1, 84.0], [84.2, 84.0], [84.3, 84.0], [84.4, 84.0], [84.5, 84.0], [84.6, 85.0], [84.7, 85.0], [84.8, 85.0], [84.9, 85.0], [85.0, 85.0], [85.1, 86.0], [85.2, 86.0], [85.3, 86.0], [85.4, 86.0], [85.5, 87.0], [85.6, 87.0], [85.7, 87.0], [85.8, 87.0], [85.9, 88.0], [86.0, 88.0], [86.1, 88.0], [86.2, 88.0], [86.3, 88.0], [86.4, 89.0], [86.5, 89.0], [86.6, 89.0], [86.7, 89.0], [86.8, 90.0], [86.9, 90.0], [87.0, 90.0], [87.1, 90.0], [87.2, 91.0], [87.3, 91.0], [87.4, 91.0], [87.5, 91.0], [87.6, 92.0], [87.7, 92.0], [87.8, 92.0], [87.9, 93.0], [88.0, 93.0], [88.1, 93.0], [88.2, 93.0], [88.3, 94.0], [88.4, 94.0], [88.5, 94.0], [88.6, 94.0], [88.7, 95.0], [88.8, 95.0], [88.9, 95.0], [89.0, 95.0], [89.1, 96.0], [89.2, 96.0], [89.3, 96.0], [89.4, 97.0], [89.5, 97.0], [89.6, 97.0], [89.7, 98.0], [89.8, 98.0], [89.9, 98.0], [90.0, 99.0], [90.1, 99.0], [90.2, 99.0], [90.3, 100.0], [90.4, 100.0], [90.5, 100.0], [90.6, 101.0], [90.7, 101.0], [90.8, 102.0], [90.9, 102.0], [91.0, 103.0], [91.1, 104.0], [91.2, 104.0], [91.3, 105.0], [91.4, 106.0], [91.5, 108.0], [91.6, 109.0], [91.7, 111.0], [91.8, 113.0], [91.9, 116.0], [92.0, 118.0], [92.1, 121.0], [92.2, 124.0], [92.3, 127.0], [92.4, 130.0], [92.5, 133.0], [92.6, 136.0], [92.7, 138.0], [92.8, 141.0], [92.9, 143.0], [93.0, 146.0], [93.1, 148.0], [93.2, 151.0], [93.3, 154.0], [93.4, 157.0], [93.5, 160.0], [93.6, 164.0], [93.7, 167.0], [93.8, 171.0], [93.9, 174.0], [94.0, 177.0], [94.1, 180.0], [94.2, 183.0], [94.3, 186.0], [94.4, 189.0], [94.5, 192.0], [94.6, 194.0], [94.7, 197.0], [94.8, 200.0], [94.9, 202.0], [95.0, 206.0], [95.1, 210.0], [95.2, 216.0], [95.3, 223.0], [95.4, 232.0], [95.5, 239.0], [95.6, 246.0], [95.7, 252.0], [95.8, 259.0], [95.9, 266.0], [96.0, 275.0], [96.1, 281.0], [96.2, 287.0], [96.3, 292.0], [96.4, 296.0], [96.5, 300.0], [96.6, 306.0], [96.7, 313.0], [96.8, 324.0], [96.9, 337.0], [97.0, 348.0], [97.1, 358.0], [97.2, 369.0], [97.3, 379.0], [97.4, 387.0], [97.5, 394.0], [97.6, 401.0], [97.7, 410.0], [97.8, 428.0], [97.9, 446.0], [98.0, 464.0], [98.1, 483.0], [98.2, 497.0], [98.3, 512.0], [98.4, 546.0], [98.5, 577.0], [98.6, 597.0], [98.7, 636.0], [98.8, 680.0], [98.9, 717.0], [99.0, 784.0], [99.1, 858.0], [99.2, 960.0], [99.3, 1095.0], [99.4, 1276.0], [99.5, 1431.0], [99.6, 1577.0], [99.7, 1766.0], [99.8, 2043.0], [99.9, 3576.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 6.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 7.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 7.0], [13.0, 7.0], [13.1, 7.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 7.0], [14.2, 7.0], [14.3, 7.0], [14.4, 7.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 7.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 7.0], [17.6, 7.0], [17.7, 7.0], [17.8, 7.0], [17.9, 8.0], [18.0, 8.0], [18.1, 8.0], [18.2, 8.0], [18.3, 8.0], [18.4, 8.0], [18.5, 8.0], [18.6, 8.0], [18.7, 8.0], [18.8, 8.0], [18.9, 8.0], [19.0, 8.0], [19.1, 8.0], [19.2, 8.0], [19.3, 8.0], [19.4, 8.0], [19.5, 8.0], [19.6, 8.0], [19.7, 8.0], [19.8, 8.0], [19.9, 8.0], [20.0, 8.0], [20.1, 8.0], [20.2, 8.0], [20.3, 8.0], [20.4, 8.0], [20.5, 8.0], [20.6, 8.0], [20.7, 8.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 8.0], [21.8, 8.0], [21.9, 8.0], [22.0, 8.0], [22.1, 8.0], [22.2, 8.0], [22.3, 8.0], [22.4, 8.0], [22.5, 8.0], [22.6, 8.0], [22.7, 8.0], [22.8, 8.0], [22.9, 8.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 8.0], [23.5, 8.0], [23.6, 8.0], [23.7, 8.0], [23.8, 8.0], [23.9, 8.0], [24.0, 8.0], [24.1, 8.0], [24.2, 8.0], [24.3, 8.0], [24.4, 8.0], [24.5, 8.0], [24.6, 8.0], [24.7, 8.0], [24.8, 8.0], [24.9, 8.0], [25.0, 8.0], [25.1, 8.0], [25.2, 8.0], [25.3, 8.0], [25.4, 8.0], [25.5, 8.0], [25.6, 8.0], [25.7, 8.0], [25.8, 8.0], [25.9, 8.0], [26.0, 8.0], [26.1, 8.0], [26.2, 8.0], [26.3, 8.0], [26.4, 8.0], [26.5, 8.0], [26.6, 8.0], [26.7, 8.0], [26.8, 8.0], [26.9, 8.0], [27.0, 8.0], [27.1, 8.0], [27.2, 8.0], [27.3, 8.0], [27.4, 8.0], [27.5, 8.0], [27.6, 8.0], [27.7, 8.0], [27.8, 8.0], [27.9, 8.0], [28.0, 8.0], [28.1, 8.0], [28.2, 8.0], [28.3, 8.0], [28.4, 8.0], [28.5, 8.0], [28.6, 8.0], [28.7, 8.0], [28.8, 8.0], [28.9, 8.0], [29.0, 8.0], [29.1, 8.0], [29.2, 8.0], [29.3, 8.0], [29.4, 8.0], [29.5, 8.0], [29.6, 8.0], [29.7, 8.0], [29.8, 8.0], [29.9, 8.0], [30.0, 8.0], [30.1, 8.0], [30.2, 8.0], [30.3, 8.0], [30.4, 8.0], [30.5, 8.0], [30.6, 8.0], [30.7, 8.0], [30.8, 8.0], [30.9, 8.0], [31.0, 9.0], [31.1, 9.0], [31.2, 9.0], [31.3, 9.0], [31.4, 9.0], [31.5, 9.0], [31.6, 9.0], [31.7, 9.0], [31.8, 9.0], [31.9, 9.0], [32.0, 9.0], [32.1, 9.0], [32.2, 9.0], [32.3, 9.0], [32.4, 9.0], [32.5, 9.0], [32.6, 9.0], [32.7, 9.0], [32.8, 9.0], [32.9, 9.0], [33.0, 9.0], [33.1, 9.0], [33.2, 9.0], [33.3, 9.0], [33.4, 9.0], [33.5, 9.0], [33.6, 9.0], [33.7, 9.0], [33.8, 9.0], [33.9, 9.0], [34.0, 9.0], [34.1, 9.0], [34.2, 9.0], [34.3, 9.0], [34.4, 9.0], [34.5, 9.0], [34.6, 9.0], [34.7, 9.0], [34.8, 9.0], [34.9, 9.0], [35.0, 9.0], [35.1, 9.0], [35.2, 9.0], [35.3, 9.0], [35.4, 9.0], [35.5, 9.0], [35.6, 9.0], [35.7, 9.0], [35.8, 9.0], [35.9, 9.0], [36.0, 9.0], [36.1, 9.0], [36.2, 9.0], [36.3, 9.0], [36.4, 9.0], [36.5, 9.0], [36.6, 9.0], [36.7, 9.0], [36.8, 9.0], [36.9, 9.0], [37.0, 9.0], [37.1, 9.0], [37.2, 9.0], [37.3, 9.0], [37.4, 9.0], [37.5, 9.0], [37.6, 9.0], [37.7, 9.0], [37.8, 9.0], [37.9, 9.0], [38.0, 9.0], [38.1, 9.0], [38.2, 9.0], [38.3, 9.0], [38.4, 9.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 9.0], [40.0, 9.0], [40.1, 9.0], [40.2, 9.0], [40.3, 9.0], [40.4, 9.0], [40.5, 9.0], [40.6, 9.0], [40.7, 9.0], [40.8, 9.0], [40.9, 9.0], [41.0, 9.0], [41.1, 9.0], [41.2, 9.0], [41.3, 9.0], [41.4, 9.0], [41.5, 9.0], [41.6, 9.0], [41.7, 9.0], [41.8, 9.0], [41.9, 9.0], [42.0, 9.0], [42.1, 10.0], [42.2, 10.0], [42.3, 10.0], [42.4, 10.0], [42.5, 10.0], [42.6, 10.0], [42.7, 10.0], [42.8, 10.0], [42.9, 10.0], [43.0, 10.0], [43.1, 10.0], [43.2, 10.0], [43.3, 10.0], [43.4, 10.0], [43.5, 10.0], [43.6, 10.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 10.0], [44.9, 10.0], [45.0, 10.0], [45.1, 10.0], [45.2, 10.0], [45.3, 10.0], [45.4, 10.0], [45.5, 10.0], [45.6, 10.0], [45.7, 10.0], [45.8, 10.0], [45.9, 10.0], [46.0, 10.0], [46.1, 10.0], [46.2, 10.0], [46.3, 10.0], [46.4, 10.0], [46.5, 10.0], [46.6, 10.0], [46.7, 10.0], [46.8, 10.0], [46.9, 10.0], [47.0, 10.0], [47.1, 10.0], [47.2, 10.0], [47.3, 10.0], [47.4, 10.0], [47.5, 10.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 10.0], [48.1, 10.0], [48.2, 10.0], [48.3, 10.0], [48.4, 10.0], [48.5, 10.0], [48.6, 10.0], [48.7, 10.0], [48.8, 10.0], [48.9, 10.0], [49.0, 10.0], [49.1, 10.0], [49.2, 10.0], [49.3, 10.0], [49.4, 10.0], [49.5, 10.0], [49.6, 10.0], [49.7, 10.0], [49.8, 10.0], [49.9, 10.0], [50.0, 10.0], [50.1, 10.0], [50.2, 10.0], [50.3, 10.0], [50.4, 11.0], [50.5, 11.0], [50.6, 11.0], [50.7, 11.0], [50.8, 11.0], [50.9, 11.0], [51.0, 11.0], [51.1, 11.0], [51.2, 11.0], [51.3, 11.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 11.0], [52.2, 11.0], [52.3, 11.0], [52.4, 11.0], [52.5, 11.0], [52.6, 11.0], [52.7, 11.0], [52.8, 11.0], [52.9, 11.0], [53.0, 11.0], [53.1, 11.0], [53.2, 11.0], [53.3, 11.0], [53.4, 11.0], [53.5, 11.0], [53.6, 11.0], [53.7, 11.0], [53.8, 11.0], [53.9, 11.0], [54.0, 11.0], [54.1, 11.0], [54.2, 11.0], [54.3, 11.0], [54.4, 11.0], [54.5, 11.0], [54.6, 11.0], [54.7, 11.0], [54.8, 11.0], [54.9, 11.0], [55.0, 11.0], [55.1, 11.0], [55.2, 11.0], [55.3, 11.0], [55.4, 11.0], [55.5, 11.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 12.0], [56.0, 12.0], [56.1, 12.0], [56.2, 12.0], [56.3, 12.0], [56.4, 12.0], [56.5, 12.0], [56.6, 12.0], [56.7, 12.0], [56.8, 12.0], [56.9, 12.0], [57.0, 12.0], [57.1, 12.0], [57.2, 12.0], [57.3, 12.0], [57.4, 12.0], [57.5, 12.0], [57.6, 12.0], [57.7, 12.0], [57.8, 12.0], [57.9, 12.0], [58.0, 12.0], [58.1, 12.0], [58.2, 12.0], [58.3, 12.0], [58.4, 12.0], [58.5, 12.0], [58.6, 12.0], [58.7, 12.0], [58.8, 12.0], [58.9, 12.0], [59.0, 12.0], [59.1, 13.0], [59.2, 13.0], [59.3, 13.0], [59.4, 13.0], [59.5, 13.0], [59.6, 13.0], [59.7, 13.0], [59.8, 13.0], [59.9, 13.0], [60.0, 13.0], [60.1, 13.0], [60.2, 13.0], [60.3, 13.0], [60.4, 13.0], [60.5, 13.0], [60.6, 13.0], [60.7, 13.0], [60.8, 13.0], [60.9, 14.0], [61.0, 14.0], [61.1, 14.0], [61.2, 14.0], [61.3, 14.0], [61.4, 14.0], [61.5, 14.0], [61.6, 14.0], [61.7, 14.0], [61.8, 14.0], [61.9, 14.0], [62.0, 14.0], [62.1, 15.0], [62.2, 15.0], [62.3, 15.0], [62.4, 15.0], [62.5, 15.0], [62.6, 15.0], [62.7, 15.0], [62.8, 16.0], [62.9, 16.0], [63.0, 16.0], [63.1, 16.0], [63.2, 16.0], [63.3, 16.0], [63.4, 17.0], [63.5, 17.0], [63.6, 17.0], [63.7, 17.0], [63.8, 18.0], [63.9, 18.0], [64.0, 18.0], [64.1, 19.0], [64.2, 19.0], [64.3, 19.0], [64.4, 20.0], [64.5, 20.0], [64.6, 21.0], [64.7, 21.0], [64.8, 21.0], [64.9, 22.0], [65.0, 22.0], [65.1, 23.0], [65.2, 23.0], [65.3, 24.0], [65.4, 24.0], [65.5, 25.0], [65.6, 25.0], [65.7, 26.0], [65.8, 27.0], [65.9, 27.0], [66.0, 28.0], [66.1, 28.0], [66.2, 29.0], [66.3, 29.0], [66.4, 30.0], [66.5, 30.0], [66.6, 31.0], [66.7, 32.0], [66.8, 32.0], [66.9, 33.0], [67.0, 33.0], [67.1, 34.0], [67.2, 34.0], [67.3, 35.0], [67.4, 35.0], [67.5, 36.0], [67.6, 36.0], [67.7, 37.0], [67.8, 37.0], [67.9, 38.0], [68.0, 38.0], [68.1, 39.0], [68.2, 39.0], [68.3, 40.0], [68.4, 40.0], [68.5, 40.0], [68.6, 41.0], [68.7, 41.0], [68.8, 42.0], [68.9, 42.0], [69.0, 43.0], [69.1, 43.0], [69.2, 43.0], [69.3, 44.0], [69.4, 44.0], [69.5, 45.0], [69.6, 45.0], [69.7, 45.0], [69.8, 46.0], [69.9, 46.0], [70.0, 46.0], [70.1, 47.0], [70.2, 47.0], [70.3, 48.0], [70.4, 48.0], [70.5, 48.0], [70.6, 49.0], [70.7, 49.0], [70.8, 49.0], [70.9, 50.0], [71.0, 50.0], [71.1, 50.0], [71.2, 51.0], [71.3, 51.0], [71.4, 51.0], [71.5, 52.0], [71.6, 52.0], [71.7, 53.0], [71.8, 53.0], [71.9, 53.0], [72.0, 54.0], [72.1, 54.0], [72.2, 54.0], [72.3, 55.0], [72.4, 55.0], [72.5, 55.0], [72.6, 56.0], [72.7, 56.0], [72.8, 56.0], [72.9, 57.0], [73.0, 57.0], [73.1, 57.0], [73.2, 58.0], [73.3, 58.0], [73.4, 58.0], [73.5, 59.0], [73.6, 59.0], [73.7, 59.0], [73.8, 60.0], [73.9, 60.0], [74.0, 60.0], [74.1, 61.0], [74.2, 61.0], [74.3, 61.0], [74.4, 62.0], [74.5, 62.0], [74.6, 62.0], [74.7, 63.0], [74.8, 63.0], [74.9, 63.0], [75.0, 63.0], [75.1, 64.0], [75.2, 64.0], [75.3, 64.0], [75.4, 65.0], [75.5, 65.0], [75.6, 65.0], [75.7, 66.0], [75.8, 66.0], [75.9, 66.0], [76.0, 67.0], [76.1, 67.0], [76.2, 67.0], [76.3, 67.0], [76.4, 68.0], [76.5, 68.0], [76.6, 68.0], [76.7, 69.0], [76.8, 69.0], [76.9, 69.0], [77.0, 69.0], [77.1, 70.0], [77.2, 70.0], [77.3, 70.0], [77.4, 70.0], [77.5, 71.0], [77.6, 71.0], [77.7, 71.0], [77.8, 71.0], [77.9, 72.0], [78.0, 72.0], [78.1, 72.0], [78.2, 72.0], [78.3, 73.0], [78.4, 73.0], [78.5, 73.0], [78.6, 73.0], [78.7, 73.0], [78.8, 74.0], [78.9, 74.0], [79.0, 74.0], [79.1, 74.0], [79.2, 75.0], [79.3, 75.0], [79.4, 75.0], [79.5, 75.0], [79.6, 75.0], [79.7, 76.0], [79.8, 76.0], [79.9, 76.0], [80.0, 76.0], [80.1, 76.0], [80.2, 77.0], [80.3, 77.0], [80.4, 77.0], [80.5, 77.0], [80.6, 77.0], [80.7, 78.0], [80.8, 78.0], [80.9, 78.0], [81.0, 78.0], [81.1, 78.0], [81.2, 78.0], [81.3, 79.0], [81.4, 79.0], [81.5, 79.0], [81.6, 79.0], [81.7, 79.0], [81.8, 79.0], [81.9, 80.0], [82.0, 80.0], [82.1, 80.0], [82.2, 80.0], [82.3, 80.0], [82.4, 81.0], [82.5, 81.0], [82.6, 81.0], [82.7, 81.0], [82.8, 81.0], [82.9, 81.0], [83.0, 82.0], [83.1, 82.0], [83.2, 82.0], [83.3, 82.0], [83.4, 82.0], [83.5, 83.0], [83.6, 83.0], [83.7, 83.0], [83.8, 83.0], [83.9, 83.0], [84.0, 84.0], [84.1, 84.0], [84.2, 84.0], [84.3, 84.0], [84.4, 84.0], [84.5, 85.0], [84.6, 85.0], [84.7, 85.0], [84.8, 85.0], [84.9, 85.0], [85.0, 86.0], [85.1, 86.0], [85.2, 86.0], [85.3, 86.0], [85.4, 86.0], [85.5, 87.0], [85.6, 87.0], [85.7, 87.0], [85.8, 87.0], [85.9, 88.0], [86.0, 88.0], [86.1, 88.0], [86.2, 88.0], [86.3, 88.0], [86.4, 89.0], [86.5, 89.0], [86.6, 89.0], [86.7, 89.0], [86.8, 90.0], [86.9, 90.0], [87.0, 90.0], [87.1, 90.0], [87.2, 91.0], [87.3, 91.0], [87.4, 91.0], [87.5, 91.0], [87.6, 92.0], [87.7, 92.0], [87.8, 92.0], [87.9, 93.0], [88.0, 93.0], [88.1, 93.0], [88.2, 93.0], [88.3, 94.0], [88.4, 94.0], [88.5, 94.0], [88.6, 94.0], [88.7, 95.0], [88.8, 95.0], [88.9, 95.0], [89.0, 96.0], [89.1, 96.0], [89.2, 96.0], [89.3, 96.0], [89.4, 97.0], [89.5, 97.0], [89.6, 97.0], [89.7, 98.0], [89.8, 98.0], [89.9, 98.0], [90.0, 99.0], [90.1, 99.0], [90.2, 99.0], [90.3, 100.0], [90.4, 100.0], [90.5, 101.0], [90.6, 101.0], [90.7, 101.0], [90.8, 102.0], [90.9, 102.0], [91.0, 103.0], [91.1, 104.0], [91.2, 104.0], [91.3, 105.0], [91.4, 106.0], [91.5, 108.0], [91.6, 109.0], [91.7, 111.0], [91.8, 113.0], [91.9, 116.0], [92.0, 118.0], [92.1, 121.0], [92.2, 125.0], [92.3, 128.0], [92.4, 131.0], [92.5, 133.0], [92.6, 136.0], [92.7, 139.0], [92.8, 141.0], [92.9, 144.0], [93.0, 146.0], [93.1, 149.0], [93.2, 151.0], [93.3, 154.0], [93.4, 157.0], [93.5, 161.0], [93.6, 164.0], [93.7, 168.0], [93.8, 171.0], [93.9, 175.0], [94.0, 178.0], [94.1, 181.0], [94.2, 184.0], [94.3, 187.0], [94.4, 190.0], [94.5, 192.0], [94.6, 195.0], [94.7, 197.0], [94.8, 200.0], [94.9, 203.0], [95.0, 207.0], [95.1, 211.0], [95.2, 218.0], [95.3, 225.0], [95.4, 233.0], [95.5, 241.0], [95.6, 247.0], [95.7, 254.0], [95.8, 261.0], [95.9, 269.0], [96.0, 277.0], [96.1, 284.0], [96.2, 289.0], [96.3, 294.0], [96.4, 298.0], [96.5, 302.0], [96.6, 307.0], [96.7, 316.0], [96.8, 329.0], [96.9, 342.0], [97.0, 352.0], [97.1, 362.0], [97.2, 373.0], [97.3, 383.0], [97.4, 391.0], [97.5, 397.0], [97.6, 404.0], [97.7, 415.0], [97.8, 436.0], [97.9, 452.0], [98.0, 471.0], [98.1, 487.0], [98.2, 499.0], [98.3, 521.0], [98.4, 554.0], [98.5, 584.0], [98.6, 602.0], [98.7, 643.0], [98.8, 684.0], [98.9, 728.0], [99.0, 790.0], [99.1, 868.0], [99.2, 981.0], [99.3, 1122.0], [99.4, 1294.0], [99.5, 1455.0], [99.6, 1610.0], [99.7, 1804.0], [99.8, 2142.0], [99.9, 4051.0]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 890075.0, "series": [{"data": [[0.0, 889722.0], [100.0, 44718.0], [200.0, 16595.0], [300.0, 10830.0], [400.0, 6367.0], [500.0, 3827.0], [600.0, 2476.0], [700.0, 1675.0], [800.0, 1145.0], [900.0, 863.0], [1000.0, 633.0], [1100.0, 554.0], [1200.0, 594.0], [1300.0, 632.0], [1400.0, 701.0], [1500.0, 613.0], [1600.0, 531.0], [1700.0, 471.0], [1800.0, 405.0], [1900.0, 300.0], [2000.0, 216.0], [2100.0, 169.0], [2200.0, 118.0], [2300.0, 101.0], [2400.0, 105.0], [2500.0, 56.0], [2600.0, 61.0], [2700.0, 58.0], [2800.0, 46.0], [2900.0, 26.0], [3000.0, 28.0], [3100.0, 27.0], [3200.0, 22.0], [3300.0, 25.0], [3400.0, 10.0], [3500.0, 19.0], [3600.0, 25.0], [3700.0, 34.0], [3800.0, 42.0], [3900.0, 45.0], [4000.0, 28.0], [4200.0, 24.0], [4100.0, 42.0], [4300.0, 31.0], [4500.0, 27.0], [4400.0, 30.0], [4600.0, 29.0], [4700.0, 33.0], [4800.0, 31.0], [4900.0, 19.0], [5000.0, 24.0], [5100.0, 21.0], [5200.0, 22.0], [5300.0, 13.0], [5400.0, 11.0], [5500.0, 11.0], [5600.0, 8.0], [5700.0, 11.0], [5800.0, 16.0], [5900.0, 5.0], [6000.0, 14.0], [6100.0, 10.0], [6200.0, 11.0], [6300.0, 19.0], [6400.0, 9.0], [6600.0, 7.0], [6500.0, 8.0], [6700.0, 2.0], [6800.0, 7.0], [6900.0, 5.0], [7000.0, 13.0], [7100.0, 13.0], [7200.0, 11.0], [7400.0, 7.0], [7300.0, 3.0], [7500.0, 11.0], [7600.0, 3.0], [7700.0, 7.0], [7800.0, 7.0], [7900.0, 4.0], [8100.0, 11.0], [8000.0, 8.0], [8200.0, 9.0], [8300.0, 11.0], [8400.0, 14.0], [8500.0, 2.0], [8600.0, 5.0], [8700.0, 6.0], [8900.0, 8.0], [8800.0, 11.0], [9000.0, 9.0], [9100.0, 11.0], [9200.0, 37.0], [9700.0, 1.0], [9300.0, 21.0], [9500.0, 27.0], [9400.0, 9.0], [9600.0, 16.0], [9800.0, 4.0], [9900.0, 2.0], [10100.0, 2.0], [11100.0, 5.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[0.0, 890075.0], [100.0, 44842.0], [200.0, 16300.0], [300.0, 10795.0], [400.0, 6528.0], [500.0, 3824.0], [600.0, 2615.0], [700.0, 1662.0], [800.0, 1175.0], [900.0, 802.0], [1000.0, 653.0], [1100.0, 551.0], [1200.0, 603.0], [1300.0, 638.0], [1400.0, 601.0], [1500.0, 644.0], [1600.0, 520.0], [1700.0, 489.0], [1800.0, 386.0], [1900.0, 307.0], [2000.0, 227.0], [2100.0, 165.0], [2300.0, 85.0], [2200.0, 109.0], [2400.0, 83.0], [2500.0, 75.0], [2600.0, 74.0], [2700.0, 61.0], [2800.0, 50.0], [2900.0, 44.0], [3000.0, 38.0], [3100.0, 28.0], [3200.0, 29.0], [3300.0, 19.0], [3400.0, 23.0], [3500.0, 14.0], [3600.0, 26.0], [3700.0, 40.0], [3800.0, 39.0], [3900.0, 40.0], [4000.0, 45.0], [4100.0, 41.0], [4200.0, 35.0], [4300.0, 49.0], [4400.0, 41.0], [4500.0, 23.0], [4600.0, 29.0], [4700.0, 25.0], [4800.0, 18.0], [4900.0, 28.0], [5100.0, 29.0], [5000.0, 29.0], [5200.0, 29.0], [5300.0, 18.0], [5400.0, 14.0], [5600.0, 12.0], [5500.0, 15.0], [5800.0, 14.0], [5700.0, 10.0], [6100.0, 20.0], [6000.0, 10.0], [5900.0, 7.0], [6200.0, 21.0], [6300.0, 13.0], [6400.0, 10.0], [6500.0, 18.0], [6600.0, 14.0], [6700.0, 8.0], [6800.0, 8.0], [6900.0, 16.0], [7000.0, 16.0], [7100.0, 6.0], [7300.0, 12.0], [7200.0, 9.0], [7400.0, 15.0], [7500.0, 7.0], [7600.0, 6.0], [7700.0, 3.0], [7800.0, 3.0], [7900.0, 7.0], [8000.0, 17.0], [8100.0, 20.0], [8200.0, 7.0], [8300.0, 15.0], [8400.0, 14.0], [8500.0, 12.0], [8600.0, 14.0], [8700.0, 17.0], [8800.0, 12.0], [8900.0, 11.0], [9000.0, 17.0], [9100.0, 8.0], [9200.0, 28.0], [9700.0, 6.0], [9300.0, 14.0], [9400.0, 8.0], [9500.0, 28.0], [9600.0, 18.0], [9800.0, 6.0], [10000.0, 2.0], [10100.0, 2.0], [11000.0, 1.0], [11100.0, 3.0]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9011.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1936937.0, "series": [{"data": [[0.0, 1936937.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 26065.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 9011.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 63.7671028733759, "minX": 1.62512322E12, "maxY": 1024.0, "series": [{"data": [[1.62512322E12, 63.8047880299252]], "isOverall": false, "label": "warm_up", "isController": false}, {"data": [[1.62512334E12, 63.9722106731407], [1.6251234E12, 63.7671028733759]], "isOverall": false, "label": "cool_down_phase", "isController": false}, {"data": [[1.62512328E12, 1024.0], [1.62512334E12, 997.9819426295062], [1.62512322E12, 1003.8355495616972]], "isOverall": false, "label": "peak_phase", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6251234E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.75, "minX": 1.0, "maxY": 2968.0, "series": [{"data": [[3.0, 99.0], [5.0, 2874.0], [6.0, 1369.0], [7.0, 1739.0], [8.0, 873.75], [9.0, 7.0], [10.0, 9.5], [11.0, 926.0], [12.0, 7.333333333333333], [13.0, 933.3333333333333], [14.0, 19.2], [15.0, 8.333333333333334], [16.0, 56.75], [17.0, 1166.2857142857144], [18.0, 11.0], [19.0, 654.0], [20.0, 8.333333333333334], [21.0, 7.0], [22.0, 9.0], [23.0, 1001.0000000000001], [24.0, 8.0], [25.0, 9.666666666666666], [26.0, 8.166666666666666], [27.0, 1862.3333333333335], [28.0, 9.0], [29.0, 9.25], [30.0, 220.66666666666669], [31.0, 8.714285714285714], [32.0, 63.46666666666666], [33.0, 9.153846153846155], [34.0, 13.214285714285715], [35.0, 8.0], [37.0, 230.4285714285714], [36.0, 9.0], [38.0, 8.615384615384615], [39.0, 8.2], [41.0, 208.14285714285714], [40.0, 335.50000000000006], [42.0, 129.33333333333334], [43.0, 8.5], [44.0, 10.555555555555555], [45.0, 7.714285714285714], [47.0, 432.5], [46.0, 8.857142857142858], [48.0, 8.842105263157896], [49.0, 8.0], [50.0, 7.0], [51.0, 7.25], [53.0, 8.5], [52.0, 77.0], [55.0, 2003.3333333333333], [54.0, 12.777777777777779], [56.0, 12.666666666666666], [57.0, 10.200000000000001], [59.0, 16.58333333333333], [58.0, 7.857142857142858], [60.0, 27.11111111111111], [61.0, 20.25], [62.0, 9.916666666666668], [63.0, 9.0], [64.0, 18.197255404291393], [65.0, 29.5], [68.0, 9.5], [69.0, 52.0], [74.0, 57.33333333333333], [72.0, 50.666666666666664], [78.0, 9.75], [79.0, 7.0], [76.0, 23.0], [80.0, 12.0], [81.0, 10.8], [82.0, 11.0], [84.0, 8.0], [87.0, 8.5], [88.0, 23.5], [89.0, 58.75], [90.0, 9.0], [93.0, 82.75], [95.0, 36.333333333333336], [92.0, 7.0], [98.0, 7.0], [96.0, 22.5], [101.0, 8.0], [106.0, 8.0], [105.0, 6.5], [104.0, 7.0], [111.0, 8.0], [110.0, 7.0], [109.0, 9.0], [108.0, 8.0], [113.0, 10.0], [115.0, 7.6], [112.0, 7.0], [116.0, 89.33333333333334], [117.0, 7.0], [121.0, 11.0], [122.0, 9.0], [123.0, 12.0], [120.0, 7.0], [124.0, 8.25], [127.0, 8.0], [126.0, 8.333333333333334], [125.0, 7.0], [128.0, 39.0], [130.0, 39.333333333333336], [135.0, 8.25], [134.0, 9.0], [133.0, 7.75], [132.0, 8.071428571428571], [131.0, 8.625], [129.0, 7.8], [143.0, 7.714285714285714], [142.0, 7.88], [141.0, 8.049999999999999], [140.0, 7.166666666666667], [139.0, 7.714285714285715], [138.0, 9.571428571428571], [136.0, 7.416666666666667], [151.0, 9.562500000000002], [150.0, 8.5], [149.0, 9.214285714285714], [148.0, 10.5], [147.0, 7.5], [146.0, 229.28571428571428], [145.0, 7.333333333333332], [144.0, 7.75], [158.0, 39.333333333333336], [159.0, 17.9375], [157.0, 9.891891891891891], [156.0, 10.000000000000004], [155.0, 8.75], [154.0, 8.057692307692305], [153.0, 7.2], [152.0, 12.235294117647062], [167.0, 10.333333333333334], [166.0, 16.000000000000004], [165.0, 6.5], [164.0, 55.0], [163.0, 14.5], [162.0, 24.166666666666668], [161.0, 17.047619047619047], [172.0, 29.444444444444443], [175.0, 9.428571428571429], [174.0, 7.43181818181818], [173.0, 7.5], [171.0, 10.5], [170.0, 12.688888888888888], [169.0, 20.0], [168.0, 12.764705882352942], [179.0, 7.681818181818182], [183.0, 12.129032258064514], [182.0, 9.399999999999997], [181.0, 16.333333333333332], [180.0, 7.919540229885058], [178.0, 7.500000000000001], [177.0, 7.25], [176.0, 7.874999999999999], [191.0, 10.846153846153847], [190.0, 7.0], [189.0, 9.5], [188.0, 6.909090909090909], [187.0, 7.999999999999999], [186.0, 22.425], [185.0, 7.2], [184.0, 7.833333333333334], [199.0, 7.666666666666667], [198.0, 8.456790123456791], [197.0, 10.294117647058826], [196.0, 7.793103448275863], [195.0, 6.75], [194.0, 7.333333333333333], [193.0, 13.090909090909092], [192.0, 8.0], [207.0, 15.595238095238097], [206.0, 5.75], [205.0, 22.5], [204.0, 11.6], [203.0, 19.22222222222222], [202.0, 11.29411764705882], [201.0, 7.7272727272727275], [200.0, 8.583333333333334], [212.0, 7.166666666666667], [214.0, 6.999999999999999], [213.0, 7.125], [211.0, 14.07142857142857], [210.0, 8.88888888888889], [209.0, 10.0], [208.0, 12.722222222222223], [223.0, 7.777777777777779], [222.0, 7.833333333333334], [221.0, 7.846153846153846], [220.0, 7.426966292134832], [219.0, 8.499999999999998], [218.0, 7.444444444444445], [217.0, 7.482758620689656], [216.0, 9.5], [231.0, 15.687500000000004], [230.0, 9.958333333333334], [229.0, 7.642857142857142], [228.0, 14.785714285714285], [227.0, 8.454545454545453], [226.0, 7.999999999999999], [225.0, 13.431372549019608], [224.0, 7.72413793103448], [239.0, 10.5], [238.0, 6.0], [237.0, 7.636363636363637], [236.0, 7.7272727272727275], [235.0, 7.674418604651162], [234.0, 9.46875], [233.0, 18.5], [232.0, 10.363636363636365], [247.0, 24.636363636363633], [246.0, 7.777777777777779], [245.0, 21.230769230769234], [244.0, 8.333333333333334], [243.0, 10.506024096385543], [242.0, 8.0], [241.0, 8.044444444444444], [255.0, 12.642857142857142], [254.0, 14.956521739130437], [253.0, 19.166666666666668], [252.0, 21.06896551724138], [251.0, 9.5], [250.0, 13.124999999999998], [249.0, 21.0], [248.0, 7.6875], [270.0, 9.333333333333332], [271.0, 23.166666666666664], [269.0, 11.333333333333334], [268.0, 8.82857142857143], [267.0, 8.0], [266.0, 7.8999999999999995], [264.0, 7.5], [263.0, 7.571428571428572], [257.0, 9.3125], [256.0, 11.4], [259.0, 7.724137931034482], [258.0, 8.333333333333334], [262.0, 7.613333333333334], [261.0, 8.0], [260.0, 7.527131782945737], [285.0, 29.243478260869573], [272.0, 11.164179104477613], [273.0, 43.21428571428571], [274.0, 9.153846153846153], [276.0, 35.2], [277.0, 19.333333333333332], [278.0, 52.43749999999999], [279.0, 11.682926829268293], [287.0, 7.0], [286.0, 8.0], [284.0, 7.666666666666667], [275.0, 16.52941176470588], [283.0, 7.481818181818183], [282.0, 8.095238095238095], [281.0, 12.675675675675677], [280.0, 7.849056603773585], [303.0, 8.064516129032263], [291.0, 23.863636363636367], [293.0, 15.262135922330094], [295.0, 20.000000000000004], [288.0, 9.0], [290.0, 11.615384615384613], [289.0, 12.975609756097562], [294.0, 16.666666666666664], [298.0, 285.6], [301.0, 13.811881188118809], [302.0, 7.833333333333333], [300.0, 7.0], [299.0, 8.312925170068025], [297.0, 7.25], [296.0, 15.846153846153847], [319.0, 95.87499999999999], [316.0, 10.559585492227981], [306.0, 14.884615384615385], [305.0, 9.999999999999995], [304.0, 7.842105263157894], [317.0, 13.64285714285714], [318.0, 33.578947368421055], [315.0, 9.48], [314.0, 7.5], [313.0, 9.066666666666668], [312.0, 15.576923076923077], [311.0, 14.466666666666667], [310.0, 12.20408163265306], [309.0, 18.8125], [308.0, 15.625], [333.0, 28.454545454545457], [322.0, 7.490196078431372], [320.0, 7.413793103448275], [323.0, 7.3199999999999985], [332.0, 52.777777777777786], [334.0, 39.79310344827586], [335.0, 15.8], [331.0, 8.5], [330.0, 6.6], [327.0, 16.349999999999998], [326.0, 13.638297872340429], [325.0, 7.9714285714285715], [324.0, 7.636363636363636], [350.0, 10.9], [344.0, 7.7368421052631575], [347.0, 16.187499999999996], [351.0, 26.153846153846153], [349.0, 13.857142857142858], [348.0, 8.5], [346.0, 7.0], [345.0, 7.797101449275365], [343.0, 7.413793103448277], [337.0, 11.568627450980394], [336.0, 20.312499999999996], [339.0, 10.651515151515149], [338.0, 7.0], [342.0, 8.228571428571426], [341.0, 7.416666666666666], [340.0, 7.518072289156628], [366.0, 27.42857142857143], [352.0, 52.0625], [353.0, 12.523809523809526], [355.0, 7.921052631578949], [354.0, 14.406451612903231], [360.0, 7.515151515151516], [363.0, 9.407407407407403], [367.0, 33.0], [365.0, 14.307692307692308], [364.0, 8.24657534246575], [362.0, 10.681159420289857], [359.0, 8.125], [358.0, 8.16883116883117], [357.0, 8.71186440677966], [356.0, 8.095238095238093], [381.0, 19.424242424242433], [369.0, 98.0], [370.0, 394.0], [380.0, 12.966666666666669], [371.0, 16.833333333333336], [372.0, 77.42857142857143], [373.0, 10.666666666666666], [374.0, 123.50000000000001], [375.0, 21.718749999999996], [368.0, 33.66666666666667], [377.0, 23.214285714285715], [376.0, 19.380952380952387], [379.0, 22.888888888888882], [378.0, 25.684210526315788], [383.0, 26.2], [382.0, 27.0], [398.0, 7.634920634920636], [399.0, 9.276785714285717], [397.0, 11.822222222222228], [396.0, 8.0], [395.0, 14.066666666666663], [394.0, 15.358024691358027], [393.0, 12.77241379310345], [392.0, 9.6054054054054], [391.0, 7.933333333333334], [385.0, 16.0], [384.0, 16.8], [387.0, 8.200000000000003], [386.0, 7.444444444444445], [390.0, 9.000000000000004], [389.0, 15.705882352941178], [388.0, 9.484848484848484], [414.0, 125.0], [405.0, 15.464285714285717], [404.0, 16.81578947368421], [406.0, 18.03092783505154], [412.0, 15.521126760563382], [407.0, 14.6], [400.0, 8.0], [402.0, 7.864864864864863], [401.0, 7.999999999999999], [403.0, 8.8], [415.0, 7.764705882352941], [411.0, 8.249999999999998], [410.0, 8.776000000000002], [409.0, 11.596330275229363], [408.0, 19.475000000000005], [430.0, 41.18181818181818], [431.0, 134.0], [429.0, 107.28571428571429], [419.0, 77.28571428571429], [418.0, 118.0], [417.0, 8.5], [416.0, 12.527777777777775], [427.0, 33.74999999999999], [426.0, 27.821428571428573], [425.0, 27.0], [424.0, 49.559999999999995], [423.0, 22.928571428571427], [422.0, 7.8], [421.0, 17.5], [420.0, 74.33333333333333], [445.0, 78.375], [447.0, 137.33333333333334], [437.0, 102.9090909090909], [436.0, 73.5], [438.0, 65.4], [442.0, 65.8], [446.0, 84.93750000000001], [444.0, 94.96153846153845], [435.0, 29.75], [434.0, 12.0], [433.0, 25.266666666666666], [432.0, 42.71428571428572], [443.0, 51.15], [440.0, 212.0], [439.0, 125.33333333333334], [462.0, 8.0], [450.0, 142.5], [453.0, 125.33333333333333], [452.0, 58.0], [455.0, 186.0], [449.0, 90.0], [448.0, 48.705882352941174], [454.0, 97.0], [461.0, 25.545454545454543], [463.0, 27.17910447761194], [460.0, 50.65625000000001], [451.0, 49.25], [459.0, 80.54838709677418], [458.0, 66.71428571428572], [457.0, 57.5625], [456.0, 183.0], [478.0, 12.384615384615387], [468.0, 12.140845070422536], [469.0, 9.289855072463768], [471.0, 15.125], [465.0, 31.851063829787236], [464.0, 7.0], [467.0, 19.461538461538463], [466.0, 37.20454545454545], [470.0, 449.0], [479.0, 10.154761904761902], [477.0, 10.344444444444445], [476.0, 27.857142857142854], [475.0, 51.142857142857146], [474.0, 47.77777777777778], [473.0, 17.42857142857143], [472.0, 8.166666666666668], [494.0, 16.69230769230769], [495.0, 66.83333333333333], [493.0, 784.5], [492.0, 18.526315789473685], [491.0, 53.848484848484844], [490.0, 8.58536585365853], [489.0, 17.36344086021506], [488.0, 10.325980392156868], [487.0, 24.92224622030237], [481.0, 19.68354430379747], [480.0, 9.568181818181817], [483.0, 40.54545454545455], [482.0, 38.23076923076923], [486.0, 14.15688259109311], [485.0, 20.0], [484.0, 26.53191489361702], [509.0, 18.533333333333335], [511.0, 17.789473684210527], [508.0, 23.25], [499.0, 34.74999999999999], [498.0, 42.19444444444446], [496.0, 34.0], [507.0, 28.642857142857142], [506.0, 16.25], [505.0, 55.5], [504.0, 28.428571428571427], [503.0, 22.938461538461535], [502.0, 10.352941176470589], [501.0, 10.096629213483144], [500.0, 29.35], [538.0, 246.83333333333334], [525.0, 47.0], [524.0, 39.8], [523.0, 8.333333333333334], [520.0, 17.555555555555557], [527.0, 7.0], [513.0, 9.463768115942026], [512.0, 12.588235294117647], [515.0, 8.544502617801049], [514.0, 7.772727272727274], [517.0, 16.399999999999995], [516.0, 9.280898876404494], [519.0, 36.0], [518.0, 9.5], [526.0, 8.0], [533.0, 60.0], [535.0, 13.75], [534.0, 34.285714285714285], [536.0, 60.63157894736842], [537.0, 183.6857142857143], [539.0, 168.2], [541.0, 24.8], [542.0, 81.67857142857143], [543.0, 130.0], [532.0, 18.6], [531.0, 13.818181818181817], [530.0, 17.323529411764707], [529.0, 146.72727272727275], [528.0, 319.4], [559.0, 25.307692307692307], [550.0, 32.166666666666664], [549.0, 46.166666666666664], [548.0, 23.666666666666668], [546.0, 28.076923076923077], [544.0, 35.57894736842105], [568.0, 140.66666666666666], [551.0, 27.444444444444443], [555.0, 212.0], [554.0, 71.0], [553.0, 53.285714285714285], [552.0, 8.0], [556.0, 34.66666666666667], [557.0, 352.0], [558.0, 8.5], [565.0, 21.75], [567.0, 32.470588235294116], [566.0, 52.0], [574.0, 28.75], [560.0, 51.0], [564.0, 101.0], [562.0, 8.666666666666666], [569.0, 47.75], [570.0, 49.764705882352935], [572.0, 35.5], [571.0, 42.61904761904761], [573.0, 136.5], [602.0, 7.0], [606.0, 44.66666666666667], [577.0, 40.0], [580.0, 46.0], [579.0, 50.25], [578.0, 30.88888888888889], [582.0, 28.333333333333332], [581.0, 61.25000000000001], [601.0, 8.666666666666666], [600.0, 8.0], [603.0, 6.333333333333333], [587.0, 38.75], [585.0, 32.4], [584.0, 20.0], [589.0, 21.809523809523807], [588.0, 31.714285714285715], [591.0, 12.85714285714286], [576.0, 37.42857142857143], [590.0, 19.545454545454547], [592.0, 49.195652173913025], [593.0, 68.57894736842105], [595.0, 6.0], [594.0, 6.75], [596.0, 6.0], [598.0, 9.0], [597.0, 6.6], [607.0, 8.2], [605.0, 7.0], [604.0, 8.0], [611.0, 8.125], [613.0, 39.333333333333336], [612.0, 9.0], [615.0, 8.666666666666666], [614.0, 8.375], [617.0, 13.433333333333332], [616.0, 9.894736842105262], [618.0, 30.75], [619.0, 207.0], [620.0, 7.0], [621.0, 84.57142857142857], [623.0, 32.34615384615385], [610.0, 7.842105263157895], [609.0, 15.333333333333332], [608.0, 7.166666666666667], [622.0, 8.777777777777779], [625.0, 111.59999999999998], [624.0, 7.2], [628.0, 16.166666666666668], [626.0, 12.8], [630.0, 20.0], [629.0, 28.833333333333336], [639.0, 50.27272727272728], [638.0, 27.68292682926829], [637.0, 6.5], [636.0, 7.5], [635.0, 28.88888888888889], [634.0, 8.625], [633.0, 31.866666666666664], [632.0, 10.833333333333332], [668.0, 41.78571428571428], [645.0, 19.000000000000004], [642.0, 30.909090909090907], [641.0, 27.29032258064516], [640.0, 33.0], [643.0, 56.266666666666666], [644.0, 28.122448979591837], [647.0, 27.875000000000004], [665.0, 13.297297297297298], [664.0, 8.5], [667.0, 10.857142857142856], [666.0, 7.4], [652.0, 7.166666666666666], [651.0, 28.227272727272727], [650.0, 38.68421052631579], [649.0, 29.030303030303028], [648.0, 21.928571428571427], [654.0, 37.27272727272727], [653.0, 7.0], [655.0, 14.34920634920635], [669.0, 30.743589743589745], [670.0, 43.444444444444436], [671.0, 15.5], [657.0, 7.846153846153846], [656.0, 11.675000000000002], [659.0, 9.122137404580153], [658.0, 7.744186046511628], [661.0, 10.974358974358973], [660.0, 8.241706161137444], [663.0, 14.666666666666666], [662.0, 10.181818181818182], [674.0, 33.720930232558146], [683.0, 9.568181818181818], [682.0, 9.0], [681.0, 12.434599156118145], [680.0, 30.4], [685.0, 16.0909090909091], [684.0, 8.979166666666668], [686.0, 81.08571428571427], [687.0, 16.020833333333336], [673.0, 46.57142857142857], [672.0, 23.20689655172414], [689.0, 25.29166666666668], [692.0, 10.379746835443042], [691.0, 7.145833333333333], [690.0, 16.321839080459764], [693.0, 10.647887323943658], [695.0, 8.166666666666664], [694.0, 8.5], [703.0, 138.16666666666669], [688.0, 15.323529411764705], [702.0, 31.96], [701.0, 20.666666666666668], [700.0, 39.52380952380952], [699.0, 26.0], [698.0, 7.4], [696.0, 18.319444444444436], [679.0, 35.90243902439025], [678.0, 59.4375], [676.0, 26.714285714285715], [675.0, 30.090909090909086], [730.0, 40.565217391304344], [710.0, 152.71428571428572], [711.0, 114.19999999999999], [713.0, 15.666666666666677], [712.0, 61.800000000000004], [715.0, 8.578947368421053], [714.0, 12.386363636363638], [716.0, 20.722222222222225], [717.0, 49.10000000000001], [719.0, 30.0], [705.0, 33.714285714285715], [704.0, 50.0], [707.0, 65.5], [706.0, 48.99999999999999], [709.0, 51.48484848484848], [708.0, 50.040000000000006], [718.0, 19.0], [727.0, 11.360000000000001], [726.0, 7.98876404494382], [725.0, 8.766990291262136], [724.0, 8.237762237762237], [723.0, 7.5555555555555545], [722.0, 11.040816326530608], [721.0, 18.58181818181818], [720.0, 26.117647058823525], [735.0, 26.65], [734.0, 24.83870967741936], [733.0, 21.241379310344833], [732.0, 21.294117647058822], [731.0, 16.33333333333334], [728.0, 23.85185185185185], [729.0, 14.29032258064516], [764.0, 18.926829268292682], [743.0, 56.58571428571429], [736.0, 27.95833333333334], [737.0, 30.216867469879517], [742.0, 184.90476190476195], [741.0, 37.44444444444443], [740.0, 43.04347826086956], [739.0, 39.0], [738.0, 38.3448275862069], [750.0, 34.77536231884059], [749.0, 18.573604060913716], [748.0, 14.42215568862275], [747.0, 29.687315634218265], [746.0, 33.685950413223146], [745.0, 22.978873239436613], [744.0, 13.059244791666659], [751.0, 10.82477876106194], [753.0, 19.23611111111111], [759.0, 54.26923076923076], [758.0, 18.23255813953489], [757.0, 21.97491638795989], [756.0, 42.87640449438201], [755.0, 35.63157894736842], [754.0, 22.44186046511628], [767.0, 51.0], [752.0, 17.333333333333336], [763.0, 15.499999999999996], [762.0, 30.23076923076923], [761.0, 16.0], [760.0, 26.444444444444446], [765.0, 90.33333333333333], [766.0, 47.642857142857146], [772.0, 34.00000000000001], [776.0, 211.75], [777.0, 30.608695652173914], [778.0, 20.28571428571429], [783.0, 790.5], [769.0, 24.750000000000007], [768.0, 48.36363636363636], [771.0, 10.816901408450704], [770.0, 11.395744680851069], [782.0, 32.3], [781.0, 19.714285714285715], [780.0, 40.666666666666664], [779.0, 8.4], [788.0, 1583.0], [790.0, 107.875], [789.0, 42.42857142857143], [791.0, 21.133333333333336], [793.0, 35.9090909090909], [792.0, 42.13333333333334], [775.0, 17.98507462686567], [774.0, 9.758007117437717], [773.0, 7.666666666666666], [794.0, 44.64], [795.0, 24.230769230769234], [799.0, 45.4], [785.0, 73.0], [784.0, 78.85714285714285], [787.0, 67.2], [786.0, 40.79999999999999], [798.0, 73.49999999999999], [797.0, 27.5], [796.0, 58.4], [807.0, 35.0], [814.0, 53.0], [806.0, 52.78947368421052], [805.0, 29.0], [804.0, 9.0], [803.0, 23.5], [802.0, 41.0], [801.0, 66.2], [800.0, 53.5], [824.0, 31.666666666666664], [810.0, 106.125], [809.0, 30.272727272727273], [808.0, 40.6], [811.0, 15.75], [813.0, 35.0], [812.0, 35.45454545454546], [818.0, 35.5], [820.0, 31.642857142857142], [819.0, 46.0], [821.0, 32.333333333333336], [823.0, 45.5], [822.0, 54.4], [825.0, 253.37500000000006], [831.0, 976.7142857142858], [817.0, 30.5], [830.0, 21.5], [829.0, 58.16666666666667], [828.0, 38.0], [827.0, 7.0], [838.0, 23.8], [832.0, 52.77777777777778], [847.0, 73.5], [845.0, 40.33333333333333], [844.0, 41.0], [843.0, 31.875], [842.0, 42.5], [840.0, 25.5], [833.0, 873.5], [834.0, 479.0], [835.0, 55.5], [837.0, 41.69230769230769], [836.0, 43.0], [850.0, 50.16666666666667], [849.0, 69.18181818181817], [848.0, 72.75], [858.0, 97.75], [856.0, 54.9], [839.0, 6.0], [859.0, 51.0], [862.0, 61.5], [860.0, 47.75], [863.0, 42.375], [851.0, 62.25], [852.0, 187.59999999999997], [853.0, 39.0], [854.0, 112.0], [855.0, 61.0], [869.0, 15.4], [868.0, 11.0], [867.0, 21.46153846153846], [866.0, 29.72727272727273], [865.0, 31.6], [864.0, 37.15384615384615], [871.0, 282.4285714285715], [870.0, 19.166666666666664], [888.0, 21.77777777777778], [890.0, 376.0], [889.0, 10.666666666666666], [891.0, 12.0], [894.0, 315.0], [893.0, 20.733333333333338], [892.0, 16.071428571428573], [895.0, 15.0], [872.0, 12.76923076923077], [873.0, 6.0], [875.0, 8.0], [874.0, 17.8], [876.0, 232.11111111111111], [878.0, 9.9], [877.0, 8.54166666666667], [879.0, 20.333333333333332], [880.0, 11.333333333333334], [881.0, 20.78571428571429], [883.0, 8.0], [882.0, 9.444444444444443], [884.0, 11.0], [887.0, 7.5], [886.0, 8.0], [885.0, 17.875], [921.0, 22.723140495867757], [896.0, 8.916666666666668], [897.0, 14.421052631578947], [911.0, 36.666666666666664], [910.0, 29.080000000000002], [909.0, 32.26315789473684], [908.0, 45.125], [907.0, 35.285714285714285], [906.0, 19.360655737704917], [905.0, 49.6], [904.0, 8.8], [898.0, 20.28571428571429], [900.0, 21.833333333333332], [899.0, 19.22222222222222], [902.0, 31.258064516129036], [901.0, 6.5], [920.0, 22.666666666666664], [903.0, 18.999999999999996], [927.0, 43.935483870967744], [913.0, 8.0], [912.0, 34.05], [915.0, 10.47945205479452], [914.0, 15.200716845878134], [917.0, 9.428571428571429], [916.0, 9.411764705882353], [919.0, 13.77586206896552], [918.0, 13.666666666666666], [926.0, 40.35714285714286], [925.0, 38.0], [924.0, 38.55555555555555], [923.0, 24.4], [922.0, 43.53571428571429], [956.0, 32.48571428571429], [959.0, 20.56756756756756], [945.0, 19.69032258064517], [944.0, 19.559055118110237], [947.0, 32.5], [946.0, 15.894736842105262], [949.0, 12.558823529411764], [948.0, 10.007299270072991], [958.0, 26.047619047619044], [957.0, 20.27272727272728], [955.0, 29.588235294117645], [954.0, 18.7], [953.0, 23.405405405405403], [952.0, 32.64150943396226], [943.0, 20.5], [929.0, 40.18604651162791], [928.0, 33.9], [931.0, 22.0], [930.0, 31.666666666666664], [933.0, 10.0], [932.0, 40.27272727272727], [935.0, 37.325], [934.0, 45.94736842105264], [942.0, 16.708333333333332], [941.0, 9.22137404580152], [940.0, 10.207207207207205], [939.0, 21.720930232558146], [938.0, 44.529411764705884], [937.0, 35.57142857142857], [936.0, 40.26], [951.0, 22.148936170212764], [950.0, 29.8135593220339], [988.0, 8.444444444444446], [975.0, 36.941176470588246], [961.0, 18.0], [963.0, 25.75], [962.0, 20.408163265306126], [965.0, 7.941747572815532], [964.0, 10.51824817518248], [967.0, 7.9107142857142865], [966.0, 8.561403508771928], [974.0, 9.690476190476192], [973.0, 9.97872340425532], [972.0, 11.386861313868613], [971.0, 10.142857142857148], [970.0, 9.333333333333332], [969.0, 8.73913043478261], [968.0, 9.186746987951814], [991.0, 7.8571428571428585], [977.0, 22.821428571428577], [976.0, 17.1219512195122], [979.0, 7.903508771929827], [978.0, 11.3125], [981.0, 7.851063829787235], [980.0, 7.888888888888891], [983.0, 7.0], [982.0, 8.333333333333334], [990.0, 8.131578947368418], [989.0, 8.333333333333334], [987.0, 8.1], [986.0, 7.746031746031744], [985.0, 13.125], [984.0, 8.928571428571427], [1020.0, 94.92857142857142], [1019.0, 143.73469387755105], [1022.0, 44.745098039215684], [1023.0, 84.88235294117646], [1009.0, 9.21875], [1008.0, 14.558139534883722], [1011.0, 8.571428571428571], [1010.0, 8.571428571428571], [1013.0, 6.615384615384616], [1012.0, 14.46153846153846], [1021.0, 49.76354679802956], [1018.0, 57.88888888888889], [1017.0, 39.39583333333333], [1016.0, 32.03999999999999], [1007.0, 8.25], [993.0, 7.838709677419355], [992.0, 7.977272727272729], [995.0, 7.75], [994.0, 7.625], [997.0, 31.0], [996.0, 8.0], [1006.0, 9.124999999999998], [1005.0, 9.450000000000001], [1004.0, 107.08524590163931], [1015.0, 20.142857142857142], [1014.0, 19.60714285714285], [1024.0, 70.67096129890614], [1.0, 2940.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[911.3548285975493, 63.6105348267921]], "isOverall": false, "label": "Post_Request-Aggregated", "isController": false}, {"data": [[2.0, 1453.5], [3.0, 2968.0], [4.0, 10.0], [5.0, 1371.0], [7.0, 1399.5], [8.0, 1395.6], [9.0, 9.0], [10.0, 8.666666666666666], [11.0, 35.57142857142857], [12.0, 602.6], [13.0, 49.5], [14.0, 8.833333333333334], [15.0, 21.666666666666668], [16.0, 9.0], [17.0, 2683.0], [18.0, 676.75], [19.0, 8.0], [20.0, 8.2], [21.0, 10.666666666666666], [22.0, 8.0], [23.0, 1316.5], [25.0, 7.5], [26.0, 8.285714285714285], [27.0, 2726.5], [28.0, 543.0], [29.0, 25.0], [30.0, 69.41176470588235], [31.0, 22.0], [33.0, 73.50000000000001], [32.0, 81.79999999999998], [34.0, 120.44444444444441], [35.0, 10.357142857142854], [37.0, 245.0], [36.0, 53.54545454545455], [38.0, 17.583333333333336], [39.0, 9.8], [40.0, 634.0], [41.0, 12.285714285714286], [43.0, 141.5], [42.0, 28.666666666666664], [44.0, 215.0], [45.0, 14.25], [47.0, 224.16666666666669], [46.0, 12.125], [48.0, 206.9411764705882], [49.0, 7.333333333333333], [51.0, 29.0], [50.0, 7.5], [53.0, 18.5], [55.0, 1744.0], [54.0, 120.84615384615384], [57.0, 24.75], [56.0, 35.0], [58.0, 17.384615384615387], [59.0, 34.36363636363637], [61.0, 11.428571428571429], [60.0, 20.66666666666666], [62.0, 18.77777777777778], [63.0, 15.428571428571429], [64.0, 19.239745880484566], [69.0, 8.75], [72.0, 72.66666666666666], [74.0, 39.8], [75.0, 30.5], [73.0, 9.0], [76.0, 84.0], [78.0, 30.333333333333336], [79.0, 7.0], [77.0, 9.0], [81.0, 38.0], [82.0, 35.0], [84.0, 9.5], [85.0, 15.333333333333334], [87.0, 9.0], [88.0, 36.75], [89.0, 58.50000000000001], [90.0, 42.0], [92.0, 19.5], [93.0, 49.66666666666667], [95.0, 60.5], [98.0, 23.0], [96.0, 7.5], [100.0, 12.0], [101.0, 13.0], [102.0, 19.0], [103.0, 8.333333333333334], [107.0, 32.0], [105.0, 7.0], [104.0, 10.0], [110.0, 132.25], [111.0, 25.0], [108.0, 7.2], [112.0, 57.666666666666664], [115.0, 8.0], [114.0, 8.0], [116.0, 92.75], [118.0, 10.5], [119.0, 60.2], [122.0, 8.5], [120.0, 7.0], [124.0, 15.75], [125.0, 11.5], [127.0, 32.0], [126.0, 8.0], [128.0, 22.666666666666668], [130.0, 58.66666666666667], [135.0, 8.375], [134.0, 8.0], [133.0, 8.75], [132.0, 8.624999999999998], [131.0, 10.0], [129.0, 8.0], [139.0, 9.814814814814815], [143.0, 8.571428571428571], [142.0, 7.870967741935485], [141.0, 7.4], [140.0, 7.4], [138.0, 8.250000000000002], [136.0, 8.291666666666666], [149.0, 9.272727272727273], [151.0, 7.839285714285714], [150.0, 8.375000000000002], [148.0, 7.833333333333333], [147.0, 7.666666666666667], [146.0, 7.333333333333333], [145.0, 14.299999999999999], [144.0, 8.75], [159.0, 7.857142857142858], [158.0, 25.5], [157.0, 12.250000000000002], [156.0, 9.90909090909091], [155.0, 8.5], [154.0, 9.047393364928913], [153.0, 7.0], [152.0, 13.424242424242422], [167.0, 77.5], [166.0, 21.866666666666667], [164.0, 11.0], [163.0, 21.0], [162.0, 7.25], [161.0, 12.125], [160.0, 6.5], [168.0, 21.900000000000002], [173.0, 37.111111111111114], [175.0, 7.666666666666667], [174.0, 8.11904761904762], [172.0, 8.272727272727272], [171.0, 7.333333333333334], [170.0, 9.675675675675677], [169.0, 6.333333333333333], [182.0, 8.464285714285714], [183.0, 17.84782608695652], [181.0, 11.583333333333332], [180.0, 9.057471264367813], [179.0, 7.9555555555555575], [178.0, 10.857142857142858], [177.0, 7.333333333333334], [176.0, 7.8], [191.0, 19.53846153846154], [189.0, 7.0], [188.0, 21.6], [187.0, 8.5], [186.0, 9.589743589743591], [185.0, 22.4], [184.0, 16.153846153846153], [199.0, 8.3921568627451], [198.0, 8.196428571428571], [197.0, 7.414634146341463], [196.0, 8.083333333333334], [195.0, 7.666666666666666], [194.0, 9.0], [193.0, 8.25], [192.0, 8.076923076923077], [207.0, 18.13888888888889], [206.0, 8.0], [205.0, 15.142857142857142], [204.0, 23.25806451612903], [203.0, 32.733333333333334], [202.0, 13.979591836734693], [201.0, 16.454545454545457], [200.0, 8.897058823529411], [214.0, 8.15], [213.0, 7.6], [212.0, 7.4], [211.0, 10.678571428571427], [210.0, 13.6], [209.0, 29.0], [208.0, 13.933333333333334], [223.0, 8.200000000000001], [222.0, 7.833333333333333], [221.0, 7.521739130434784], [220.0, 8.112499999999997], [219.0, 8.181818181818183], [218.0, 7.400000000000001], [217.0, 7.425], [216.0, 8.0], [231.0, 16.64705882352941], [230.0, 17.285714285714285], [229.0, 15.500000000000004], [228.0, 8.666666666666666], [227.0, 9.25], [226.0, 9.294117647058824], [225.0, 11.525423728813559], [224.0, 8.000000000000002], [239.0, 22.333333333333332], [238.0, 7.0], [237.0, 8.428571428571429], [236.0, 8.0], [235.0, 7.512820512820512], [234.0, 9.5], [233.0, 13.636363636363638], [232.0, 15.5], [247.0, 15.181818181818183], [246.0, 41.42857142857143], [245.0, 10.823529411764707], [244.0, 8.75], [243.0, 10.577380952380958], [242.0, 7.933333333333334], [241.0, 9.325842696629213], [255.0, 18.153846153846153], [254.0, 19.84], [253.0, 8.0], [252.0, 7.3], [251.0, 16.307692307692307], [250.0, 14.777777777777777], [249.0, 26.22222222222222], [248.0, 17.11764705882353], [270.0, 13.214285714285714], [271.0, 58.249999999999986], [269.0, 14.874999999999998], [268.0, 11.0], [267.0, 8.8], [266.0, 8.000000000000002], [264.0, 6.9], [263.0, 8.041666666666666], [257.0, 11.76923076923077], [256.0, 20.2], [259.0, 12.357142857142854], [258.0, 22.333333333333332], [262.0, 7.838709677419353], [261.0, 7.0], [260.0, 7.9452054794520555], [272.0, 12.063492063492063], [273.0, 56.03703703703704], [274.0, 9.0], [284.0, 7.4], [275.0, 16.900000000000002], [276.0, 78.88235294117648], [277.0, 31.5], [278.0, 111.07692307692307], [279.0, 19.729411764705887], [285.0, 93.95774647887329], [287.0, 9.0], [283.0, 7.513761467889909], [282.0, 7.915492957746479], [281.0, 12.24242424242424], [280.0, 7.639999999999999], [286.0, 90.0], [301.0, 11.148514851485146], [291.0, 26.735294117647058], [292.0, 319.0], [293.0, 14.877551020408166], [295.0, 17.463414634146343], [288.0, 21.5], [290.0, 23.57142857142857], [289.0, 17.419354838709673], [294.0, 7.666666666666666], [298.0, 314.5], [300.0, 184.0], [303.0, 17.470588235294123], [302.0, 8.0], [299.0, 7.986666666666665], [297.0, 37.0], [296.0, 7.714285714285714], [318.0, 116.23076923076923], [308.0, 13.833333333333334], [310.0, 19.840579710144933], [309.0, 12.105263157894738], [311.0, 14.722222222222221], [315.0, 22.166666666666664], [316.0, 13.567164179104473], [306.0, 15.967741935483874], [305.0, 10.483516483516484], [304.0, 12.499999999999996], [319.0, 192.33333333333331], [317.0, 7.999999999999999], [314.0, 27.875], [313.0, 25.249999999999996], [312.0, 11.571428571428573], [333.0, 34.631578947368425], [322.0, 8.067796610169491], [320.0, 23.392857142857142], [323.0, 7.852941176470588], [327.0, 53.50000000000001], [326.0, 11.323529411764703], [325.0, 9.71153846153846], [324.0, 7.307692307692308], [334.0, 44.77083333333334], [335.0, 15.000000000000002], [332.0, 21.809523809523807], [331.0, 43.75], [330.0, 24.0], [329.0, 29.25], [328.0, 10.0], [348.0, 38.57142857142856], [344.0, 10.0], [338.0, 26.5], [337.0, 17.43243243243243], [336.0, 20.03947368421053], [339.0, 9.437499999999998], [343.0, 7.868421052631578], [342.0, 7.181818181818182], [341.0, 7.538461538461537], [340.0, 8.56578947368421], [347.0, 25.400000000000006], [351.0, 69.77419354838709], [350.0, 17.333333333333336], [349.0, 26.299999999999997], [346.0, 23.42857142857143], [345.0, 9.202898550724644], [366.0, 14.4], [352.0, 200.14285714285717], [353.0, 16.562499999999996], [359.0, 7.25], [358.0, 8.089743589743591], [357.0, 9.722222222222218], [356.0, 9.884615384615389], [354.0, 17.102409638554217], [360.0, 9.851851851851851], [363.0, 10.0], [367.0, 18.090909090909093], [365.0, 9.125], [364.0, 12.121621621621623], [355.0, 7.7586206896551735], [362.0, 7.893939393939394], [361.0, 7.0], [381.0, 13.818181818181818], [368.0, 117.42857142857143], [369.0, 64.5], [370.0, 19.0], [372.0, 128.61904761904762], [373.0, 9.486486486486484], [374.0, 60.5], [375.0, 24.814814814814813], [376.0, 25.125], [377.0, 19.23076923076923], [379.0, 19.624999999999996], [378.0, 19.933333333333334], [383.0, 14.363636363636363], [382.0, 30.071428571428573], [380.0, 20.304347826086957], [371.0, 15.583333333333332], [399.0, 9.347107438016529], [391.0, 17.22222222222222], [390.0, 8.629999999999999], [389.0, 15.032786885245903], [388.0, 8.5], [395.0, 9.999999999999998], [398.0, 8.424], [397.0, 14.42], [396.0, 12.333333333333332], [387.0, 9.212121212121211], [386.0, 8.23076923076923], [385.0, 11.214285714285715], [384.0, 26.5], [394.0, 14.876923076923083], [393.0, 11.860139860139858], [392.0, 10.449735449735448], [414.0, 8.0], [402.0, 16.073529411764703], [403.0, 9.674796747967482], [405.0, 12.666666666666671], [404.0, 18.235294117647058], [406.0, 18.129411764705885], [407.0, 7.5], [401.0, 7.891304347826087], [400.0, 7.8125], [415.0, 15.238095238095237], [409.0, 12.525751072961372], [408.0, 12.906976744186043], [413.0, 8.0], [412.0, 26.235294117647054], [411.0, 17.11904761904762], [410.0, 11.585585585585584], [430.0, 56.208333333333336], [424.0, 28.636363636363637], [417.0, 18.0], [425.0, 24.846153846153847], [431.0, 118.2], [429.0, 51.599999999999994], [419.0, 61.666666666666664], [418.0, 150.0], [427.0, 11.444444444444445], [426.0, 47.41666666666667], [423.0, 13.041666666666666], [416.0, 44.09090909090909], [422.0, 93.5], [421.0, 28.285714285714285], [420.0, 67.2], [446.0, 57.54999999999999], [437.0, 100.08333333333333], [436.0, 200.0], [447.0, 17.875000000000004], [445.0, 109.5], [444.0, 76.93333333333335], [443.0, 74.83333333333333], [442.0, 83.46666666666667], [440.0, 158.0], [439.0, 123.6], [433.0, 35.647058823529406], [432.0, 78.69565217391305], [435.0, 93.0], [434.0, 7.5], [438.0, 197.0], [462.0, 17.0], [450.0, 80.5], [449.0, 48.8], [448.0, 46.99999999999999], [451.0, 60.625], [455.0, 94.33333333333333], [454.0, 9.0], [453.0, 55.166666666666664], [460.0, 19.34615384615385], [461.0, 17.555555555555557], [463.0, 40.23287671232878], [459.0, 56.9], [458.0, 51.0], [457.0, 68.21739130434783], [456.0, 72.0], [478.0, 8.379310344827585], [471.0, 16.422222222222224], [465.0, 29.239130434782613], [467.0, 20.807692307692303], [466.0, 37.9047619047619], [470.0, 9.0], [469.0, 9.955882352941174], [468.0, 8.846153846153852], [479.0, 9.478260869565217], [477.0, 13.69512195121951], [476.0, 21.586206896551726], [475.0, 14.2], [474.0, 80.125], [473.0, 23.812500000000004], [472.0, 9.0], [494.0, 164.95238095238093], [486.0, 13.272727272727263], [485.0, 38.00000000000001], [484.0, 24.1875], [487.0, 19.473118279569906], [481.0, 23.22666666666666], [480.0, 8.72043010752688], [483.0, 27.09090909090909], [482.0, 37.0], [495.0, 80.60714285714286], [493.0, 6.0], [492.0, 10.820000000000002], [491.0, 10.229508196721316], [490.0, 12.953216374269019], [489.0, 16.88444444444445], [488.0, 9.191542288557228], [510.0, 8.5], [511.0, 19.53333333333333], [509.0, 23.2], [508.0, 37.72727272727273], [507.0, 39.478260869565226], [506.0, 89.66666666666667], [505.0, 40.50000000000001], [504.0, 38.666666666666664], [503.0, 16.260869565217387], [497.0, 7.0], [496.0, 23.153846153846153], [499.0, 32.67307692307692], [498.0, 25.990049751243795], [502.0, 25.764705882352946], [501.0, 10.166297117516633], [500.0, 17.714285714285715], [519.0, 9.666666666666666], [539.0, 247.8076923076923], [530.0, 36.96153846153845], [529.0, 195.6875], [543.0, 41.5], [528.0, 299.0], [541.0, 150.0], [542.0, 115.77419354838709], [532.0, 55.99999999999999], [531.0, 15.8], [533.0, 54.0], [535.0, 25.0], [534.0, 41.375], [536.0, 29.375], [518.0, 22.5], [517.0, 26.720000000000002], [516.0, 9.930232558139535], [515.0, 8.143589743589747], [514.0, 8.666666666666668], [513.0, 9.006993006993007], [512.0, 7.631578947368422], [526.0, 10.0], [525.0, 8.166666666666666], [524.0, 8.0], [523.0, 113.5], [521.0, 55.66666666666667], [520.0, 9.0], [537.0, 217.4035087719298], [538.0, 279.1363636363636], [550.0, 90.44444444444447], [548.0, 47.46666666666666], [546.0, 32.77777777777778], [544.0, 18.166666666666664], [549.0, 33.0], [551.0, 53.06666666666666], [568.0, 14.0], [570.0, 70.5], [569.0, 88.0], [571.0, 23.099999999999998], [572.0, 38.91666666666667], [573.0, 212.1818181818182], [574.0, 168.4], [575.0, 63.0], [555.0, 533.6666666666666], [553.0, 32.63636363636364], [552.0, 59.5], [556.0, 57.10526315789473], [557.0, 211.0], [558.0, 32.0], [559.0, 46.47619047619048], [560.0, 20.666666666666668], [565.0, 45.333333333333336], [563.0, 41.5], [562.0, 54.5], [561.0, 25.0], [567.0, 30.105263157894736], [566.0, 26.0], [605.0, 27.5], [577.0, 157.0], [580.0, 62.83333333333333], [579.0, 46.66666666666667], [578.0, 34.0], [582.0, 26.0], [581.0, 7.5], [601.0, 7.333333333333333], [600.0, 9.333333333333334], [604.0, 7.210526315789474], [602.0, 9.0], [585.0, 200.14285714285717], [584.0, 27.076923076923073], [587.0, 564.8], [591.0, 44.69999999999998], [576.0, 43.125], [590.0, 10.411764705882353], [589.0, 18.61538461538462], [588.0, 20.5], [592.0, 102.44444444444444], [593.0, 7.791666666666668], [595.0, 7.0], [594.0, 8.75], [597.0, 7.0], [596.0, 7.0], [599.0, 6.0], [598.0, 8.125], [606.0, 85.83333333333334], [607.0, 50.90909090909091], [632.0, 14.428571428571429], [622.0, 12.2], [611.0, 44.4], [612.0, 6.6], [613.0, 171.5], [615.0, 39.666666666666664], [614.0, 7.333333333333333], [639.0, 52.21428571428572], [624.0, 7.416666666666667], [638.0, 20.941176470588236], [637.0, 7.0], [636.0, 11.714285714285714], [635.0, 9.823529411764705], [634.0, 16.249999999999996], [633.0, 13.450000000000003], [617.0, 33.77777777777778], [616.0, 17.083333333333336], [618.0, 84.87500000000001], [621.0, 224.3], [620.0, 9.4], [619.0, 7.0], [623.0, 104.9642857142857], [610.0, 7.647058823529413], [608.0, 6.75], [625.0, 431.5625000000001], [631.0, 13.0], [630.0, 65.0], [629.0, 15.833333333333332], [628.0, 21.272727272727273], [626.0, 8.625000000000002], [667.0, 27.166666666666664], [644.0, 44.24999999999999], [641.0, 30.000000000000007], [640.0, 22.428571428571427], [642.0, 23.81818181818181], [643.0, 265.61904761904765], [646.0, 82.5], [645.0, 31.28571428571429], [647.0, 11.789473684210524], [653.0, 16.333333333333332], [652.0, 29.0], [651.0, 26.805555555555543], [650.0, 20.296296296296298], [649.0, 21.97826086956521], [648.0, 19.6875], [654.0, 12.0], [655.0, 13.360655737704919], [658.0, 40.16666666666666], [657.0, 7.363636363636365], [656.0, 9.436619718309858], [659.0, 9.910828025477711], [661.0, 7.627906976744187], [660.0, 9.038888888888886], [663.0, 14.442622950819672], [662.0, 8.0], [671.0, 32.0], [670.0, 26.266666666666666], [668.0, 113.5625], [666.0, 6.666666666666667], [665.0, 12.08510638297872], [669.0, 92.1304347826087], [675.0, 48.272727272727266], [674.0, 30.753623188405793], [673.0, 45.333333333333336], [672.0, 29.431818181818183], [676.0, 94.30434782608694], [678.0, 22.42857142857143], [681.0, 10.440594059405939], [680.0, 28.732142857142865], [682.0, 7.0], [684.0, 13.267441860465114], [683.0, 9.526315789473683], [685.0, 17.79746835443038], [686.0, 78.66037735849058], [687.0, 16.673913043478258], [689.0, 26.907894736842106], [699.0, 14.000000000000004], [698.0, 9.0], [696.0, 19.92911392405062], [679.0, 25.66666666666666], [700.0, 30.333333333333336], [701.0, 41.222222222222214], [703.0, 29.75], [688.0, 17.829268292682922], [702.0, 37.70588235294118], [691.0, 10.749999999999993], [690.0, 17.297101449275353], [693.0, 7.887323943661971], [692.0, 8.600000000000003], [695.0, 10.555555555555552], [694.0, 8.23529411764706], [729.0, 13.060606060606059], [706.0, 174.5384615384615], [705.0, 103.05882352941177], [708.0, 54.73076923076923], [707.0, 68.0], [709.0, 59.32352941176471], [711.0, 173.7058823529412], [710.0, 62.63157894736842], [728.0, 7.769230769230769], [730.0, 50.89743589743588], [731.0, 13.611111111111109], [735.0, 52.35714285714285], [721.0, 20.790322580645157], [720.0, 26.583333333333332], [723.0, 7.153846153846154], [722.0, 17.373333333333335], [734.0, 25.1734693877551], [733.0, 17.240000000000002], [732.0, 12.315789473684209], [713.0, 15.933797909407664], [712.0, 58.11764705882353], [715.0, 13.1], [714.0, 13.567415730337078], [716.0, 24.639999999999997], [717.0, 26.70114942528735], [718.0, 25.533333333333335], [719.0, 11.666666666666666], [724.0, 10.07189542483659], [727.0, 26.26315789473684], [726.0, 7.862068965517242], [725.0, 8.725490196078432], [764.0, 28.514285714285712], [737.0, 35.592105263157904], [736.0, 40.10416666666667], [742.0, 207.96428571428572], [741.0, 38.941176470588225], [740.0, 32.8], [739.0, 102.0], [738.0, 29.722222222222225], [743.0, 32.51898734177216], [761.0, 7.0], [760.0, 33.22727272727273], [763.0, 36.473684210526315], [762.0, 23.52777777777778], [745.0, 40.064935064935085], [744.0, 15.064808813998702], [746.0, 36.00892857142859], [747.0, 30.153374233128844], [750.0, 30.696864111498254], [749.0, 22.811320754716974], [748.0, 14.526153846153848], [751.0, 10.855871886121], [753.0, 27.240740740740737], [756.0, 37.50000000000002], [755.0, 36.303030303030305], [754.0, 37.92134831460674], [757.0, 24.172240802675592], [759.0, 45.88235294117648], [758.0, 23.979166666666664], [765.0, 18.666666666666668], [766.0, 81.25], [767.0, 87.29999999999998], [752.0, 14.875000000000002], [771.0, 13.031746031746033], [772.0, 26.950000000000003], [773.0, 17.285714285714285], [775.0, 17.49557522123894], [774.0, 9.93023255813953], [792.0, 34.46153846153847], [795.0, 41.86666666666667], [794.0, 29.8], [793.0, 55.142857142857146], [796.0, 10.5], [797.0, 29.333333333333332], [799.0, 32.333333333333336], [786.0, 31.619047619047617], [785.0, 30.875], [784.0, 33.57142857142857], [798.0, 48.4], [776.0, 149.88888888888889], [777.0, 8.350000000000001], [778.0, 15.136363636363637], [779.0, 29.5], [781.0, 17.21428571428571], [780.0, 8.333333333333334], [783.0, 18.875], [768.0, 7.4], [770.0, 10.428571428571425], [769.0, 24.4], [782.0, 25.0], [787.0, 37.4], [790.0, 125.27999999999999], [789.0, 60.5], [791.0, 114.83333333333333], [803.0, 73.75], [806.0, 116.875], [824.0, 53.0], [826.0, 55.166666666666664], [825.0, 41.5], [828.0, 69.0], [827.0, 61.66666666666667], [809.0, 50.285714285714285], [808.0, 43.55555555555556], [810.0, 167.9047619047619], [813.0, 255.33333333333334], [812.0, 49.33333333333333], [811.0, 59.75], [814.0, 137.125], [801.0, 60.99999999999999], [800.0, 53.81818181818183], [822.0, 60.666666666666664], [821.0, 33.57142857142858], [820.0, 43.0], [819.0, 41.666666666666664], [818.0, 38.0], [817.0, 47.5], [823.0, 29.285714285714285], [831.0, 446.00000000000006], [830.0, 57.0], [829.0, 49.0], [836.0, 473.75], [832.0, 208.59999999999994], [833.0, 714.6666666666667], [834.0, 973.0], [835.0, 22.0], [838.0, 347.8], [837.0, 47.416666666666664], [856.0, 48.33333333333333], [858.0, 97.0], [859.0, 35.0], [861.0, 40.75], [860.0, 74.0], [863.0, 33.125], [862.0, 40.75], [844.0, 31.333333333333336], [843.0, 74.5], [842.0, 50.5], [841.0, 80.0], [840.0, 74.25], [845.0, 36.2], [847.0, 94.0], [848.0, 117.0], [850.0, 89.66666666666666], [849.0, 54.699999999999996], [851.0, 80.00000000000001], [852.0, 219.6], [853.0, 44.5], [854.0, 108.5], [855.0, 62.5], [868.0, 28.0], [867.0, 24.4375], [866.0, 33.875], [865.0, 28.0], [864.0, 40.470588235294116], [869.0, 423.25], [871.0, 16.25], [870.0, 7.2], [888.0, 38.00000000000001], [890.0, 306.5], [889.0, 7.666666666666667], [891.0, 19.0], [892.0, 13.772727272727272], [893.0, 14.285714285714281], [894.0, 60.333333333333336], [895.0, 37.8], [880.0, 8.75], [872.0, 89.93333333333335], [873.0, 7.75], [875.0, 8.25], [874.0, 9.769230769230768], [876.0, 652.7777777777778], [878.0, 689.1666666666666], [877.0, 8.576923076923078], [879.0, 15.5], [881.0, 11.933333333333334], [883.0, 26.75], [882.0, 9.333333333333332], [884.0, 148.15384615384616], [887.0, 7.75], [886.0, 12.4], [885.0, 8.8], [925.0, 24.25], [898.0, 15.5], [900.0, 16.77777777777778], [899.0, 44.666666666666664], [902.0, 25.742857142857144], [901.0, 28.85714285714286], [920.0, 22.125], [903.0, 15.272727272727277], [922.0, 30.689655172413794], [921.0, 24.012987012987004], [905.0, 45.1], [904.0, 30.0], [907.0, 8.666666666666666], [906.0, 25.47169811320755], [909.0, 28.166666666666668], [908.0, 21.05], [911.0, 24.249999999999996], [897.0, 7.5], [896.0, 10.285714285714286], [910.0, 40.65789473684211], [916.0, 9.775510204081636], [915.0, 10.485981308411214], [914.0, 16.643724696356266], [913.0, 34.5], [912.0, 34.361111111111114], [917.0, 9.555232558139542], [919.0, 16.67164179104478], [918.0, 13.259259259259258], [927.0, 33.71874999999999], [926.0, 47.94444444444445], [924.0, 40.333333333333336], [923.0, 35.36363636363637], [956.0, 41.00000000000001], [959.0, 29.0], [945.0, 24.634285714285728], [944.0, 17.34710743801653], [947.0, 8.0], [946.0, 19.177142857142872], [949.0, 10.681159420289855], [948.0, 10.175438596491219], [958.0, 22.928571428571427], [957.0, 24.914634146341466], [955.0, 20.615384615384613], [954.0, 34.45454545454545], [953.0, 28.33333333333333], [952.0, 33.7943925233645], [943.0, 20.225806451612907], [928.0, 47.75], [930.0, 39.333333333333336], [929.0, 37.837837837837846], [932.0, 37.84615384615385], [931.0, 29.166666666666664], [935.0, 43.00000000000001], [934.0, 37.45], [942.0, 15.403726708074538], [941.0, 11.791666666666666], [940.0, 12.599999999999994], [939.0, 20.135135135135133], [938.0, 35.166666666666664], [937.0, 47.666666666666664], [936.0, 36.136363636363626], [951.0, 25.979274611398967], [950.0, 30.050847457627118], [988.0, 8.291666666666668], [991.0, 14.551724137931037], [977.0, 8.062500000000002], [976.0, 14.512820512820513], [979.0, 8.951048951048957], [978.0, 12.124031007751936], [981.0, 8.311475409836065], [980.0, 8.1], [990.0, 8.318181818181815], [989.0, 8.875], [987.0, 7.3], [986.0, 8.386363636363635], [985.0, 7.818181818181818], [984.0, 7.846153846153846], [975.0, 8.83333333333333], [961.0, 54.0], [960.0, 14.0], [963.0, 19.22222222222222], [962.0, 24.064516129032256], [965.0, 8.163366336633658], [964.0, 11.021531100478468], [967.0, 8.215686274509807], [966.0, 17.132075471698116], [974.0, 8.897058823529413], [973.0, 12.6969696969697], [972.0, 11.5328947368421], [971.0, 18.756097560975608], [970.0, 9.428571428571429], [969.0, 8.894736842105262], [968.0, 9.472826086956518], [983.0, 8.0], [982.0, 7.972222222222224], [1020.0, 138.24285714285713], [1019.0, 483.63440860215076], [1022.0, 60.396226415094354], [1023.0, 71.39999999999998], [1009.0, 9.148148148148149], [1008.0, 20.72222222222222], [1011.0, 14.999999999999995], [1010.0, 8.909090909090908], [1013.0, 8.266666666666667], [1012.0, 15.607142857142858], [1021.0, 47.72037914691939], [1018.0, 39.1], [1017.0, 27.46808510638298], [1016.0, 22.05263157894737], [1007.0, 16.57894736842105], [993.0, 8.288461538461535], [992.0, 8.148936170212764], [995.0, 7.5], [994.0, 7.804347826086956], [999.0, 93.0], [997.0, 7.428571428571429], [1006.0, 8.142857142857144], [1005.0, 11.301886792452832], [1004.0, 108.76948051948057], [1003.0, 81.0], [1001.0, 82.0], [1015.0, 20.07692307692308], [1014.0, 14.466666666666667], [1024.0, 71.83420697636878], [1.0, 74.0]], "isOverall": false, "label": "Get_Request", "isController": false}, {"data": [[911.1809839276395, 64.8507379153462]], "isOverall": false, "label": "Get_Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1024.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 158182.63333333333, "minX": 1.62512322E12, "maxY": 5011052.75, "series": [{"data": [[1.62512328E12, 2799176.8], [1.62512334E12, 5011052.75], [1.62512322E12, 195628.66666666666], [1.6251234E12, 178233.9]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62512328E12, 2484390.0], [1.62512334E12, 4447495.683333334], [1.62512322E12, 170834.06666666668], [1.6251234E12, 158182.63333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6251234E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9.268256333830122, "minX": 1.62512322E12, "maxY": 599.2962216624654, "series": [{"data": [[1.62512328E12, 91.68069302526885], [1.62512334E12, 31.00133008018436], [1.62512322E12, 552.7521048109949], [1.6251234E12, 9.268256333830122]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[1.62512328E12, 91.42581171237798], [1.62512334E12, 30.894181015919152], [1.62512322E12, 599.2962216624654], [1.6251234E12, 9.35424233957342]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6251234E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9.266812593144605, "minX": 1.62512322E12, "maxY": 599.2923173803548, "series": [{"data": [[1.62512328E12, 91.67853139844586], [1.62512334E12, 30.999332475323623], [1.62512322E12, 552.7493986254244], [1.6251234E12, 9.266812593144605]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[1.62512328E12, 91.42397331356517], [1.62512334E12, 30.89201786175771], [1.62512322E12, 599.2923173803548], [1.6251234E12, 9.352659029524066]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6251234E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62512322E12, "maxY": 6.228631402183095, "series": [{"data": [[1.62512328E12, 0.07058942137193518], [1.62512334E12, 0.0], [1.62512322E12, 0.0], [1.6251234E12, 0.0]], "isOverall": false, "label": "Post_Request", "isController": false}, {"data": [[1.62512328E12, 0.07276797627872478], [1.62512334E12, 0.0021283714397397095], [1.62512322E12, 6.228631402183095], [1.6251234E12, 0.0]], "isOverall": false, "label": "Get_Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6251234E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.62512322E12, "maxY": 11193.0, "series": [{"data": [[1.62512328E12, 4849.0], [1.62512334E12, 2426.0], [1.62512322E12, 11193.0], [1.6251234E12, 127.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62512328E12, 92.0], [1.62512334E12, 10.0], [1.62512322E12, 727.0], [1.6251234E12, 10.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62512328E12, 173.0], [1.62512334E12, 66.0], [1.62512322E12, 5661.820000000029], [1.6251234E12, 49.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62512328E12, 104.0], [1.62512334E12, 11.0], [1.62512322E12, 1904.9500000000007], [1.6251234E12, 11.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62512328E12, 3.0], [1.62512334E12, 3.0], [1.62512322E12, 3.0], [1.6251234E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62512328E12, 14.0], [1.62512334E12, 8.0], [1.62512322E12, 334.0], [1.6251234E12, 8.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6251234E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 15.0, "maxY": 2690.0, "series": [{"data": [[39135.0, 8.0], [20375.0, 13.0], [22419.0, 16.0], [24319.0, 14.0], [23683.0, 14.0], [24263.0, 8.0], [25515.0, 12.0], [25963.0, 11.0], [26887.0, 10.0], [29775.0, 9.0], [30227.0, 9.0], [31235.0, 9.0], [15.0, 2690.0], [30.0, 1265.0], [8845.0, 12.0], [37925.0, 9.0], [12867.0, 14.0], [14523.0, 12.0], [59.0, 22.0], [15693.0, 12.0], [63.0, 40.0], [16203.0, 12.0], [22698.0, 14.0], [23858.0, 12.0], [25154.0, 12.0], [25686.0, 12.0], [25990.0, 11.0], [26102.0, 11.0], [25978.0, 11.0], [29890.0, 9.0], [133.0, 9.0], [151.0, 11.0], [38732.0, 8.0], [182.0, 500.0], [209.0, 71.0], [225.0, 404.0], [233.0, 51.0], [265.0, 14.0], [266.0, 11.0], [272.0, 11.0], [319.0, 99.0], [338.0, 137.0], [341.0, 89.0], [362.0, 98.5], [358.0, 36.5], [364.0, 19.5], [369.0, 9.0], [375.0, 11.0], [411.0, 183.0], [401.0, 188.0], [403.0, 74.0], [414.0, 11.0], [427.0, 12.0], [463.0, 76.0], [455.0, 75.0], [465.0, 113.0], [492.0, 107.5], [510.0, 13.5], [509.0, 13.0], [34027.0, 9.0], [615.0, 94.0], [632.0, 158.5], [676.0, 14.0], [738.0, 97.5], [788.0, 15.0], [942.0, 20.0], [936.0, 34.0], [935.0, 18.0], [1001.0, 14.0], [16677.0, 12.0], [1090.0, 43.0], [1243.0, 75.0], [19877.0, 12.0], [1331.0, 122.0], [20481.0, 12.0], [21989.0, 13.0], [1430.0, 159.0], [23469.0, 14.0], [24049.0, 15.0], [24009.0, 13.0], [24345.0, 13.0], [1580.0, 242.0], [1584.0, 346.0], [1587.0, 364.0], [24713.0, 13.0], [1673.0, 390.0], [1707.0, 433.0], [26885.0, 10.0], [27649.0, 10.0], [28333.0, 9.0], [1789.0, 8.0], [28685.0, 9.0], [28937.0, 9.0], [29129.0, 10.0], [1871.0, 423.0], [30837.0, 9.0], [2107.0, 363.0], [2199.0, 298.0], [2291.0, 297.0], [36834.0, 9.0], [2328.0, 304.0], [2538.0, 253.0], [39058.0, 9.0], [2694.0, 285.0], [2814.0, 221.0], [2923.0, 222.0], [2900.0, 8.0], [3038.0, 59.5], [3110.0, 159.0], [3152.0, 114.5], [3172.0, 84.0], [3322.0, 113.0], [3230.0, 88.0], [3534.0, 61.0], [3545.0, 74.0], [3644.0, 65.0], [3739.0, 47.0], [3730.0, 63.0], [4313.0, 66.0], [4318.0, 8.0], [4344.0, 8.0], [4615.0, 72.0], [4642.0, 82.0], [5031.0, 59.0], [5586.0, 31.0], [5434.0, 8.0], [5652.0, 56.0], [5882.0, 8.0], [5969.0, 15.0], [5970.0, 8.0], [5990.0, 8.0], [6319.0, 16.0], [6152.0, 15.0], [6382.0, 12.0], [6398.0, 12.0], [6231.0, 8.0], [6343.0, 8.0], [6426.0, 13.0], [6642.0, 8.0], [6576.0, 8.0], [6775.0, 8.0], [6744.0, 13.0], [6771.0, 8.0], [6726.0, 8.0], [6737.0, 8.0], [6779.0, 8.0], [6783.0, 8.0], [6660.0, 8.0], [6681.0, 8.0], [6911.0, 8.0], [6824.0, 8.0], [6828.0, 8.0], [6960.0, 8.0], [7019.0, 8.0], [6975.0, 8.0], [7029.0, 8.0], [6915.0, 8.0], [6958.0, 8.0], [7057.0, 8.0], [6996.0, 8.0], [7218.0, 12.0], [7480.0, 12.0], [7752.0, 12.0], [9912.0, 12.0], [9982.0, 12.0], [39233.0, 8.0], [11210.0, 12.0], [11204.0, 11.0], [11922.0, 13.0], [13524.0, 14.0], [15728.0, 14.0], [15860.0, 16.0], [17032.0, 13.0], [16948.0, 12.0], [17716.0, 13.0], [19236.0, 13.0], [19208.0, 12.0], [20420.0, 13.0], [20016.0, 12.0], [21796.0, 12.0], [22764.0, 12.0], [23420.0, 13.0], [35088.0, 9.0], [36336.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 39233.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 15.0, "maxY": 2690.0, "series": [{"data": [[39135.0, 8.0], [20375.0, 13.0], [22419.0, 16.0], [24319.0, 14.0], [23683.0, 14.0], [24263.0, 8.0], [25515.0, 12.0], [25963.0, 11.0], [26887.0, 10.0], [29775.0, 9.0], [30227.0, 9.0], [31235.0, 9.0], [15.0, 2690.0], [30.0, 1265.0], [8845.0, 12.0], [37925.0, 9.0], [12867.0, 14.0], [14523.0, 12.0], [59.0, 22.0], [15693.0, 12.0], [63.0, 40.0], [16203.0, 12.0], [22698.0, 14.0], [23858.0, 12.0], [25154.0, 12.0], [25686.0, 12.0], [25990.0, 11.0], [26102.0, 11.0], [25978.0, 11.0], [29890.0, 9.0], [133.0, 9.0], [151.0, 11.0], [38732.0, 8.0], [182.0, 500.0], [209.0, 71.0], [225.0, 404.0], [233.0, 51.0], [265.0, 14.0], [266.0, 11.0], [272.0, 11.0], [319.0, 99.0], [338.0, 137.0], [341.0, 89.0], [362.0, 98.5], [358.0, 36.5], [364.0, 19.5], [369.0, 9.0], [375.0, 11.0], [411.0, 183.0], [401.0, 188.0], [403.0, 74.0], [414.0, 11.0], [427.0, 12.0], [463.0, 76.0], [455.0, 75.0], [465.0, 113.0], [492.0, 107.5], [510.0, 13.5], [509.0, 13.0], [34027.0, 9.0], [615.0, 94.0], [632.0, 158.5], [676.0, 14.0], [738.0, 97.5], [788.0, 15.0], [942.0, 20.0], [936.0, 34.0], [935.0, 18.0], [1001.0, 14.0], [16677.0, 12.0], [1090.0, 43.0], [1243.0, 75.0], [19877.0, 12.0], [1331.0, 122.0], [20481.0, 12.0], [21989.0, 13.0], [1430.0, 159.0], [23469.0, 14.0], [24049.0, 15.0], [24009.0, 13.0], [24345.0, 13.0], [1580.0, 242.0], [1584.0, 346.0], [1587.0, 364.0], [24713.0, 13.0], [1673.0, 390.0], [1707.0, 433.0], [26885.0, 10.0], [27649.0, 10.0], [28333.0, 9.0], [1789.0, 8.0], [28685.0, 9.0], [28937.0, 9.0], [29129.0, 10.0], [1871.0, 423.0], [30837.0, 9.0], [2107.0, 363.0], [2199.0, 298.0], [2291.0, 297.0], [36834.0, 9.0], [2328.0, 304.0], [2538.0, 253.0], [39058.0, 9.0], [2694.0, 285.0], [2814.0, 221.0], [2923.0, 222.0], [2900.0, 8.0], [3038.0, 59.5], [3110.0, 159.0], [3152.0, 114.5], [3172.0, 84.0], [3322.0, 113.0], [3230.0, 88.0], [3534.0, 61.0], [3545.0, 74.0], [3644.0, 65.0], [3739.0, 47.0], [3730.0, 63.0], [4313.0, 66.0], [4318.0, 8.0], [4344.0, 8.0], [4615.0, 72.0], [4642.0, 82.0], [5031.0, 59.0], [5586.0, 31.0], [5434.0, 8.0], [5652.0, 56.0], [5882.0, 8.0], [5969.0, 15.0], [5970.0, 8.0], [5990.0, 8.0], [6319.0, 16.0], [6152.0, 15.0], [6382.0, 12.0], [6398.0, 12.0], [6231.0, 8.0], [6343.0, 8.0], [6426.0, 13.0], [6642.0, 8.0], [6576.0, 8.0], [6775.0, 8.0], [6744.0, 13.0], [6771.0, 8.0], [6726.0, 8.0], [6737.0, 8.0], [6779.0, 8.0], [6783.0, 8.0], [6660.0, 8.0], [6681.0, 8.0], [6911.0, 8.0], [6824.0, 8.0], [6828.0, 8.0], [6960.0, 8.0], [7019.0, 8.0], [6975.0, 8.0], [7029.0, 8.0], [6915.0, 8.0], [6958.0, 8.0], [7057.0, 8.0], [6996.0, 8.0], [7218.0, 12.0], [7480.0, 12.0], [7752.0, 12.0], [9912.0, 12.0], [9982.0, 12.0], [39233.0, 8.0], [11210.0, 12.0], [11204.0, 11.0], [11922.0, 13.0], [13524.0, 14.0], [15728.0, 14.0], [15860.0, 16.0], [17032.0, 13.0], [16948.0, 12.0], [17716.0, 13.0], [19236.0, 13.0], [19208.0, 12.0], [20420.0, 13.0], [20016.0, 12.0], [21796.0, 12.0], [22764.0, 12.0], [23420.0, 13.0], [35088.0, 9.0], [36336.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 39233.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 714.7, "minX": 1.62512322E12, "maxY": 20108.516666666666, "series": [{"data": [[1.62512328E12, 11241.6], [1.62512334E12, 20108.516666666666], [1.62512322E12, 802.0666666666667], [1.6251234E12, 714.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6251234E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 715.7666666666667, "minX": 1.62512322E12, "maxY": 20124.516666666666, "series": [{"data": [[1.62512328E12, 11241.6], [1.62512334E12, 20124.516666666666], [1.62512322E12, 785.0], [1.6251234E12, 715.7666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6251234E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 357.8666666666667, "minX": 1.62512322E12, "maxY": 10062.466666666667, "series": [{"data": [[1.62512328E12, 5620.833333333333], [1.62512334E12, 10062.466666666667], [1.62512322E12, 397.0], [1.6251234E12, 357.9]], "isOverall": false, "label": "Get_Request-success", "isController": false}, {"data": [[1.62512328E12, 5620.766666666666], [1.62512334E12, 10062.05], [1.62512322E12, 388.0], [1.6251234E12, 357.8666666666667]], "isOverall": false, "label": "Post_Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6251234E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 715.7666666666667, "minX": 1.62512322E12, "maxY": 20124.516666666666, "series": [{"data": [[1.62512328E12, 11241.6], [1.62512334E12, 20124.516666666666], [1.62512322E12, 785.0], [1.6251234E12, 715.7666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6251234E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

